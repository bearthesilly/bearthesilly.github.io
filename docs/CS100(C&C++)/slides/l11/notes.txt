P6 原话记不得了，等我回宿舍拿 The Design and Evolution of C++ 找一下。但意思差不多。说“C++ 是面向对象语言”是不太合适的， C++ 本身对于程序员希望采用何种编程范式并没有限制，面向对象编程只是它支持的众多范式之一。

P7 C++20 是历史性的，它几乎实现了 Stroustrup 在 D&E 那本书里所畅想的全部特性。但我们 CS100 只用 C++17 ，原因有二：
1. 目前主流编译器对于 C++20 新特性的支持尚不完全（GCC 13 还剩 modules 未完全支持， Clang 和 Apple Clang 还有很多没有完全支持），我们难以写出真正的 C++20 风格的代码。
2. C++20 的新东西实在太多，塞不进来。

P12 `std::cin` 和 `std::cout` 是“对象”而非“函数”。要和学生强调术语的规范性。再比如，“调用”这个词一般只能用于函数， `#include <iostream>` 并不是在“调用标准库”，使用 `a` 和 `b` 的值也并不是在“调用 `a` 和 `b` ”。要正确地使用术语，不要自己发明术语，不要羞于使用术语而使用一些表意不明的口头语，不要乱用术语。

P19 我个人极不推荐使用 `using namespace std;` ，并且我自己从来不写。标准库的绝大多数名字都直接被放在 `std` 下，只有最近一些新标准的东西开始考虑更细致的名字空间划分，例如 `std::ranges`, `std::views` 。`using namespace std;` 会将标准库整个大杂烩所有名字都引入当前作用域，这非常令人不安。