{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"HomePage","text":"<p>Welcome to csrookie's website! This is the personal website of csrookie, dedicating to share info, resource and experience.</p> <p>I'm currently a student studying computer science in Shanghaitech University(\u4e0a\u6d77\u79d1\u6280\u5927\u5b66), Sophomore. I name my github repository 'csrookie' for, literally, I'm still a rookie in the field of cs. </p>"},{"location":"index.html#introduction","title":"Introduction","text":"<p>Currently interested in computer vision(Point Cloud) and computer graphics(Neural Radiance Field). I am also a little bit interested into the interpretability in Deep Learning. </p> <p>I have just finished the internship in 4DVLab on the work of AAAI 2025 (Aug 20th), proudly under the instruction and guidance of Prof.Yuexin Ma and senior Yiteng Xu. And I am currently looking for the next internship. </p> <p>For further resource and information, please refer to this link to my github homepage. If you want to contact me, feel free to email to: xiongzhzh2023@shanghaitech.edu.cn</p>"},{"location":"Blog/3DGS/note.html","title":"3DGS","text":"<p>3D Gaussian Splatting for Real-Time Radiance Field Rendering</p> <p>\u8bba\u6587\u94fe\u63a5</p>"},{"location":"Blog/3DGS/note.html#motivation","title":"Motivation","text":"<p>However, achieving high visual quality still requires neural networks that are costly to train and render, while recent faster methods inevitably trade off speed for quality.</p> <p>\u8f90\u5c04\u573a\u53d1\u5c55\u8fc5\u901f\uff0c\u4f46\u662f\u795e\u7ecf\u7f51\u7edc\u603b\u662f\u9762\u4e34\u7740quality(\u62df\u5408\u7a0b\u5ea6)\u4e0e\u65f6\u95f4\u7684trade-off\uff0c\u800c\u65f6\u95f4\u4e0efps\u53c8\u606f\u606f\u76f8\u5173\u3002\u4e8e\u662f\u80fd\u4e0d\u80fd\u5feb\u901f\u5730\u8fdb\u884c3D\u73af\u5883\u91cd\u5efa\u5462\uff1f\u8fd9\u7bc7\u5de5\u4f5c\u7684\u76ee\u6807\u4fbf\u662f\u5982\u6b64\uff1a</p> <p>We introduce three key elements that allow us to achieve state-of-the-art visual quality while maintaining competitive training times and importantly allow high-quality real-time (\u2265 30 fps) novel-view synthesis at 1080p resolution. </p> <p>\u4e09\u4e2akey elements\u5206\u522b\u662f\u4ec0\u4e48\u5462\uff1f</p> <ul> <li>Represent the scene with 3D Gaussians that preserve desirable properties of continuous volumetric radiance fields for scene optimization.</li> <li>Interleaved optimization/density control of the 3D Gaussians, notably optimizing anisotropic covariance to achieve an accurate representation of the scene.</li> <li>Develop a fast visibility-aware rendering algorithm that supports anisotropic splatting and both accelerates training and allows real-time rendering.</li> </ul>"},{"location":"Blog/3DGS/note.html#3d-gaussian-ellipsoid","title":"3D Gaussian Ellipsoid","text":"<p>\u5728CG geometry\u4e2d\u63d0\u5230\u8fc7Constructive Solid Geometry(CSG)\uff0c\u5c1d\u8bd5\u7528\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u4e4b\u95f4\u7684Boolean operations\u53bb\u5408\u6210\u590d\u6742\u7684\u51e0\u4f55\u4f53\uff0c\u4f46\u662f\u5982\u679c\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u592a\u591a\uff0c\u80af\u5b9a\u4e0d\u65b9\u4fbf\u7f51\u7edc\u548c\u4f18\u5316\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u9ad8\u5ea6\u53c2\u6570\u5316\u7684\u3001\u65b9\u4fbf\u4f18\u5316\u7684\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u5462\uff1f\u8bba\u6587\u4e2d\u521b\u65b0\u6027\u5730\u4f7f\u7528\u4e863D Gaussian Ellipsoid\u6765\u4f5c\u4e3a\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u3002\u4e2d\u5fc3\u70b9\u5b9a\u4e3a\u03bc (x, y, z)\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e2a\u534f\u65b9\u5dee\u77e9\u9635\uff08covariance matrix\uff09\u53bb\u5b9a\u4e49\u692d\u7403\u7684\u5927\u5c0f\u548c\u5f62\u72b6\u3002\u9ad8\u65af\u7528\u771f\u5b9e\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u534f\u65b9\u5dee\u77e9\u9635\u2211\u6765\u8fdb\u884c\u5b9a\u4e49\uff1a  </p> <p>\u4f46\u662f\u5728\u6e32\u67d3\u62102D\u7684\u65f6\u5019\uff0c\u8981\u4ee5\u6444\u50cf\u673a\u4e3a\u539f\u70b9\u7684\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u534f\u65b9\u5dee\u77e9\u9635\u8fdb\u884c\u53d8\u6362\uff0c\u4ece\u800c\u5f97\u5230\u6444\u50cf\u673a\u89c6\u89d2\u4e0b\u7684\u3001\u5c06\u8fdb\u884c\u5149\u6805\u5316\u76843D\u9ad8\u65af\u692d\u7403\uff1a\uff08\u53d8\u6362\u6709\u4e24\u70b9\uff1a\u4e00\u4e2a\u662ffrustum-&gt;cuboid\uff0ci.e.\uff0cprojective transformation\uff1b\u53e6\u4e00\u4e2a\u662ftranslation\uff0c\u5373viewing transformation\uff09</p> \\[ \\Sigma' = J W \\Sigma W^\\top J^\\top \\\\ where\\ W\\ is\\ the\\ viewing\\ transformation\\ and\\   J\\ is\\  Jacobian\\ \\\\ of\\ the\\ affine\\ approximation\\ of\\ projective\\ transformation \\] <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u516c\u5f0f\u957f\u6210\u8fd9\u6837\uff0c\u8fd9\u662f\u56e0\u4e3a\u6d89\u53ca\u5230\u4fdd\u6301\u534f\u65b9\u5dee\u77e9\u9635\u7684\u534a\u6b63\u5b9a\u6027\u8d28\u3002\u8fd9\u5728\u534f\u65b9\u5dee\u77e9\u9635\u53d8\u6362\u7684\u4e0a\u4e0b\u6587\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u786e\u4fdd\u53d8\u6362\u540e\u7684\u77e9\u9635\u4f9d\u7136\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002\u90a3\u4e48\u6b63\u5b9a\u77e9\u9635\u957f\u4ec0\u4e48\u6837\u5b50\u5462\uff1f\u5047\u8bbe\u6709\u4e00\u4e2a\u5355\u4f4d\u7403\uff0c\u7136\u540e\u6211\u5728\u4e09\u4e2a\u5750\u6807\u8f74\u65b9\u5411\u653e\u7f29\uff0c\u7136\u540e\u8fdb\u884c\u65cb\u8f6c\uff0c\u90a3\u4e48\u4e00\u4e2a\u5927\u81f4\u7684\u692d\u7403\u5c31\u51fa\u6765\u4e86\uff0c\u867d\u7136\u4e0d\u662f\u9ad8\u65af\u5206\u5e03\u3002\u56e0\u6b64\uff1aGiven a scaling matrix \ud835\udc46 and rotation matrix \ud835\udc45, we can find the corresponding \u03a3:</p> \\[ \\Sigma = R S S^\\top R^\\top \\] <p>\u6ce8\u610f\u5230\u8fd9\u4e2a\u77e9\u9635\u4e5f\u662f\u534a\u6b63\u5b9a\u7684\u3002R S\u77e9\u9635\u5b9a\u4e49\u4e86\u65b9\u5411\uff0c\u548c\u692d\u7403\u7684\u4e09\u4e2a\u8f74\u5411\u7684\u957f\u5ea6\uff0c\u7136\u540e\u914d\u5408\u7b2c\u4e00\u4e2aG(x)\u516c\u5f0f\u5bf9\u8868\u9762\u8fdb\u884c\u9ad8\u65af\u5206\u5e03\u3002\u8bba\u6587\u4e2d\u7528\u4e00\u4e2a\u4e09\u7ef4\u5411\u91cfs\u6765\u8868\u793a\u653e\u7f29\uff08xyz\u8f74\u653e\u7f29\u7cfb\u6570\uff09\u548c\u4e00\u4e2a\u56db\u5143\u6570q\u6765\u8868\u793a\u65cb\u8f6c\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u9ad8\u65af\u692d\u7403\u6765\u8bf4\uff0c\u8fd9\u4e2a\u662fexplicit representation\uff0c\u4f46\u662f\u7528\u9ad8\u65af\u692d\u7403\u8868\u793ageometry\u53c8\u662fimplicit representation\u3002\u5728\u4e0a\u8ff0\u7684\u5b9a\u4e49\u4e4b\u540e\uff0c\u57fa\u672c\u51e0\u4f55\u4f53\u2014\u2014\u9ad8\u65af\u692d\u7403\u7ec8\u4e8e\u5b9a\u4e49\u5b8c\u6bd5\uff0c\u9ad8\u5ea6\u7684\u53c2\u6570\u5316\u4f7f\u5f97\u5b83\u5bb9\u6613\u88ab\u4f18\u5316\uff08optimized\uff09\uff0c\u4e14\u8868\u9762\u7684explicit representation\u516c\u5f0f\u53ef\u5fae\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u3002</p>"},{"location":"Blog/3DGS/note.html#spherical-harmonic-for-color","title":"Spherical Harmonic for Color","text":"<p>\u4e00\u4e2a\u9ad8\u65af\u692d\u7403\u5e94\u8be5\u6709\u54ea\u4e9bproperty\uff1f\u9664\u4e863D Position\uff0c\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u8fd8\u5e94\u8be5\u6709\u4ec0\u4e48\uff1f\u9996\u5148\u60f3\u5230\u5e94\u8be5\u662f\u7c7b\u4f3c\u4e8eNeRF\u4e2d\u7684density\uff0c\u800c\u8bba\u6587\u4e2d\uff0c\u4e0d\u900f\u660e\u5ea6\u7528opacity \u03b1\u8868\u793a\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u57fa\u672c\u5355\u4f4d\u7684\u9ad8\u65af\u692d\u7403\uff0c\u53ea\u6709\u4e00\u4e2aopacity\u503c\u3002\u90a3\u4e48\u8fd8\u6709\u989c\u8272\u5462\uff1f\u8fd9\u5c31\u6709\u4e9b\u9ebb\u70e6\u4e86\uff0c\u56e0\u4e3a\u692d\u7403\u4e0a\u6709\u5f88\u591a\u7684\u70b9\uff0c\u4e0d\u50cfNeRF\u90a3\u6837\u7528\u5149\u7ebf\u65b9\u5411\u5411\u91cf\u5c31\u80fd\u77e5\u9053\u4e00\u4e2a\u70b9\u7684RGB\u503c\uff085D\u51fd\u6570\uff09\u3002\u90a3\u4e48\u5982\u4f55\u7ed9\u692d\u7403\u4e0a\u7684\u70b9\u6765\u4e00\u4e2a\"5D Function\"\u5462\uff1f\u8bba\u6587\u4e2d\u5c31\u4f7f\u7528\u4e86\u7403\u8c10\u51fd\u6570\u7684\u65b9\u6cd5\u62df\u5408\u989c\u8272\u3002</p> <p>\u7403\u8c10\u51fd\u6570\u53ef\u4ee5\u628a\u590d\u6742\u7684\u989c\u8272\u53d8\u5316\u7528\u4e00\u4e9b\u6570\u5b66\u51fd\u6570\u6765\u8868\u793a\uff0c\u5c31\u662f\u628a\u989c\u8272\u53d8\u5316\u5206\u89e3\u6210\u51e0\u4e2a\u7b80\u5355\u7684\u201c\u6ce2\u5f62\u201d\u3002\u7403\u8c10\u51fd\u6570\u7684\u9636\u6570 ll\u548c\u6b21\u6570 m\u51b3\u5b9a\u4e86\u63cf\u8ff0\u989c\u8272\u7684\u7ec6\u8282\u3002\u4f8b\u5982\uff0c\u4f4e\u9636\u7403\u8c10\u51fd\u6570\u53ef\u4ee5\u63cf\u8ff0\u5927\u7684\u989c\u8272\u53d8\u5316\uff08\u5982\u7403\u9762\u4e0a\u7684\u989c\u8272\u6e10\u53d8\uff09\uff0c\u800c\u9ad8\u9636\u7403\u8c10\u51fd\u6570\u53ef\u4ee5\u63cf\u8ff0\u5c0f\u7684\u3001\u7ec6\u5fae\u7684\u989c\u8272\u53d8\u5316\uff08\u5982\u9ad8\u5149\u6216\u53cd\u5c04\u7ec6\u8282\uff09\u3002\u901a\u8fc7\u4e00\u4e9b\u6570\u5b66\u516c\u5f0f\uff08\u901a\u5e38\u662f\u79ef\u5206\uff09\u6765\u8ba1\u7b97\u7403\u8c10\u7cfb\u6570 \\(c_l^m\\)\u3002\u8fd9\u4e9b\u7cfb\u6570\u544a\u8bc9\u6bcf\u4e2a\u7403\u8c10\u51fd\u6570\u5bf9\u989c\u8272\u7684\u8d21\u732e\u3002\u8fd9\u76f8\u5f53\u4e8e\u662f\u6cf0\u52d2\u5c55\u5f00\uff1a\u4e00\u4e2a\u692d\u7403\u4e0a\u7684\u989c\u8272\u53d8\u5316\u7528\u4e00\u4e2a\u51fd\u6570\u5f88\u96be\u5199\u51fa\u6765\uff0c\u6211\u5c31\u7528\u591a\u4e2a\u9891\u7387\u4e0d\u540c\u7684\u51fd\u6570\u53bb\u8868\u8fbe\uff0c\u7136\u540e\u8bb0\u5f55\u7684\u662f\u5404\u81ea\u51fd\u6570\u7684\u8868\u8fbe\u5f0f\u4e0e\u5404\u81ea\u51fd\u6570\u5bf9\u5e94\u7684\u6743\u91cd\u3002</p> <p>\u8ba1\u7b97\u7403\u8c10\u7cfb\u6570\u7684\u516c\u5f0f\uff1a\\(c_{l}^{m} = \\int_{0}^{2\\pi} \\int_{0}^{\\pi} C(\\theta, \\phi) \\, Y_{l}^{m*}(\\theta, \\phi) \\, \\sin \\theta \\, d\\theta \\, d\\phi\\)</p> <p>\u5176\u4e2d\uff0c\u7403\u8c10\u516c\u5f0f\\(Y_{l}^{m}(\\theta, \\phi)\\)\u7684\u5b9e\u6570\u5f62\u5f0f\uff1a  \u7528\u7403\u8c10\u7cfb\u6570\u8ba1\u7b97\u8868\u8fbe\u6700\u540e\u989c\u8272\uff1a\\(C(\\theta, \\phi) \\approx \\sum_{l=0}^{L} \\sum_{m=-l}^{l} c_{l}^{m} Y_{l}^{m}(\\theta, \\phi)\\)</p> <p>\u7528\\(C(\\theta, \\phi)\\)\u4e0a\u67e5\u9605xyz\u5750\u6807\u5c31\u80fd\u5f97\u5230RGB\u503c\uff0c\u56e0\u6b64\u8fd9\u79cd\u7c7b\u4f3c\u4e8e\u201c5D\u51fd\u6570\u201d\u7684\u4e1c\u897f\u7ec8\u4e8e\u8868\u8fbe\u51fa\u6765\u4e86\u3002\u8bba\u6587\u4e2d\uff0c\\(l=4\\)\uff0c\u56e0\u6b64\u4e00\u5171\u67091+3+5+7 = 16\u4e2a\u7403\u8c10\u57fa\u51fd\u6570\uff0c\u800cRGB\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u6709\u4e00\u4e2a\\(C(\\theta, \\phi)\\)\uff0c\u56e0\u6b64\u5173\u4e8e\u989c\u8272\u7684\u8868\u8fbe\u5c06\u4f1a\u4f7f\u75283*16 = 48\u4e2a\u53c2\u6570\uff08\u5f53\u7136\u6240\u6709\u76843D\u9ad8\u65af\u692d\u7403\u5171\u7528\u4e00\u5957\u7403\u8c10\u57fa\u51fd\u6570\uff09</p>"},{"location":"Blog/3DGS/note.html#tile-rasterization-rendering","title":"Tile-Rasterization &amp; \u03b1-Rendering","text":"<p>\u6709\u4e86\u4e00\u5806\u7684\u9ad8\u65af\u692d\u7403\uff0c\u6211\u8fd8\u77e5\u9053\u4e00\u6761\u5149\u7ebf\u89c6\u89d2\u4e0b\u7a7f\u8fc7\u70b9\u7684opacity\u4e0eRGB\uff0c\u5982\u4f55\u7efc\u5408\u5b83\u4eec\u5f97\u5230\u4e00\u4e2a\u6700\u7ec8\u7684RGB\u503c\u5462\uff1f\u8bba\u6587\u4e2d\u6ca1\u6709\u4f7f\u7528NeRF\u7684density\u90a3\u4e00\u5957\u9010pixel\u7684\u516c\u5f0f\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u9010tile(\u74e6\u7247)\u7684Alpha Rendering\u3002</p> <p>\u6211\u4eec\u7684\u65b9\u6cd5\u9996\u5148\u5c06\u5c4f\u5e55\u5212\u5206\u4e3a 16\u00d716 \u7684\u74e6\u7247\uff0c\u7136\u540e\u5bf9 3D \u9ad8\u65af\u70b9\u8fdb\u884c\u89c6\u9525\u4f53\u548c\u6bcf\u4e2a\u74e6\u7247\u7684\u5254\u9664\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u90a3\u4e9b\u5728\u89c6\u9525\u4f53\u4e2d\u5177\u6709 99% \u7f6e\u4fe1\u533a\u95f4\u7684\u9ad8\u65af\u70b9\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4fdd\u62a4\u5e26\u6765\u7b80\u5316\u5730\u5254\u9664\u90a3\u4e9b\u4f4d\u7f6e\u6781\u7aef\u7684\u9ad8\u65af\u70b9\uff08\u5373\u90a3\u4e9b\u5747\u503c\u63a5\u8fd1\u8fd1\u88c1\u526a\u9762\u5e76\u4e14\u8fdc\u79bb\u89c6\u9525\u4f53\u7684\u70b9\uff09\uff0c\u56e0\u4e3a\u8ba1\u7b97\u5b83\u4eec\u7684\u6295\u5f71 2D \u534f\u65b9\u5dee\u53ef\u80fd\u4f1a\u4e0d\u7a33\u5b9a\u3002\u7136\u540e\uff0c\u6211\u4eec\u6839\u636e\u6bcf\u4e2a\u9ad8\u65af\u70b9\u4e0e\u74e6\u7247\u7684\u91cd\u53e0\u6570\u91cf\u5b9e\u4f8b\u5316\u6bcf\u4e2a\u9ad8\u65af\u70b9\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u5206\u914d\u4e00\u4e2a\u7ed3\u5408\u4e86\u89c6\u7a7a\u95f4\u6df1\u5ea6\u548c\u74e6\u7247 ID \u7684\u952e\u3002\u63a5\u7740\uff0c\u6211\u4eec\u4f7f\u7528\u5feb\u901f\u7684 GPU \u57fa\u6570\u6392\u5e8f\uff08Radix Sort\uff09\u5bf9\u9ad8\u65af\u70b9\u8fdb\u884c\u6392\u5e8f\u3002\u6ce8\u610f\uff0c\u6ca1\u6709\u989d\u5916\u7684\u6bcf\u50cf\u7d20\u6392\u5e8f\uff0c\u800c\u662f\u6839\u636e\u8fd9\u79cd\u521d\u59cb\u6392\u5e8f\u8fdb\u884c\u6df7\u5408\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684 \u03b1-blending \u5728\u67d0\u4e9b\u914d\u7f6e\u4e0b\u53ef\u80fd\u662f\u8fd1\u4f3c\u7684\u3002\u7136\u800c\uff0c\u5f53\u9ad8\u65af\u70b9\u7684\u5c3a\u5bf8\u63a5\u8fd1\u5355\u4e2a\u50cf\u7d20\u65f6\uff0c\u8fd9\u4e9b\u8fd1\u4f3c\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u79cd\u9009\u62e9\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u8bad\u7ec3\u548c\u6e32\u67d3\u6027\u80fd\uff0c\u540c\u65f6\u5728\u6536\u655b\u573a\u666f\u4e2d\u6ca1\u6709\u4ea7\u751f\u660e\u663e\u7684\u4f2a\u5f71\u3002</p> <p>\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u74e6\u7247\u751f\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u901a\u8fc7\u786e\u5b9a\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u6309\u6df1\u5ea6\u6392\u5e8f\u7684\u6761\u76ee\uff0c\u8fd9\u4e9b\u6761\u76ee\u6295\u5f71\u5230\u7ed9\u5b9a\u7684\u74e6\u7247\u4e0a\u3002\u5bf9\u4e8e\u5149\u6805\u5316\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u74e6\u7247\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u5757\u3002\u6bcf\u4e2a\u5757\u9996\u5148\u534f\u4f5c\u5730\u5c06\u9ad8\u65af\u70b9\u5305\u52a0\u8f7d\u5230\u5171\u4eab\u5185\u5b58\u4e2d\uff0c\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\uff0c\u6309\u524d\u5230\u540e\u904d\u5386\u5217\u8868\uff0c\u7d2f\u79ef\u989c\u8272\u548c \u03b1 \u503c\uff0c\u4ece\u800c\u6700\u5927\u5316\u6570\u636e\u52a0\u8f7d/\u5171\u4eab\u548c\u5904\u7406\u7684\u5e76\u884c\u6027\u3002\u5f53\u50cf\u7d20\u7684 \u03b1 \u8fbe\u5230\u76ee\u6807\u9971\u548c\u5ea6\u65f6\uff0c\u76f8\u5e94\u7684\u7ebf\u7a0b\u505c\u6b62\u3002\u5b9a\u671f\u67e5\u8be2\u74e6\u7247\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5f53\u6240\u6709\u50cf\u7d20\u7684 \u03b1 \u9971\u548c\uff08\u5373 \u03b1 \u8fbe\u5230 1\uff09\u65f6\uff0c\u6574\u4e2a\u74e6\u7247\u7684\u5904\u7406\u7ec8\u6b62\u3002</p> <p>\u5728\u5149\u6805\u5316\u8fc7\u7a0b\u4e2d\uff0c\u03b1 \u7684\u9971\u548c\u5ea6\u662f\u552f\u4e00\u7684\u505c\u6b62\u6807\u51c6\u3002\u4e0e\u4e4b\u524d\u7684\u5de5\u4f5c\u4e0d\u540c\uff0c\u6211\u4eec\u4e0d\u9650\u5236\u63a5\u6536\u68af\u5ea6\u66f4\u65b0\u7684\u6df7\u5408\u539f\u8bed\u7684\u6570\u91cf\u3002\u6211\u4eec\u5f3a\u5236\u6267\u884c\u8fd9\u4e00\u5c5e\u6027\uff0c\u4ee5\u4fbf\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u5904\u7406\u5177\u6709\u4efb\u610f\u6df1\u5ea6\u590d\u6742\u6027\u7684\u573a\u666f\uff0c\u5e76\u51c6\u786e\u5b66\u4e60\u8fd9\u4e9b\u573a\u666f\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u573a\u666f\u7279\u5b9a\u7684\u8d85\u53c2\u6570\u8c03\u4f18\u3002\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u6062\u590d\u524d\u5411\u4f20\u64ad\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u7684\u5b8c\u6574\u6df7\u5408\u70b9\u5e8f\u5217\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u4efb\u610f\u957f\u7684\u6df7\u5408\u70b9\u5217\u8868\u5b58\u50a8\u5728\u5168\u5c40\u5185\u5b58\u4e2d\u3002\u4e3a\u4e86\u907f\u514d\u52a8\u6001\u5185\u5b58\u7ba1\u7406\u7684\u5f00\u9500\uff0c\u6211\u4eec\u9009\u62e9\u518d\u6b21\u904d\u5386\u6bcf\u4e2a\u74e6\u7247\u7684\u5217\u8868\uff1b\u6211\u4eec\u53ef\u4ee5\u91cd\u7528\u524d\u5411\u4f20\u64ad\u4e2d\u7684\u9ad8\u65af\u70b9\u6392\u5e8f\u6570\u7ec4\u548c\u74e6\u7247\u8303\u56f4\u3002\u4e3a\u4e86\u65b9\u4fbf\u68af\u5ea6\u8ba1\u7b97\uff0c\u6211\u4eec\u73b0\u5728\u4ece\u540e\u5411\u524d\u904d\u5386\u8fd9\u4e9b\u5217\u8868\u3002</p>"},{"location":"Blog/3DGS/note.html#pipeline","title":"Pipeline","text":"<p>\u89c1\u4e0a\u56fe\u3002\u7f51\u7edc\u8f93\u5165\u4e3a\u4e00\u5806\u7684\u7167\u7247\u4ee5\u53ca\u5bf9\u5e94\u7684\u76f8\u673a\u65b9\u5411\u4e0e\u4f4d\u7f6e\uff0c\u9996\u5148\u901a\u8fc7SfV(Structure from Motion)\u65b9\u6cd5\u62df\u5408\u51fa\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u7cfb\u5217\u70b9\uff0c\u7136\u540e\u5404\u81ea\u4e3a\u4e2d\u5fc3\u70b9\u521d\u59cb\u5316\u9ad8\u65af\u692d\u7403\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u7403\u8c10\u7cfb\u6570\uff0copacity\uff0c\u4ee5\u53cas\u5411\u91cf(\u8d1f\u8d23scale)\u4e0e\u56db\u5143\u6570q\uff08\u8d1f\u8d23\u65cb\u8f6c\uff09\u3002\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u4e09\u7ef4\u573a\u666f\u5728\u4e00\u4e2a\u6444\u50cf\u673a\u89c6\u89d2\u4e0b\u8fdb\u884c\u6295\u5f71\uff0c\u7136\u540e\u7528\u53ef\u5fae\u5206tile-rasterizer\u8fdb\u884c\u5149\u6805\u5316\u6210\u50cf\uff0c\u5f97\u5230image\uff0c\u7136\u540e\u4e0eground truth\u8fdb\u884c\u6bd4\u8f83\u7b97\u51faloss\uff0c\u7136\u540e\u53cd\u5411\u4f20\u64ad\uff0c\u66f4\u65b0Rasterizer, Projection, 3D Gaussians\u53c2\u6570\u3002</p> <p>Loss\u4e3a\u4e24\u5f20\u56fe\u7247\u7684\\(L1\\ Loss\\) \u4e0e\\(D-SSIM\\ Loss\\)\uff08Structural Similarity Index Measure\uff09\u7684\u7ed3\u5408\uff1a  \u57fa\u4e8e\u68af\u5ea6\u81ea\u9002\u5e94\u6539\u53d8\u70b9\u4e91\u5206\u5e03\u65b9\u5f0f(Adaptive Density Control)\uff1a\u5728\u6bcf\u9694\u4e00\u5b9aepoch\u6570\u91cf\u4e4b\u540e\u8fdb\u884c\u4e00\u6b21\uff0c\u51b3\u5b9a\u662f\u5426\u66f4\u65b0\u70b9\u4e91\u7684\u5206\u5e03\u3002\u7b2c\u4e00\u79cd\u662fPruning\uff0c\u51cf\u5c11\u4f2a\u5f71\u7684\u51fa\u73b0\uff1a\u5176\u4e2d\u4e0d\u900f\u660e\u5e95\u4f4e\u4e8e\u9608\u503c\u7684\uff0c\u6216\u8005\u79bb\u76f8\u673a\u592a\u8fd1\u7684\u4f1a\u88ab\u5220\u6389\u3002</p> <p>\u7b2c\u4e8c\u79cd\u662fDensification\uff0c\u8fc7\u5ea6\u91cd\u6784\u6216\u6b20\u91c7\u6837\uff08\u8fd9\u4e00\u90e8\u5206\u5c31\u4f1a\u57fa\u4e8e\u68af\u5ea6\u6765\u8fdb\u884c\u5224\u65ad\uff09\u3002\u6709\u7684\u65f6\u5019\uff0c\u9ad8\u65af\u692d\u7403\u4f1a\u4e0d\u4f1a\u8fc7\u5c11\u6216\u8fc7\u591a\uff1f\u5f53\u7136\u6709\u53ef\u80fd\uff0c\u5982\u679c\u5b8c\u5168\u4f9d\u8d56\u521d\u59cb\u5316\u7684\u70b9\u4e91\uff0c\u90a3\u4e48\u5c31\u6709\u4e9b\u4e0d\u5408\u9002\u4e86\u3002\u5982\u4e0b\u56fe\uff1a\u4e24\u4e2a</p> <p></p> <p>\u5bf9\u4e8e\u4e0a\u4e0b\u4e24\u4e2a\u539f\u6765\u7684\u9ad8\u65af\u692d\u7403\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u68af\u5ea6\u65e0\u7591\u662f\u5f88\u5927\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u5224\u65ad\u8fd9\u4e2a\u9ad8\u65af\u692d\u7403\u7684\u65b9\u5dee\uff1a\u5982\u679c\u8fc7\u5c0f\uff0c\u5c31\u8bf4\u660e\u662f\u7b2c\u4e00\u884c\u7684\u60c5\u51b5\uff0c\u9700\u8981clone\u51fa\u53e6\u5916\u4e00\u4e2a\u9ad8\u65af\u692d\u7403\u5e2e\u5fd9\u8fdb\u884c\u62df\u5408\uff1b\u5982\u679c\u8fc7\u5c0f\uff0c\u8bf4\u660e\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u9700\u8981\u8fd9\u4e2a\u5927\u9ad8\u65af\u692d\u7403\u5206\u88c2\u6210\u4e24\u4e2a\u5c0f\u7684\uff0c\u4ece\u800c\u66f4\u597d\u5730\u62df\u5408\u3002</p> <p>\u90a3\u4e48\u4e0a\u8ff0\u5c31\u662f3D\u9ad8\u65af\u6cfc\u6e85\u7684\u5927\u81f4\u6d41\u7a0b\u4e86\u3002\u4e0b\u9762\u662f\u5173\u4e8e\u5b83\u7684\u4f2a\u4ee3\u7801\u56fe(source link)\uff1a</p> <p></p>"},{"location":"Blog/AAAI2025/log.html","title":"Log","text":"<p>\u4eca\u5929\u662f2024\u5e746\u670822\u65e5, \u4e3a\u4e86\u5b8c\u62108.15\u622a\u7a3f\u7684AAAI\u7684\u7ec4\u5185\u4efb\u52a1, \u6211\u51b3\u5b9a\u5199\u4e00\u4e2a\u65e5\u5fd7, \u8bb0\u5f55\u6211\u7684\u5de5\u4f5c:</p>"},{"location":"Blog/AAAI2025/log.html#622","title":"6.22","text":"<p>\u4e4b\u524dMotionGPT\u5b9e\u9a8c\u590d\u73b0\u7684iteration\u6570\u91cf\u4e0d\u591f, \u4e8e\u662f\u52a0\u5927\u4e86\u8bad\u7ec3\u91cf. \u4f46\u662f\u5728pretrain\u4e3a260\u8f6e, \u603b\u8fed\u4ee3\u5c06\u8fd1300K\u7684\u5b9e\u9a8c\u4e4b\u540e, \u4f9d\u7136, \u5728\u4e0dfinetune\u7684\u60c5\u51b5\u4e0b, R3\u51c6\u786e\u5ea6\u8fd8\u662f\u4e0d\u5c3d\u4eba\u610f. \u4e0d\u597d\u4e0d\u574f\u7684\u6d88\u606f\u662f, \u8fd9\u4e2a\u6570\u636e\u73b0\u5728\u662f0.57(t2m), \u548c\u4e4b\u524d\u7684finetune\u540e\u7684\u6a21\u578b\u6c34\u5e73\u5dee\u4e0d\u591a\u4e00\u6837; \u8fd8\u6709\u53e6\u4e00\u4e2a\u4e0d\u597d\u4e0d\u574f\u7684\u6d88\u606f, \u90a3\u5c31\u662fissue\u91cc\u9762\u4e24\u4e2a\u5e16\u5b50\u53cd\u9988\u4e86\u5b9e\u9a8c\u590d\u73b0\u6570\u636e\u548c\u8bba\u6587\u6570\u636e\u4e0d\u4e00\u6837\u7684\u95ee\u9898. </p> <p></p> <p></p> <p>\u6ca1\u6709finetune\u7684<code>epoch=260</code>\u7684\u6a21\u578b\u7684t2m\u7684\u6d4b\u8bd5\u7ed3\u679c: </p> <p></p> <p>\u800c\u4e14\u4ecehuggingface\u4e0b\u4e0b\u6765\u4e86\u6a21\u578b, test t2m\u7684\u7ed3\u679c\u4e5f\u662f0.66\u5de6\u53f3(\u8fd9\u4e00\u70b9\u5728\u4e0a\u9762\u7684issue\u91cc\u9762\u4e5f\u53cd\u6620\u8fc7), \u4e5f\u8fdc\u4f4e\u4e8e\u8bba\u6587\u91cc\u9762\u7684\u6570\u636e. \u6240\u4ee5\u8bf4\u4e0d\u6e05\u9664\u662f\u4ec0\u4e48\u539f\u56e0, \u53ef\u80fd\u662f\u670d\u52a1\u5668\u7684\u4e0d\u540c? </p> <p>\u540c\u65f6, test\u6570\u636e\u96c6\u7684corrupt\u95ee\u9898\u4e5f\u662f\u4e9f\u5f85\u89e3\u51b3\u7684. \u975e\u5e38\u5947\u5999\u7684\u662f, \u8bad\u7ec3\u7684\u65f6\u5019, config\u6587\u4ef6\u91cc\u9762\u9ed8\u8ba4\u7684eval\u9636\u6bb5\u7528\u7684\u662ftest split. \u800c\u4e14\u6d4b\u8bd5\u7684\u65f6\u5019\u4e5f\u662ftest. </p> <p>test\u6570\u636e\u96c6\u6709corruption\u7684\u95ee\u9898, \u4e5f\u662fissue\u91cc\u9762\u6709\u4eba\u53cd\u5e94\u7684. </p> <p></p> <p>\u73b0\u5728<code>epoch=260(300K iteration)</code>\u7684<code>pretrain model</code>\u5728\u8fdb\u884cfinetuning, \u4f46\u662f\u6211\u8ba4\u4e3a\u60c5\u51b5\u4ecd\u7136\u4e0d\u662f\u5f88\u4e50\u89c2. </p> <p>\u5173\u4e8em2t\u7684test, \u53d1\u73b0\u4e86\u5f88\u591a\u7a0b\u5e8f\u4e0a\u7684bug\u548c\u5de5\u4f5c. \u9996\u5148\u5c31\u662f\u4ecehugging face\u4e0a\u9762\u4e0b\u8f7d distilbert-base-uncased \u4ee5\u53ca roberta-large. \u7136\u540e\u5c31\u662fnlgmetricverse\u91cc\u9762load_metric(\"bleu\")\u7684\u65f6\u5019, _download_and_prepare\u662f\u4ece\u7f51\u4e0a\u4e0b\u8f7dbleu.py\u7684. \u4e8e\u662f\u6211\u624b\u52a8\u4e0b\u8f7d, \u7136\u540e\u4e0a\u4f20\u5230\u4e86\u670d\u52a1\u5668: \u5177\u4f53\u66f4\u6539\u5982\u4e0b:</p> <pre><code># \u539f\u6765: \ndef _download_and_prepare(self, dl_manager) -&gt; None:\n        nmt_source = \"https://raw.githubusercontent.com/tensorflow/nmt/0be864257a76c151eef20ea689755f08bc1faf4e/nmt/scripts/bleu.py\"\n        self.external_module_path = dl_manager.download(nmt_source)\n# \u540e\u6765: \ndef _download_and_prepare(self, dl_manager) -&gt; None:\n        nmt_source = \"https://raw.githubusercontent.com/tensorflow/nmt/0be864257a76c151eef20ea689755f08bc1faf4e/nmt/scripts/bleu.py\"\n        pre_source = \"/(......)/MotionGPT-main/mGPT/metrics/bleu/bleu.py\"\n        self.external_module_path = dl_manager.download(pre_source)\n</code></pre> <p>\u7136\u540e\u5c31\u662fnlg\u76f8\u5173\u7684\u8bc4\u4ef7metric(\u8fd9\u91cc\u771f\u7684\u662f\u5f88\u62bd\u8c61):</p> <pre><code># \u539f\u6765: \nfor k in range(1, self.bleu_k + 1):\n            metrics[f\"Bleu_{str(k)}\"] = torch.tensor(scores[f'bleu_{str(k)}'], \n                                                     device=self.device)\n# \u540e\u6765:\nfor k in range(1, self.bleu_k + 1):\n            metrics[f\"Bleu_{str(k)}\"] = torch.tensor(scores[f'bleu_{str(k)}'], dtype=torch.float32,\n                                                     device=self.device)\n# \u518d\u540e\u6765:\nmetrics[f\"Bleu_{str(1)}\"] = torch.tensor(scores[f'bleu_{str(1)}']['score'], dtype=torch.float32,\n                                                     device=self.device)\n        metrics[f\"Bleu_{str(4)}\"] = torch.tensor(scores[f'bleu_{str(4)}']['score'], dtype=torch.float32,\n                                                     device=self.device) \n</code></pre> <p>\u56e0\u4e3a\u8bba\u6587\u91cc\u9762\u53ea\u663e\u793a\u4e86bleu@1 4\u7684\u6570\u636e, \u56e0\u6b64\u5728\u4e0a\u9762\u7684\u4fee\u6539\u4e2d\u6211\u4e5f\u53ea\u5f55\u5165\u4e86\u8fd9\u4e24\u4e2a\u6570\u636e; \u6309\u7167\u539f\u6765\u7684\u4ee3\u7801, \u90a3\u4e48\u5c31\u5e94\u8be5\u5728m2t.py\u91cc\u9762\u7684\u5bf9\u5e94\u5185\u5bb9, \u5c06\u56db\u79cd\u6570\u636e\u90fd\u8fdb\u884c\u5f55\u5165(\u89c1\u4e0b):</p> <pre><code>if self.cfg.model.params.task == 'm2t':\n            from nlgmetricverse import NLGMetricverse, load_metric\n            metrics = [\n                load_metric(\"bleu\", resulting_name=\"bleu_1\", compute_kwargs={\"max_order\": 1}),\n                load_metric(\"bleu\", resulting_name=\"bleu_2\", compute_kwargs={\"max_order\": 2}),\n                load_metric(\"bleu\", resulting_name=\"bleu_3\", compute_kwargs={\"max_order\": 3}),\n                load_metric(\"bleu\", resulting_name=\"bleu_4\", compute_kwargs={\"max_order\": 4}),\n                load_metric(\"rouge\"),\n                load_metric(\"cider\"),\n            ]\n            self.nlg_evaluator = NLGMetricverse(metrics)\n</code></pre> <p>\u4fee\u597d\u4e86\u8fd9\u4e9bbug, \u6211\u6765\u6d4b\u8bd5\u4e00\u4e0b\u6ca1\u6709finetune\u7684<code>epoch=260</code>\u7684pretrain model. \u8fd9\u4e00\u6b21\u7ed3\u679c\u975e\u5e38\u63a5\u8fd1\u5b9e\u9a8c\u7ed3\u679c, \u4f46\u662f\u4ecd\u7136, bert@4score\u548ccider\u6570\u636e\u76f8\u6bd4\u4e8e\u8bba\u6587\u6570\u636e\u6709\u5dee\u8ddd: </p> <p></p> <p>\u4e0b\u9762\u662f\u8bba\u6587\u7684\u6570\u636e(\u5355\u4f4d\u8981\u6ce8\u610f\u4e00\u4e0b)</p> <p></p> <p>\u4f46\u662f\u540c\u6837, issue\u91cc\u9762\u6709\u4eba\u53cd\u6620\u8fc7: </p> <p></p> <p>\u540c\u6837\u7684, \u6211\u518d\u6d4b\u8bd5\u4e86\u4e00\u4e0bhugging face\u4e0a\u9762\u7ed9\u51fa\u7684\u6a21\u578b\u53c2\u6570(m2t), \u6570\u636e\u5982\u4e0b: </p> <p></p>"},{"location":"Blog/AAAI2025/log.html#624","title":"6.24","text":"<p>\u4eca\u5929\u5b9e\u73b0\u6570\u636e\u4eff\u771f. \u9700\u8981\u5c06\u4e00\u4e2asmpl\u6a21\u578b\u8f6c\u5316\u4e3a\u8eab\u4f53\u5168\u90e86890\u4e2a\u70b9\u8fd8\u539f\u51fa\u6765, \u7136\u540e\u6a21\u62df\u4e00\u4e2a\u6fc0\u5149\u96f7\u8fbe\u53bb\u626b\u8fd9\u4e2a\u4eba. \u5f97\u5230\u7684\u6570\u636e\u662f384\u4e2a\u70b9, \u800c\u4e14\u90fd\u662f\u96f7\u8fbe\u626b\u5230\u7684\u4e00\u9762\u7684\u70b9. \u4e00\u5f00\u59cb\u626b\u5230\u7684\u70b9\u5927\u7ea6\u662f300\u5de6\u53f3(\u6fc0\u5149\u96f7\u8fbe\u79bb\u4eba\u8ddd\u79bb\u8bbe\u4e3a\u4e868), \u7136\u540e\u7ecf\u8fc7FPS\u91c7\u6837\u9009\u51fa384\u4e2a\u70b9. \u8bf4\u5b9e\u8bdd, \u8fd9\u4e9b\u70b9\u6bd4\u8f83\u62bd\u8c61, \u6211\u90fd\u6709\u70b9\u96be\u901a\u8fc7\u4e00\u4e32\u8fd9\u6837\u7684\u70b9\u4e91\u731c\u6d4b\u8fd9\u4e2a\u4eba\u5728\u5e72\u4ec0\u4e48. </p> <p>\u5173\u4e8e\u4eff\u771f\u4ee3\u7801, \u611f\u8c22\u859b\u5b66\u957f\u7684\u5de5\u4f5c, \u5728\u4ed6\u7684\u4ee3\u7801\u57fa\u7840\u4e0a, \u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u53bb\u6279\u91cf\u8f6c\u6362smpl\u7684npy\u6587\u4ef6(\u8fd9\u4e9b\u6587\u4ef6\u683c\u5f0f\u662f<code>(T, 22, 3)# T\u4e3a\u65f6\u95f4\u6b65\u957f</code>), \u8f6c\u5316\u4e3a\u70b9\u4e91\u7684npy\u6587\u4ef6(<code>(T, 384, 3)</code>). \u524d\u9762\u4ee3\u8868\u7684\u662f22\u4e2a\u5173\u8282\u70b9\u7684\u65cb\u8f6c\u77e9\u9635, \u540e\u9762\u662f384\u4e2a\u70b9\u7684\u4e09\u7ef4\u5750\u6807. </p> <p>\u6709\u5173joint\u7684\u7ec6\u8282, \u539f\u4ee3\u7801\u4e2d\u662f24\u4e2a\u5173\u8282, \u800chumanml3D\u7684\u662f22\u4e2a\u5173\u8282, \u5c11\u4e86\u624b\u8155\u7684\u65cb\u8f6c\u77e9\u9635(\u53ef\u80fd). \u6240\u4ee5\u8bf4\u4f1a\u572822\u7ef4\u7684\u57fa\u7840\u4e0a\u8fdb\u884cpadding, \u8865\u621024\u7ef4.</p> <p>\u7136\u540e\u5c31\u662f\u6570\u636e\u96c6\u672c\u8eab\u7684\u95ee\u9898\u4e86. 7975\u6587\u4ef6\u662fcorrupted, \u7136\u540e\u6ca1\u67099707\u4e0e11059\u6587\u4ef6(M\u5f00\u5934\u7684\u5bf9\u5e94\u6587\u4ef6\u4e5f\u6ca1\u6709). \u76ee\u524d\u4ee5\u6211\u6240\u4e86\u89e3, \u6211\u8d1f\u8d23\u7684\u7f51\u7edc\u4e2d, \u5c06\u4f1a\u662f: \u8f93\u5165\u63d0\u793a\u8bed, \u8fd9\u4e9b\u63d0\u53d6\u51fatoken; \u7136\u540e\u8f93\u5165\u70b9\u4e91, \u901a\u8fc7\u6211\u4eec\u7ec4\u8bbe\u8ba1\u7684\u7f51\u7edc\u63d0\u53d6384\u7ef4\u7684token, \u7136\u540e\u4e24\u4e2atoken concat, \u4e00\u540c\u8fdb\u5165MotionGPT\u5de5\u4f5c\u4e2d\u6240\u4f7f\u7528\u7684flan-t5-base\u7f51\u7edc, \u6700\u540e\u8f93\u51fatoken. \u5173\u4e8eloss, dataloader, optimizer\u7684\u4e8b\u60c5, \u7b49\u8003\u5b8c\u8bd5\u518d\u8bf4. </p>"},{"location":"Blog/AAAI2025/log.html#629","title":"6.29","text":"<p>\u6700\u8fd1double check\u4e86\u4e00\u4e0b\u6570\u636e\u4eff\u771f, \u7136\u540e\u53d1\u73b0\u6570\u636e\u4eff\u771f\u7ed3\u679c\u662f\u9519\u8bef\u7684. \u56e0\u4e3ahumanml3d\u6570\u636e\u96c6\u91cc\u9762\u7684new_joints\u6587\u4ef6\u5939\u91cc\u9762\u7684\u5f20\u91cf\u867d\u7136\u662f(timestep, 22, 3)\u4f46\u662f\u5e76\u4e0d\u662f\u8f74\u89d2\u8868\u793a, \u800c\u662f22\u4e2a\u5173\u8282\u70b9\u7684\u5750\u6807. \u6240\u4ee5\u8bf4\u4e4b\u524d\u7684\u6570\u636e\u4eff\u771f\u5931\u8d25\u4e86.</p> <p>\u6700\u8fd1\u4e00\u76f4\u5728\u5c1d\u8bd5. \u4e00\u5f00\u59cb\u60f3\u5229\u7528new_joint_vec\u91cc\u9762\u7684(timestep, 263)\u4e2d\u7684\u4e00\u90e8\u52066D rotation\u6570\u636e\u6765\u8fdb\u884c\u6362\u5143, \u4f46\u662f\u540e\u6765\u901a\u8fc7\u5b9e\u9a8c\u4e0egithub\u4e0a\u9762\u8ba8\u8bba\u7684\u5185\u5bb9\u8bc1\u660e, \u8fd9\u91cc\u7684rot_data\u662f\u7528\u4e0d\u4e86\u7684. \u6240\u4ee5\u8bf4\u73b0\u5728\u9677\u5165\u4e86\u4e00\u4e2a\u50f5\u5c40. \u867d\u7136\u90e8\u5206\u5de5\u4f5c, \u4f8b\u5982motion diffusion model, \u4ee5\u53camotiongpt\u4e2d\u5e26\u6709\u53ef\u89c6\u5316\u7684\u4ee3\u7801, \u4f46\u662f\u8fd9\u4e9b\u53ef\u89c6\u5316\u90fd\u662f\u901a\u8fc722\u4e2a\u5173\u8282\u7684\u5750\u6807\u70b9\u53bb\u62df\u5408smpl\u6587\u4ef6\u5f62\u5f0f, \u66f4\u5173\u952e\u7684\u662f, \u8017\u8d39\u7684\u65f6\u95f4\u76f8\u5f53\u957f. \u56e0\u6b64\u73b0\u5728, \u53ea\u80fd\u5c1d\u8bd5\u7528AMASS\u6570\u636e\u91cc\u9762\u7684\u6b63\u89c4smpl\u6587\u4ef6\u53bb\u53ef\u89c6\u5316\u4e86, \u56e0\u4e3aAMASS\u662fhumanml3d\u6570\u636e\u96c6\u7684\u6765\u6e90\u4e4b\u4e00. \u4f46\u662f\u5982\u4f55\u5c06AMASS\u4e2d\u7684\u6587\u4ef6\u548chumanml3d\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u5bf9\u5e94\u5462? \u8fd9\u662f\u4e00\u4ef6\u9ebb\u70e6\u4e8b. </p>"},{"location":"Blog/AAAI2025/log.html#630","title":"6.30","text":"<p>\u7ec8\u4e8e\u662f\u67f3\u6697\u82b1\u660e\u53c8\u4e00\u6751. \u5982\u679chumanml3d\u6570\u636e\u96c6\u91cc\u9762\u7684\u6570\u636e\u662f\u5229\u7528\u4e0d\u4e86\u7684, \u90a3\u4e48\u80fd\u4e0d\u80fd\u4eceHumanml3d\u6570\u636e\u96c6\u7684\u6765\u6e90\u6570\u636e\u96c6\u4e0b\u624b: <code>AMASS</code>\u4ee5\u53ca<code>humanact12</code>. \u7ed3\u679c\u53d1\u73b0<code>humanact12</code>\u6570\u636e\u96c6\u4e5f\u662f\u51fa\u81eaProf.EricGuo\u4e4b\u624b, \u6570\u636e\u5168\u90fd\u662f22\u4e2a\u5173\u8282\u7684\u4e09\u7ef4\u5750\u6807. \u8fd8\u597d<code>humanact12</code>\u4ec5\u4ec5\u5360\u6570\u636e\u96c6\u76841/7, \u56e0\u6b64\u4e0d\u7528\u7ba1\u5b83\u4eec\u662f\u53ef\u4ee5\u7684. \u5982\u4f55\u5904\u7406amass\u6570\u636e\u96c6\u5462? amass\u7684axis-rotation\u5230\u5e95\u50a8\u5b58\u5728\u54ea\u91cc\u5462? \u622a\u53d6\u54ea\u4e9bframe\u5462? \u82b1\u4e86\u51e0\u5c0f\u65f6\u8bfb\u4e86humanml3d\u4e2d\u7684\u4ee3\u7801, \u7ec8\u4e8e\u7406\u89e3\u4e86\u7a76\u7adf\u5982\u4f55\u5904\u7406\u6570\u636e\u96c6\u4ee5\u83b7\u5f97text\u6240\u5bf9\u5e94\u7684motion\u70b9\u4e91. \u4e0b\u5348\u6572\u4e86\u5904\u7406\u7684\u4ee3\u7801, \u5728\u859b\u5b66\u957f\u7684mesh2lidar\u4ee3\u7801\u548chumanml3d\u4ee3\u7801\u4e2d\u63ed\u9732\u7684\u5904\u7406\u89c4\u5219\u7684\u57fa\u7840\u4e4b\u4e0a, \u5728\u8865\u5168\u4e86amass\u6570\u636e\u96c6\u4e4b\u540e, \u7ec8\u4e8e\u5f97\u5230\u4e86\u6570\u636e\u4eff\u771f\u540e\u7684Motion\u70b9\u4e91. \u4ee3\u7801\u548c\u5904\u7406\u540e\u7684\u6570\u636e\u96c6\u50a8\u5b58\u5728\u6211\u7684AI\u96c6\u7fa4\u8d26\u53f7\u91cc\u9762.</p> <p>\u4ee5\u4e0b\u662f\u6211\u7f16\u5199\u7684\u4ee3\u7801\u90e8\u5206:</p> <pre><code>if __name__ == \"__main__\" :\n    simulator = Simulator(128).cuda()\n    shape = torch.zeros(1, 10).float() # default shape \n    directory = \"???\"\n    cam_pose = torch.zeros(1, 3).float()\n    # index.csv: read in the npz file(npy in the file, but actually wanting npz)\n    index_file = pd.read_csv(\"/public/home/xiongzhzh2023/code-xue/index.csv\")\n    # how many files to deal with\n    total_amount = index_file.shape[0]\n    ex_fps = 20 # expected fps\n    for i in tqdm(range(total_amount)):\n        source_path = index_file.loc[i]['source_path'][:-4] + \".npz\"\n        new_name = index_file.loc[i]['new_name']\n        start_frame = index_file.loc[i]['start_frame']\n        end_frame = index_file.loc[i]['end_frame']\n\n\n        if 'humanact12' in source_path:\n            with open('no.txt', 'a') as file:\n              file.write(\"%s\\n\" % new_name.split('.')[0])\n            # Because the humanact12 format is the coordinates of key joints, we cannot use these file to operate\n            # What we want is axis-rotation information\n            # Record the file index that will be discarded\n            continue\n        if 'humanact12' not in source_path:\n            with open('yes.txt', 'a') as file:\n                file.write(\"%s\\n\" % new_name.split('.')[0])\n            # Record the file index that will be enrolled\n            data = np.load(source_path)\n            try:\n                fps = data['mocap_framerate']\n            except:\n                print(\"No mocap_framerate\")\n                assert 0\n            down_sample = int(fps / ex_fps)\n            # Downsampling, making it a np array containing axie-rot info\n            data = data['poses'][::down_sample,...]\n            '''\n            According to the code from https://github.com/EricGuo5513/HumanML3D, when dealing with the AMASS dataset,\n            the following segmentation is necessary: \n            '''\n            if 'Eyes_Japan_Dataset' in source_path:\n                data = data[3*20:]\n            if 'MPI_HDM05' in source_path:\n                data = data[3*20:]\n            if 'TotalCapture' in source_path:\n                data = data[1*20:]\n            if 'MPI_Limits' in source_path:\n                data = data[1*20:]\n            if 'Transitions_mocap' in source_path:\n                data = data[int(0.5*20):]\n\n            # Segment again, using the start and end frame information\n            data = data[start_frame:end_frame]\n\n            # Extract all the axis-rotation info  \n            data = data[:,:66].reshape(-1, 22, 3) \n            # np.array(T, 22, 3) where 3 stands for the axis-rot information\n            timestep = data.shape[0] # timestep\n\n            # For hands, no rot and using zeros to pad data into smpl format: (T, 24, 3)\n            pad = np.zeros((timestep, 2, 3))\n            pose = torch.from_numpy(np.concatenate((data, pad), axis = 1)).float()\n\n            # Using default betas/shape, we use the axis-rot info to generate smpl model\n            smpl_out = smpl(betas=shape, body_pose=pose[:, 1:], global_orient=pose[:, :1])\n\n            # smpl_put.vertices: torch.Size([T, 6890, 3]) where 3 stands for the xyz coordinate\n            # We will use this point cloud to simulate the scanned point cloud\n            pts, kps, new_pose = simulator.mesh2lidar(smpl_out.vertices.cuda(), smpl_out.joints.cuda(), cam_pose.cuda(), timestep)\n            # pts = smpl_out.vertices\n            if pts.is_cuda:\n                pts = pts.cpu() # To preserve the file, have to make sure that it's in the cpu\n            # pts: The scanned point cloud, [T, 384, 3] where 384 is the number of points and 3 is the xyz coordinates\n            savepath = os.path.join(\"???\", new_name)\n            np.save(savepath, pts.numpy())\n\n    print(\"mesh2lidar done!\")\n</code></pre> <p>## 7.5</p> <p>\u6700\u8fd1\u597d\u4e45\u6ca1\u6709\u62bd\u7a7a\u5199Log\u4e86. \u5728\u6570\u636e\u4eff\u771f\u7ed3\u675f\u4e4b\u540e, \u4e00\u5f00\u59cb\u53d1\u73b0\u6570\u636e\u91cc\u9762\u7684\u4eba\u662f\u6a2a\u8fc7\u6765\u7684, \u7136\u540e\u548c\u859b\u5b66\u957f\u6c9f\u901a\u4e4b\u540e, \u4e0d\u518d\u5bf9\u4eba\u4f53\u4eff\u771f\u7ed3\u679c\u8fdb\u884c\u65cb\u8f6c\u77e9\u9635\u7684\u4e58\u6cd5, \u6240\u4ee5\u6700\u540e\u7b2c\u4e8c\u7248\u7684\u6570\u636e\u662f\u771f\u6b63\u7684\u6570\u636e\u4eff\u771f\u6570\u636e, \u5e76\u4e14\u5df2\u7ecf\u672c\u5730\u8fdb\u884c\u4e86\u5907\u4efd.</p> <p>\u4e4b\u540e\u53d1\u73b0, MotionGPT\u7684\u8bad\u7ec3\u8303\u5f0f\u548c\u6211\u4eec\u7684\u7279\u5f81\u63d0\u53d6\u5668\u8c8c\u4f3c\u5e76\u4e0d\u662f\u5b8c\u5168\u5951\u5408. MotionGPT\u5728\u7684VQVAE\u7ec4\u4ef6\u7531encoder\u548cdecoder\u5171\u540c\u7ec4\u6210, \u7136\u540e\u5728\u7b2c\u4e00\u9636\u6bb5\u7684\u8bad\u7ec3\u4e2d, \u7528Motion\u6570\u636e\u8fdb\u884c\u81ea\u76d1\u7763\u8bad\u7ec3. \u8bad\u7ec3\u5b8c\u6210\u4e4b\u540e, \u4e4b\u540e\u7684\u8bad\u7ec3\u4e2d\u53ea\u4f7f\u7528encoder, \u5e76\u4e14\u91cc\u9762\u7684\u6743\u91cd\u662f\u56fa\u5b9a\u7684, \u7528\u6765\u5c06motion\u8f6c\u5316\u4e3a\u79bb\u6563(discrete)token. (\u7c7b\u4f3c\u4e8ecodebook). \u5982\u679c\u76f4\u63a5\u4e0a\u6211\u4eec\u7684\u7279\u5f81\u63d0\u53d6\u5668, \u90a3\u4e48\u65e0\u6cd5\u7528\u81ea\u76d1\u7763\u7684\u65b9\u6cd5\u8bad\u7ec3\u6211\u4eec\u7684encoder, \u5fc5\u987b\u8981\u5728\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u7684\u65f6\u5019\u628aencoder\u7684\u6743\u91cd\u548c\u8bed\u8a00\u6a21\u578b\u7684\u6743\u91cd\u4e00\u540c\u8bad\u7ec3\u51fa\u6765. \u6240\u4ee5\u8bf4\u8981\u6362\u4e00\u79cd\u65b9\u5f0f, \u4f7f\u6211\u4eec\u7684encoder\u517c\u5bb9\u8fdb\u6765. \u6240\u4ee5\u6839\u636e\u8bb8\u5b66\u957f\u7684\u60f3\u6cd5: \u7528Point-BERT\u8fc7\u6e21.</p> <p>Point-BERT\u4e2d\u4e5f\u6709\u4e00\u5957\u914d\u5bf9\u7684encoder decoder, \u800c\u4e14encoder\u8bad\u7ec3\u51fa\u6765\u7684token\u662fdiscrete\u7684. \u8fd9\u548cVQVAE\u5341\u5206\u63a5\u8fd1. \u4e8e\u662f\u5148\u5c1d\u8bd5\u5728Point-BERT\u4e0a\u9762\u8dd1\u901ahumanml3d\u7684\u4eff\u771f\u6570\u636e. </p> <p>\u8270\u96be\u7684\u662f, \u8f93\u5165\u7684data\u76f4\u63a5\u662f(npoints, 3), \u4f46\u662f\u6211\u4eec\u7684\u6570\u636e\u90fd\u662f(T, 384, 3), \u6240\u4ee5\u8981\u628aT\u65f6\u95f4\u6b65\u957f\u7ed9\u62c6\u5f00\u6765. \u8fd9\u5c31\u9700\u8981\u7a0b\u5e8f\u5bf9\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u4e86: </p> <pre><code># handling_index.py\nimport numpy as np\nfrom tqdm import tqdm\n\nfile_path = \"\"\nfile1_path = \"\"\nfile2_path = \"\"\nwith open(file1_path, 'r') as file1, open(file2_path, 'a') as file2:\n    for line in tqdm(file1):\n        line = line.strip() \n        frame = np.load(file_path + line + '.npy').shape[0]\n        for i in range(frame):\n            index = str(i).zfill(3) \n            file2.write(line + \"_\" + index + \"\\n\") \n# handling_npy.py\nimport numpy as np\nfrom tqdm import tqdm\n\nfile_path = \"\"\nres_path = \"\"\nindex_path = \"\"\ncount = 0\nwith open(index_path, 'r') as file:\n    for line in tqdm(file, total = 13425):\n        index = line.strip()\n        data = np.load(file_path + index + \".npy\")\n        frame = data.shape[0]\n        for i in range(frame):\n            sub_data = data[i]\n            assert sub_data.ndim == 2\n            np.save(res_path + index + \"_\" + str(i).zfill(3) + \".npy\", sub_data)\nprint(\"npy operation done!\")\n</code></pre> <p>\u6700\u540e\u603b\u5171\u8f6c\u5316\u51fa\u6765\u4e86\u603b\u5171\u8fd1180\u4e07\u4efd\u6570\u636e, \u8017\u65f6\u5c06\u8fd1\u4e09\u4e2a\u534a\u5c0f\u65f6, \u5927\u5c0f\u5c06\u8fd1\u662fShapeNet55\u6570\u636e\u96c6\u768437\u500d! ShapeNet55\u6570\u636e\u96c6\u538b\u7f29\u5305\u5c31\u5c06\u8fd17\u4e2aG, \u8f6c\u5316\u51fa\u6765\u7684180\u4e07\u4efdnpy\u7684\u5927\u5c0f\u6211\u4e0d\u6562\u60f3\u8c61. \u6700\u540e\u4e3a\u4e86\u6743\u8861\u6a21\u578b\u8d70\u7684step\u6570\u91cf, \u539f\u6765\u7684300\u4e2aepoch\u53d8\u6210\u4e868\u4e2aepoch. \u4ee5\u53ca\u8fd8\u597d\u8fc7\u6e21\u9636\u6bb5\u8fdevalidation\u90fd\u4e0d\u662f\u5fc5\u8981\u7684, \u56e0\u4e3a\u4e00\u6b21validation\u90fd\u8981\u5c06\u8fd1\u4e00\u4e2a\u5c0f\u65f6, \u4ee5\u53ca\u6211\u4eec\u7684\u76ee\u7684\u662f\u8fc7\u6e21\u4ee3\u7801(\u867d\u7136\u6211\u4e5f\u4e0d\u7406\u89e3\u8fc7\u6e21\u7684\u610f\u4e49, \u4f46\u662f\u542c\u5b66\u957f\u7684). \u81f3\u4e8e\u4e3a\u4ec0\u4e48, \u53ef\u80fd\u548cval_bs\u6709\u5173, \u4f5c\u8005\u8bbe\u7f6e\u6210\u4e861, \u800c\u4e14\u5728issue\u91cc\u9762\u56de\u590d\u9053: \u5982\u679c\u6539\u4e861, \u90a3\u4e48\u53ef\u80fdchamferdist\u8ba1\u7b97\u4f1a\u51fa\u9519. \u800c\u4e14\u7b2c\u4e8c\u9636\u6bb5\u7684validation\u4f7f\u7528\u7684\u662fModelNet\u6570\u636e\u96c6, \u4e4b\u524d\u590d\u73b0\u5b9e\u9a8c\u7684\u65f6\u5019\u9047\u5230\u4e86\u8fd9\u4e2a\u6570\u636e\u96c6\u5c31\u5934\u75bc, \u603b\u662f\u5361\u4f4f\u4e0d\u52a8. \u6b63\u597d, \u4e0d\u7528validate\u4e86, \u65e2\u7701\u4e86\u65f6\u95f4\u53c8\u907f\u514d\u4e86bug. </p> <p>\u4e3a\u4e86\u80fd\u591f\u5728\u6211\u4eec\u7684\u6570\u636e\u96c6\u4e0a\u9762\u8dd1pointbert, dataloader, yaml(config)\u6587\u4ef6, runner.py(\u8fd0\u884c\u7a0b\u5e8f)\u90fd\u9700\u8981\u5bf9\u5e94\u7684\u4fee\u6539. \u8fd8\u597d\u662f\u4e24\u5e74\u524d\u7684\u4ee3\u7801, \u5e76\u4e0d\u662f\u7279\u522b\u590d\u6742, \u800c\u4e14\u548c\u81ea\u5df1\u5728github\u4e0a\u9762\u5b66\u7684\u6df1\u5ea6\u5b66\u4e60\u7a0b\u5e8f\u8303\u5f0f\u5341\u5206\u63a5\u8fd1. \u5df2\u7ecf\u5728AI\u96c6\u7fa4\u9a8c\u8bc1\u8fc7\u53ef\u4ee5\u8dd1\u901a\u4e86, \u5373\u5c06\u628a\u4ee3\u7801\u6570\u636e\u96c6\u642c\u5230\u53e6\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u5e76\u8dd1\u901a. </p> <p>\u611f\u53f9\u9053: \u6709\u7684\u65f6\u5019, \u6362\u4e00\u53f0\u670d\u52a1\u5668\u53ef\u80fd\u5c31\u89e3\u51b3\u95ee\u9898\u4e86. \u4e4b\u524d\u5728\u4e00\u4e2a\u961f\u5217\u91cc\u9762\u8dd1\u4ee3\u7801, \u603b\u662f<code>packet_write_wait broken pipe</code> error, \u8fd8\u6709\u6982\u7387\u62a5\u5176\u4ed6\u7684\u9519. \u4f46\u662f\u6362\u4e00\u4e2a\u961f\u5217\u6211\u5c31\u80fd\u987a\u5229\u8dd1\u901a, \u800c\u4e14\u4e5f\u4e0d\u4f1a\u62a5broken pipe\u7684\u95ee\u9898\u4e86. </p>"},{"location":"Blog/AAAI2025/log.html#78","title":"7.8","text":"<p>\u6700\u8fd1\u5728pointbert\u4e0a\u9762\u8dd1\u901ahumanml3d-lidar\u7684\u6570\u636e\u96c6. 180\u4e07\u4efd\u6587\u4ef6\u5f53\u7136\u80fdwork, \u4f46\u662f\u540e\u6765\u53d1\u73b0, \u7531\u4e8e\u6587\u4ef6\u6570\u91cf\u8fc7\u591a, \u56e0\u6b64\u8bad\u7ec3\u7684\u901f\u5ea6\u5e76\u4e0d\u5982\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u5feb. \u56e0\u6b64\u9700\u8981\u6570\u636e\u96c6\u8fd8\u9700\u8981\u518d\u9884\u5904\u7406. \u4e3a\u4e86\u51cf\u5c11\u6587\u4ef6\u6570\u91cf, \u6bcf32\u4e2a\u6587\u4ef6\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a(32, 384, 3)\u7684npy(\u6253\u4e71\u987a\u5e8f\u7684), \u7136\u540ebs\u9664\u4ee532, \u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a(1, 384, 3)\u7684\u70b9\u4e91\u90fd\u8fdb\u884c\u4e00\u8fb9\u539f\u6765pointbert\u4e2d\u505a\u7684\u5f52\u4e00\u5316\u548c\u6253\u4e71. </p> <pre><code># handling_random.py\nimport random\n\ndef shuffle_text_file(input_file_path, output_file_path):\n    with open(input_file_path, 'r', encoding='utf-8') as file:\n        lines = file.readlines()\n\n    random.shuffle(lines)\n\n    with open(output_file_path, 'w', encoding='utf-8') as file:\n        file.writelines(lines)\n\n\ninput_path = 'path_to_your_input_file.txt' \noutput_path = 'path_to_your_output_file.txt' \nshuffle_text_file(input_path, output_path)\n# handling_32.py\nimport numpy as np\nfrom tqdm import tqdm\n# read 32 lines at one time, and create a (32, 384, 3) npy file\n\ntrain_file_path = \"?\"\ntest_file_path = \"?\"\ntrain_file_res = \"?\"\ntest_file_res = \"?\"\nidx = 0\n\nwith open(train_file_path, 'r') as file, open(train_file_res, 'a') as result:\n    while True:\n        lines = [file.readline() for _ in range(32)]\n        if len(lines) &lt; 32:\n            break\n        paths = [\"?\" + line.strip() + \".npy\" for line in lines]\n        array_list = []\n        for path in paths:\n            array = np.load(path)\n            array_list.append(array)\n        merged_array = np.stack(array_list)\n        assert merged_array.shape == (32, 384, 3), \"not (32, 384, 3)\"\n        np.save(\"?\" + str(idx).zfill(7) + \".npy\", merged_array)\n        result.write(str(idx).zfill(7) + \".npy\" + \"\\n\")\n        if idx % 500 == 0:\n            print(\"Currently \" + str(idx).zfill(6) + \".npy\" + \" done\")\n        idx += 1\n</code></pre> <p>\u7136\u540edataloader\u7ed9\u51fa\u7684\u662f(32, 384, 3)\u7684\u5185\u5bb9. \u5728\u7f51\u7edc\u4e2d, enumerate\u8fd4\u56de\u7684\u662f(bs, 32, 384, 3), \u53ea\u9700\u8981reshape\u4e3a(32*bs, 384, 3)\u5c31\u5b8c\u7f8e\u89e3\u51b3\u95ee\u9898\u4e86. \u6700\u540e\u5b9e\u9a8c, \u56db\u53f03090\u7684\u901f\u5ea6\u662f\u56db\u53f02080ti\u76841.7\u500d\u5de6\u53f3. </p> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u9700\u8981\u5c06\u4e24\u4e2a\u9636\u6bb5\u8bad\u7ec3\u51fa\u6765\u7684ckpt\u548cpointbert\u8fd0\u7528\u5230motiongpt\u4e2d, \u4e3a\u7684\u5c31\u662f\u4ee3\u66ffmotiongpt\u4e2d\u7684vqvae. \u66f4\u5177\u4f53\u7684, \u6211\u4eec\u8fd0\u7528\u5230\u7684\u53ef\u80fd\u53ea\u6709encoder\u7528\u6765\u5d4c\u5165t5\u8bed\u8a00\u6a21\u578b. </p>"},{"location":"Blog/AAAI2025/log.html#715","title":"7.15","text":"<p>\u6700\u8fd1\u5173\u4e8e\u8def\u5f84\u7684\u65b9\u6848\u4e00\u6539\u518d\u6539: \u4e00\u5f00\u59cb\u6ce8\u610f\u5230\u4e86\u8fde\u7eed\u8fd8\u662f\u79bb\u6563\u7684\u91cd\u8981\u533a\u522b, \u56e0\u4e3a\u6211\u4eec\u7684encoder\u8f93\u51fa\u7684\u662f\u8fde\u7eed\u7684\u7279\u5f81, \u4f46\u662fVQVAE\u8bad\u7ec3\u7684\u8303\u5f0f\u662fcodebook\u5f0f, \u5373\u79bb\u6563, \u56e0\u6b64MotionGPT\u4e2d\u5145\u65a5\u7740\u5904\u7406codebook\u7684\u5185\u5bb9. \u540e\u6765\u60f3, \u80fd\u4e0d\u80fdencoder\u548c\u8bed\u8a00\u6a21\u578b\u4e00\u8d77\u8bad\u7ec3, \u4f46\u662f\u6015\u6536\u655b\u6548\u679c\u4e0d\u4f73, \u800c\u4e14\u9700\u8981\u8017\u8d39\u5927\u91cf\u65f6\u95f4, \u56e0\u6b64\u8fd8\u662f\u9700\u8981\u4e8c\u6bb5\u5f0f\u7684\u8bad\u7ec3, \u5373\u5355\u72ec\u7528\u81ea\u76d1\u7763\u65b9\u5f0f\u8bad\u7ec3ours, \u518d\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b. \u4e8e\u662f\u6700\u7ec8\u51b3\u5b9a\u5728ULIP\u4e0a\u9762\u901a\u8fc7\u76d1\u7763\u8bad\u7ec3encoder, \u5f97\u5230\u5e26\u6709\u6743\u91cd\u7684\u6a21\u578b, \u7136\u540e\u518d\u7528\u8fd9\u4e2a\u6a21\u578b\u5904\u7406\u6240\u6709\u7684\u70b9\u4e91\u5e8f\u5217, \u5f97\u5230token, \u7136\u540e\u5355\u72ec\u4fdd\u5b58\u8d77\u6765. \u6700\u540e\u81ea\u5df1\u8bbe\u8ba1\u4e00\u4e2a\u7f51\u7edc, \u8f93\u5165\u8fd9\u4e9btoken, \u7ecf\u8fc7\u51e0\u4e2amapping\u5c42, \u8f6c\u5316\u5230t5\u8bad\u7ec3\u65f6\u8f93\u5165\u7684\u7279\u5f81\u7ef4\u5ea6, \u7136\u540e\u76d1\u7763\u4fe1\u606f\u5c31\u662ftext, \u8ba1\u7b97bleu@1~4\u5f97\u5206. </p> <p>\u6b64\u5916, \u8fd8\u7528\u59da\u5b66\u957f\u7684\u4ee3\u7801\u5904\u7406\u4e86\u6240\u6709\u7684\u70b9\u4e91\u6570\u636e, \u5f97\u5230\u4e86segmented\u7684\u6570\u636e, \u4f7f\u5176\u53ef\u4ee5\u8fdb\u5165ours. \u63a5\u4e0b\u6765\u7684\u8def\u7ebf\u5c31\u662f:\u8dd1\u901aULIP, \u6478\u6e05\u6570\u636e\u6d41; encoder\u6362ours, \u6570\u636e\u6362ours;  \u8bad\u7ec3\u597d\u4e86\u6743\u91cd, \u7528\u5b83\u5904\u7406\u6240\u6709\u7684\u70b9\u4e91\u6570\u636e\u5f97\u5230token; \u7528\u8fd9\u4e9btoken\u8fc7mapping + t5, \u8bad\u7ec3; test, \u5e76\u4e14\u53ef\u89c6\u5316. segmented\u540e\u7684\u6570\u636e\u603b\u91cf, \u4ece\u539f\u5148\u768413000\u5de6\u53f3, \u4e0b\u964d\u5230\u4e8610000.</p> <p>\u5173\u4e8e\u81ea\u5df1\u8bbe\u8ba1mapping + t5\u7684\u7f51\u7edc, \u53ea\u80fd\u8bf4\u8fd8\u597d\u6709Chat\u540c\u5b66\u7684\u5e2e\u52a9, \u81f3\u5c11\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u5b64\u519b\u594b\u6218~ </p>"},{"location":"Blog/AAAI2025/log.html#723","title":"7.23","text":"<p>\u65f6\u95f4\u5df2\u7ecf\u4e0d\u662f\u5f88\u5145\u88d5\u4e86. \u5728\u6b64, \u8865\u5145\u4e0b\u4e3a\u4ec0\u4e48\u653e\u5f03\u4e86pointbert\u548cmotiongpt:</p> <p>\u81f3\u4e8epointbert, \u7528\u6211\u4eec\u7684encoder\u66ff\u6362\u6389\u539f\u5de5\u4f5c\u7684transformer encoder, \u76f8\u5f53\u4e8e\u662f\u5229\u7528\u6211\u4eec\u7684\u7ec4\u4ef6\u5e2e\u52a9pointbert\u7684encoder\u8fdb\u884c\u9884\u8bad\u7ec3, \u6700\u540e\u5b9e\u8d28\u4e0a\u5229\u7528\u7684\u8fd8\u662fpointbert\u81ea\u5e26\u7684encoder\u8f93\u51fa\u79bb\u6563token, \u90a3\u4e48\u5176\u5b9e\u6211\u4eec\u7ec4\u4ef6\u7684\u4f5c\u7528\u5e76\u4e0d\u91cd\u8981, \u6ca1\u6709\u4f53\u73b0\u6211\u4eec\u7ec4\u4ef6\u7684\u5f3a\u5927.</p> <p>\u81f3\u4e8emotiongpt, \u5b83\u63a5\u53d7\u79bb\u6563\u7684token, \u8fdb\u5165t5, \u5e76\u4e14\u4f1a\u6269\u5145vocab, \u6765\u771f\u6b63literally\u628aMotion\u5f53\u4f5c\u4e00\u79cdforeign language\u53bb\u8fdb\u884c\u5904\u7406. \u5982\u679c\u4ec5\u4ec5\u662f\u8fd9\u6837\u7684\u8bdd, \u90a3\u4e48\u8fd8\u6709\u673a\u4f1a\u4fee\u6539motiongpt, \u8ba9\u5b83\u63a5\u53d7\u8fde\u7eed\u7684\u7279\u5f81, \u5373\u4f7f\u7528input_embed\u53c2\u6570. \u4f46\u662f\u95ee\u9898\u5728\u4e8e, \u53ea\u6709train\u7684\u65f6\u5019\u662f\u8fd9\u8fd9\u6837\u64cd\u4f5c\u7684, \u800c\u5728val test\u7684\u65f6\u5019, \u5374\u5e76\u4e0d\u662f\u8fd9\u6837, \u62ff\u8fc7\u6765\u7684\u4f9d\u7136\u662f263\u7ef4\u4fe1\u606f, \u8fc7\u5b83\u7684motion encoder(vae), \u8fdb\u884c\u4e86\u4e00\u5927\u5806\u7684\u64cd\u4f5c. \u56e0\u6b64\u4fee\u6539\u8d77\u6765\u96be\u5ea6\u5947\u9ad8, \u4e00\u662f\u4ee3\u7801\u7528pytorch lightning\u5c01\u88c5, \u5c01\u88c5\u6027\u6781\u5f3a; \u4e8c\u662fmetric\u4e0a\u7684\u4fee\u6539\u975e\u5e38\u9ebb\u70e6; \u4e09\u662f\u7f51\u7edc\u548cdataloader\u4e5f\u9700\u8981\u6539\u52a8, debug\u6210\u672c\u975e\u5e38\u9ad8.</p> <p>\u6240\u4ee5\u5728chat\u59d3\u6c0f\u540c\u5b66\u7684\u5e2e\u52a9\u4e0b, \u8bbe\u8ba1\u4e86\u7b2c\u4e8c\u9636\u6bb5\u7684\u7f51\u7edc. \u7531\u4e8et5\u5c01\u88c5\u6027\u5f88\u9ad8, \u8c03\u5e93\u5f0f\u4f7f\u7528\u5f88\u65b9\u4fbf, \u56e0\u6b64\u8bbe\u8ba1\u96be\u5ea6\u4e0d\u9ad8. \u503c\u5f97\u6ce8\u610f\u7684\u662f, DP\u7684\u65f6\u5019, \u7f51\u7edc\u7684\u7ec4\u4ef6\u90fd\u5c01\u88c5\u5728\u4e86module\u91cc\u9762. \u81f3\u4e8e\u7f51\u7edc\u7684\u7ec6\u8282, \u53c2\u8003pointllm, \u9700\u8981\u5c06encoder\u8f93\u51fa\u7684\u7ef4\u5ea6\u4ece1024\u7ef4\u5ea6\u53d8\u5316\u5230768\u7ef4, \u5177\u4f53\u800c\u8a00\u662f: 1024-&gt;1024-&gt;768-&gt;768, \u5176\u4e2d\u53ea\u6709\u524d\u4e24\u4e2a\u7bad\u5934\u6709GeLU\u6fc0\u6d3b\u51fd\u6570. </p> <p>\u63a5\u4e0b\u6765\u4f1a\u8003\u8651\u52a0\u4e0a\u65ad\u70b9\u7eed\u4f20\u7684\u8bbe\u8ba1\u548c\u4e00\u4e9b\u8be6\u7ec6\u7684\u6ce8\u91ca, \u6216\u8005\u662fREADME. </p>"},{"location":"Blog/AAAI2025/log.html#820","title":"8.20","text":"<p>\u65f6\u5149\u98de\u901d, \u5df2\u7ecf\u4e00\u4e2a\u6708\u8fc7\u53bb\u4e86, \u800c\u4eca\u5929AAAI appendix\u6b63\u5f0f\u622a\u7a3f, \u6211\u4eec\u7684\u4efb\u52a1\u4e5f\u987a\u5229\u5b8c\u6210. \u8fd9\u4e48\u4e00\u8bf4\u8df3\u8dc3\u6027\u6709\u70b9\u5927, \u8fd8\u662f\u8ba9\u65f6\u95f4\u56de\u5230\u4e00\u4e2a\u6708\u4e4b\u524d. \u4e00\u4e2a\u6708\u4e4b\u524d, \u662f\u6211\u8981\u53c2\u52a0\u5b66\u6821\u5fc5\u4fee\u7684\u793e\u4f1a\u5b9e\u8df5\u7684\u65f6\u95f4, \u8981\u5916\u51fa\u8fdb\u4e24\u5468. \u5728\u548c\u5434\u5b66\u957f\u4ea4\u63a5\u4e86\u4e00\u4e0b\u540e\u7eed\u7684\u5b9e\u9a8c\u4e4b\u540e, \u6211\u5c31\u53c2\u4e0e\u4e0d\u4e86\u5de5\u4f5c\u4e86. \u5728\u90a3\u65f6, \u6211\u4eec\u53d1\u73b0\u4e86\u81ea\u5df1\u8bbe\u8ba1\u7684benchmark\u7684\u8bad\u7ec3\u9636\u6bb5\u4e2d\u7684\u4e00\u4e2a\u5927\u95ee\u9898: \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u603b\u662f\u4f1a\u8bad\u7740\u8bad\u7740\u5c31\u6700\u7ec8\u53d8\u6210\u8bf4\u540c\u4e00\u53e5\u8bdd\u4e86. \u8fd9\u4e2a\u95ee\u9898\u5c31\u5341\u5206\u96be\u529e\u4e86, \u56e0\u4e3a\u662f\u4e0d\u77e5\u9053ULIP\u5bf9\u9f50\u51fa\u4e86\u95ee\u9898, \u8fd8\u662ft5\u4f7f\u7528\u51fa\u73b0\u4e86\u95ee\u9898. \u4e8e\u662f\u5728\u51fa\u53d1\u7684\u524d\u4e00\u5929\u4e0b\u5348, \u6700\u7ec8\u8ba8\u8bba\u4e00\u4e0b\u540e\u7eed\u7684\u63aa\u65bd: description\u7ecf\u8fc7\u5206\u8bcd\u5668\u548c\u7b2c\u4e00\u5c42embedding layer\u7684\u7ed3\u679c\u548cULIP\u8f93\u51fa\u7684\u7ed3\u679cconcat\u8f93\u5165\u8fdb\u7f51\u7edc. \u5c31\u8fd9\u6837, \u6211\u8e0f\u4e0a\u4e86\u793e\u4f1a\u5b9e\u8df5\u4e4b\u65c5\u9014. </p> <p>\u5728\u524d\u5f80\u5efa\u6c34\u7684\u8fc7\u7a0b\u4e2d, \u6211\u5f88\u9057\u61be\u7684\u4ece\u5434\u5b66\u957f\u54ea\u91cc\u77e5\u9053\u4e86\u5b9e\u9a8c\u518d\u6b21\u5931\u8d25\u7684\u6d88\u606f: \u8f93\u51fa\u7684\u7adf\u7136\u53c8\u53d8\u6210\u4e86\u540c\u4e00\u53e5\u8bdd. \u518d\u6b21\u60c5\u5883\u4e4b\u4e0b, \u6211\u7684\u4e0b\u6e38\u4efb\u52a1\u88ab\u8feb\u653e\u5f03, \u5168\u7ec4all in Mesh Completion\u7684\u4e0b\u6e38\u4efb\u52a1. \u90a3\u4e00\u523b\u6211\u5185\u5fc3\u7684\u611f\u53d7\u662f\u590d\u6742\u7684, \u4f46\u662f\u603b\u4e4b, \u4ee5\u7ec4\u5185\u5b9e\u9a8c\u8fdb\u5ea6\u4e3a\u4e3b. \u4e4b\u540e\u5728\u793e\u4f1a\u5b9e\u8df5\u671f\u95f4, \u4e5f\u6536\u5230\u4e86\u505a\u53ef\u89c6\u5316\u548ctask &amp; experiment\u90e8\u5206\u7684\u64b0\u5199\u4efb\u52a1. \u56e0\u6b64\u793e\u4f1a\u5b9e\u8df5\u56de\u6765\u4e4b\u540e, \u6211\u9a6c\u4e0d\u505c\u8e44\u7684\u8d76\u5230\u5b9e\u9a8c\u5ba4\u5b8c\u6210\u6700\u540e\u51b2\u523a\u6536\u5c3e\u7684\u4efb\u52a1. \u8c22\u5929\u8c22\u5730, Mesh Completion\u4efb\u52a1\u987a\u5229\u5b8c\u6210(\u867d\u7136\u662f15\u53f7\u622a\u7a3f\u524d\u4e00\u5929\u624d\u60ca\u9669\u5730\u8dd1\u51fa\u7ed3\u679c). \u4e8e\u662f\u516b\u6708\u5341\u53f7\u8d76\u56de\u6765\u4e4b\u540e, \u4e3b\u8981\u5fd9\u4e8e\u53ef\u89c6\u5316\u548cbenchmark\u4ecb\u7ecd\u7684\u4efb\u52a1, \u4ee5\u53ca\u8dd1\u4e86\u4e24\u4e2a\u5bf9\u6bd4\u5b9e\u9a8c. \u5176\u4e2d, \u516b\u53c9\u6811\u7684\u5bf9\u6bd4\u8bd5\u9a8c\u662f\u771f\u7684\u96be\u8dd1, \u5149\u662f\u6478\u6e05\u695a\u7f51\u7edc\u7ec4\u4ef6\u548c\u6570\u636e\u6d41\u5c31\u82b1\u4e86\u8fd1\u5341\u4e2a\u5c0f\u65f6. \u4f46\u662f\u603b\u4e4b, \u5de5\u4f5c\u5706\u6ee1\u5b8c\u6210.</p> <p>\u73b0\u5728\u952e\u76d8\u4e0a\u6572\u4e0b\u8fd9\u6bb5\u6587\u5b57, \u5fc3\u91cc\u6709\u4e00\u79cd\u83ab\u540d\u7684\u611f\u52a8. \u4e5f\u8bb8\u8fd9\u4e5f\u7b97\u662f\u4e00\u79cd\u622a\u65ad\u53cd\u5e94? \u5728\u4e94\u4e2a\u6708\u7684\u5b66\u4e60\u548c\u5b9e\u4e60\u4e2d, \u6211\u8ba4\u8bc6\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u5b66\u957f\u5b66\u59d0, \u4e5f\u79ef\u7d2f\u4e86\u4e00\u4e9b\u5de5\u7a0b\u80fd\u529b, \u4e5f\u5f88\u8363\u5e78\u80fd\u5411\u6559\u6388\u6c47\u62a5\u4e24\u6b21\u5de5\u4f5c. \u8fd9\u4e9b\u7ecf\u5386, \u6211\u6c38\u751f\u96be\u5fd8. \u867d\u7136\u6700\u540e\u6211\u7684\u4e0b\u6e38\u4efb\u52a1\u5931\u8d25\u4e86, \u4f46\u662f\u5f88\u611f\u6fc0\u5b66\u957f\u80fd\u591f\u7ed9\u6211\u76f8\u5f53\u5bbd\u5bb9\u7684\u7814\u7a76\u7a7a\u95f4. \u8fd9\u4e2abenchmark\u7edd\u975e\u6211\u4e4b\u524d\u6240\u8bf4\u7684\u90a3\u6837\u7b80\u5355, \u4e5f\u8bb8\u51e0\u5e74\u4ee5\u540e, \u54e6\u4e0d, \u751a\u81f3\u4e00\u5e74\u4e4b\u540e, \u5c31\u4f1a\u6709\u5de5\u4f5c\u5c1d\u8bd5\u53bb\u5b9e\u73b0\"motion sequence video -&gt; captioning\"\u7684benchmark. \u5982\u679c\u771f\u7684\u6709\u8fd9\u79cd\u5de5\u4f5c\u80fd\u591f\u6a2a\u7a7a\u51fa\u4e16, \u90a3\u6211\u4e00\u5b9a\u8981\u62dc\u8bfb\u90a3\u4efd\u8bba\u6587, \u770b\u4ed6\u7684\u7f51\u7edc\u662f\u600e\u4e48\u8bbe\u8ba1\u7684, \u54c8\u54c8~</p> <p>\u603b\u4e4b, \u65c5\u7a0b\u5728\u6b64\u7ec8\u7a76\u662f\u544a\u4e00\u6bb5\u843d\u4e86, \u800c\u8fd9\u5374\u53c8\u4ec5\u4ec5\u662f\u5f00\u59cb......</p>"},{"location":"Blog/AAAI2025/log.html#_1","title":"\u540e\u8bb0","text":"<p>\u867d\u7136\u5de5\u4f5c\u662f\u6682\u65f6\u544a\u4e00\u6bb5\u843d\u4e86, \u4f46\u662f\u6211\u8fd8\u662f\u6709\u5f88\u591a\u5173\u4e8emotion captioning\u8fd9\u4e2abenchmark\u7684\u601d\u8003. \u4e4b\u524d\u90fd\u662f\u4e00\u76f4\u542c\u5b66\u957f\u7684, \u4e8e\u662f\u5ffd\u7565\u4e86\u5f88\u591a\u7684\u5185\u5bb9. \u9996\u5148\u95ee\u9898\u5c31\u662f: \u6709\u6ca1\u6709related work? \u8fdb\u884c\u4e86\u641c\u7d22, \u53d1\u73b0\u53ea\u6709MotionGPT\u8bbe\u8ba1\u4e86\u5173\u4e8emotion captioning(m2t)\u7684benchmark, \u6838\u5fc3\u662f\u7528VQVAE\u4f5cmotion\u7684\u5206\u8bcd\u5668, \u5c06\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u90fd\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a, \u7136\u540e\u7528\u7279\u6b8a\u7684\u6807\u8bb0\u6269\u5145\u5230vocab\u91cc\u9762. \u8fd9\u79cd\u8303\u5f0f\u6211\u4eec\u5de5\u4f5c\u662f\u5229\u7528\u4e0d\u4e86\u4e86, \u4f46\u662f\u601d\u8def\u786e\u662f\u5f88straight forward. </p> <p>\u90a3\u6709\u6ca1\u6709encoder\u8303\u5f0f\u7684\u5462? \u800c\u4e0d\u662ftokenizer(VQVAE\u5c31\u662f\u4e00\u79cd\u53d8\u76f8\u7684\u52a8\u4f5c\u7684\u5206\u8bcd\u5668). To my knowledge, \u6ca1\u6709. \u90a3\u4e48\u9000\u800c\u6c42\u5176\u6b21, \u6709\u6ca1\u6709vider captioning\u5462? \u5f88\u60ca\u8bb6\u7684\u53d1\u73b0, \u76f8\u5173\u7684\u5de5\u4f5c\u6709\u5f88\u591a, \u6700\u65e9\u53ef\u4ee5\u8ffd\u8ff0\u52302015\u5e74. \u4ee5\u4e0b\u5185\u5bb9\u6458\u5f55\u81ea\u77e5\u4e4e: </p> <ul> <li>\u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e86\u6700\u5e38\u89c4\u7684video captioning task, \u5373\uff0c\u4e00\u6761\u89c6\u9891\u751f\u6210\u4e00\u4e2a\u53e5\u5b50\u3002</li> <li>2015\uff1a \u6700\u6734\u7d20\u7684 encoder-decoder \u7684\u7ed3\u6784\uff1bdecoder \u5f15\u5165 attention\u673a\u5236</li> <li>2016\uff1a\u8003\u8651\u5bf9\u89c6\u9891\u7684\u65f6\u57df\u5efa\u6a21</li> <li>2017\uff1a\u5f15\u5165\u4e00\u4e9b\u5176\u4f59\u53ef\u7528\u7684\u4fe1\u606f: \u5c5e\u6027\uff0c\u97f3\u9891\uff0c\u5149\u6d41</li> <li>2018\uff1a\u8fd9\u4e00\u5e74\u9b54\u6539\u6bd4\u8f83\u591a\uff1areconstructor, multimodal memory</li> <li>2019: \u8fd9\u4e00\u5e74\u6587\u7ae0\u6570\u91cf\u5f88\u591a\u5440\uff1axinwang \u63d0\u51fa\u4e86VATEX\u6570\u636e\u96c6\uff1b\u5f15\u5165\u53e5\u6cd5\u4fe1\u606f\uff1b\u4f7f\u7528object information\uff1b\u4f7f\u7528motion feature\uff1bgrouned video captioning;</li> <li>2020: \u5229\u7528\u6784\u5efa\u7684scene-graph knowledge; \u4f7f\u7528 object information\uff1b\u4f7f\u7528\u53e5\u6cd5\u4fe1\u606f</li> <li>2021\uff1a\u6a21\u5757\u5316\uff1b\u975e\u81ea\u56de\u5f52\uff1bdense captioning \u6709\u597d\u591a\u7bc7\u6587\u7ae0\uff1bclip-based captioning; \u68c0\u7d22\u589e\u5f3a</li> <li>2022: swinbert e2e; zero-shot\uff1b \u9884\u8bad\u7ec3\u76f8\u5173\u7684 speific for video captioning\uff1b\u652f\u6301\u96c6\uff1b\u68c0\u7d22\u589e\u5f3a\uff1b</li> </ul> <p>\u6700\u65e9\u7684\u5de5\u4f5c\u662fS2VT, sequence to sequence - video to text: </p> <p></p> <p>\u8fd9\u91cc\u662f\u5bf9\u6bcf\u4e00\u5e27\u7684\u7167\u7247\u8fdb\u884cencode, \u7136\u540e\u8f93\u5165\u8fdbLSTM\u7f51\u7edc\u4e2d. \u8fd9\u4e2a\u601d\u8def\u5176\u5b9e\u5f88\u6734\u5b9e\u65e0\u534e, \u4f46\u662f\u63d0\u4f9b\u4e86\u975e\u5e38\u91cd\u8981\u7684\u601d\u8def: \u5c06continuos\u7684motion feature\u8f93\u5165\u8fdb\u8bed\u8a00\u6a21\u578b(\u4e0d\u8fc7embedding layer)\u53ef\u80fd\u5bf9\u4e8e\u6a21\u578b\u6765\u8bf4\u5c31\u662f\u5f88\u96be\u5b66\u4e60, \u800c\u8fd9\u79cd\u6734\u5b9e\u65e0\u534e\u7684\u65b9\u6cd5\u53ef\u80fd\u5c31\u4f1a\u5f88work. \u5f53\u7136, \u5728\u8fd9\u79cdpipeline\u4e0b, \u7528ULIP\u5bf9\u9f50feature\u548cmotion\u7684\u65b9\u6cd5\u4f9d\u7136\u53ef\u80fd\u662f\u53ef\u53d6\u7684(\u4e8c\u6bb5\u5f0f\u8bad\u7ec3). </p> <p>\u4f46\u662f\u8f6c\u5934\u4e00\u60f3: \u8fd9\u4e48\u76f4\u767d\u7684pipeline, \u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u5c1d\u8bd5\u5462? \u540e\u6765\u6211\u60f3\u4e86\u60f3, \u539f\u56e0\u6709\u4e8c: </p> <p>\u4e00: \u6570\u636e\u96c6\u95ee\u9898. video-text pair\u6570\u636e\u96c6\u5f88\u65b9\u4fbf\u5236\u4f5c, \u4f46\u662f4D-text pair\u6570\u636e\u96c6\u5374\u5341\u5206\u7a00\u7f3a. (4D: 3D(\u7a7a\u95f4\u70b9\u5750\u6807) + 1D(\u65f6\u5e8f\u4fe1\u606f)). \u6211\u4e4b\u524d\u4eff\u771f\u6570\u636e\u90fd\u975e\u5e38\u5730\u9ebb\u70e6, \u800c\u4e14\u4ec5\u4ec5\u662fhumen-centric\u7684dataset. </p> <p>\u4e8c: \u5de5\u4e1a\u754c\u8f6c\u5316\u95ee\u9898. \u5728\u73b0\u5b9e\u4e2d, \u6211\u4eec\u8c8c\u4f3c\u5bf9\u4e8e\u8fd9\u79cd4D\u89c6\u9891\u63a5\u89e6\u7684\u5341\u5206\u5c11(\u7edd\u5927\u90e8\u5206\u90fd\u662f\u89c6\u9891\u4e3a\u4e3b). \u800c\u4e14\u5373\u4f7fmotion captioning\u80fd\u591f\u5b9e\u73b0, \u8f6c\u5316\u4e3a\u5de5\u4e1a\u754c\u7684\u53ef\u80fd\u6027\u4e5f\u6709\u5f85\u5546\u69b7, \u7406\u8bba\u4e0a\u53ea\u6709\u4eba\u673a\u4ea4\u4e92, \u6216\u8005\u662f\u5177\u8eab\u667a\u80fd, \u624d\u9700\u8981\u8fd9\u65b9\u9762\u7684\u529f\u80fd. \u5f53\u7136, \u6211\u76ee\u524d\u5bf9\u5de5\u4e1a\u754c\u76f8\u5173\u9700\u6c42\u7684\u4e86\u89e3\u80af\u5b9a\u662f\u5f88\u5c11\u7684, \u56e0\u6b64\u6211\u7684\u60f3\u8c61\u529b\u53ef\u80fd\u4f1a\u88ab\u5c40\u9650\u4f4f. </p> <p>\u65e0\u8bba\u5982\u4f55, \u8fd9\u4e00\u6b21\u5b9d\u8d35\u7684\u7ecf\u5386, \u6211\u6c38\u751f\u96be\u5fd8. </p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html","title":"NeRF &amp; Instant NGP","text":""},{"location":"Blog/NeRF%26Instant_NGP/note.html#nerf","title":"NeRF","text":"<p>Representing Scenes as Neural Radiance Fields for View Synthesis</p> <p>\u8bba\u6587\u94fe\u63a5</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#motivation","title":"Motivation","text":"<p>\u8981\u771f\u6b63\u7406\u89e3\u5de5\u4f5c\u7a76\u7adf\u5e72\u4e86\u4ec0\u4e48\uff0c\u903b\u8f91\u4e0a\uff0c\u8981\u5148\u4e86\u89e3\u4e00\u4e2a3D\u7269\u4f53\u6a21\u578b\u6446\u5728\u90a3\u91cc\uff0c\u662f\u5982\u4f55\u6210\u50cf\u5230\u5c4f\u5e55\u4e0a\u7684\u3002\u4f20\u7edfCG\u4e0a\uff0c\u662f\u771f\u5b9e\u7269\u4f53\u7528frustum\u6846\u4f4f\uff0c\u7ecf\u8fc7\u900f\u89c6\u6295\u5f71\u52302D\uff0c\u7136\u540e\u901a\u8fc7\u5149\u6805\u5316\u8d4b\u4e88\u50cf\u7d20\u989c\u8272\uff0c\u901a\u8fc7Shading\u6253\u4e0a\u5149\uff0c\u901a\u8fc7\u7eb9\u7406\u8d4b\u4e88\u5176\u4ed6\u5c5e\u6027\uff0c\u7b49\u7b49\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u9ad8\u5ea6\u4e0d\u53ef\u53c2\u6570\u5316\uff0c\u800c\u4e14\u5de5\u4f5c\u91cf\u590d\u6742\uff0c\u56e0\u4e3a\u9700\u8981\u83b7\u53d6texture\uff0cgeometry\u7b49\u4fe1\u606f\u3002\u6709\u4ec0\u4e48\u597d\u7684\u65b9\u6cd5\u53bb represent a static scene\u5462\uff1f\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cdcontinuous 5D function\u6765\u8fdb\u884c\u8868\u793a\uff0c\u5e76\u914d\u5408\u4e86Volume Rendering\u8fdb\u884c2D\u6210\u50cf\u3002\u90a3\u4e48\u6709\u4e86\u5982\u6b64\u9ad8\u5ea6\u5316\u53c2\u6570\u5316\u7684\u8868\u8fbe\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u7528\u6765\u5e72\u4e00\u4e9b\u521b\u65b0\u7684\u64cd\u4f5c\u5462\uff1f\u795e\u7ecf\u7f51\u7edc\u5c31\u5f88\u559c\u6b22\u53c2\u6570\uff0c\u5e76\u4e14\u559c\u6b22\u62df\u5408\u51fd\u6570\u8fdb\u884c\u201c\u731c\u6d4b\u201d\u3002\u56e0\u6b64\uff0c\u4f5c\u8005\u7528\u795e\u7ecf\u7f51\u7edc\u5f3a\u5927 \u7684\u201c\u731c\u6d4b\u201d\u80fd\u529b\uff0c\u89e3\u51b3\u4e86\u4e00\u4e2a\u5b9e\u9645\u5e94\u7528\u95ee\u9898\uff1a synthesizing novel views of complex scenes\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#technical-contribution","title":"Technical Contribution","text":"<ul> <li>An approach for representing continuous scenes with complex geometry and materials as 5D neural radiance fields, parameterized as basic MLP networks.</li> <li>A hierarchical sampling strategy to allocate the MLP\u2019s capacity towards space with visible scene content. \uff08\u8fd9\u4e00\u70b9\u540e\u9762\u4f1a\u8bf4\uff09</li> <li>A positional encoding to map each input 5D coordinate into a higher dimensional space, which enables us to successfully optimize neural radiance fields to represent high-frequency scene content.\uff08\u4e4b\u540e\u4e5f\u4f1a\u8bf4\uff09</li> </ul>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#5d-volume-rendering","title":"5D &amp; Volume Rendering","text":"<p>\u4ee5\u4e0b\u7684\u5185\u5bb9\uff0c\u8fd8\u6ca1\u6d89\u53ca\u5230down-streaming task\u76f8\u5173\u7684\u5185\u5bb9\u3002\u5728task-specific application\u7684\u65f6\u5019\uff0c\u903b\u8f91\u4f1a\u548c\u4e0b\u9762\u4ecb\u7ecd\u7684\u7565\u6709\u4e0d\u540c\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#detailed-definition-of-5d-function","title":"Detailed Definition of 5D Function","text":"<p>\u5728\u5b9a\u4e49\u51fd\u6570\u4e4b\u524d\uff0c\u5148\u8bf4\u660e\u4e00\u4e9b\u80cc\u666f\u3002\u5047\u8bbe\u4e00\u4e2a\u7269\u4f53\u5728\u539f\u70b9\uff0c\u7136\u540e\u8ddd\u79bb\u534a\u5f84\u4e3aR\u7684\u534a\u7403\u91cc\u9762\uff0c\u5206\u5e03\u4e86\u5f88\u591a\u7684camera\uff0c\u9762\u5411\u8fd9\u4e2a\u7269\u4f53\uff0c\u80fd\u591f\u62cd\u6444\u7167\u7247\uff0ci.e.\uff0c\u80fd\u591f\u53d1\u51fa\u5927\u91cf\u7684\u5149\u7ebf\u3002\u5149\u7ebf\u62e5\u6709\u5355\u4f4d\u65b9\u5411\u5411\u91cf\uff0c\u7528\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0b\u7684\u6807\u51c6\u7403\u5750\u6807\u7cfb\u8fdb\u884c\u8868\u793a\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff1a\\(\\theta\\) \\(\\phi\\)\u8fdb\u884c\u8868\u793a\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u6765\u770b\u8fd9\u4e2a5D\u51fd\u6570\u5230\u5e95\u5e72\u4ec0\u4e48\u4e86\uff1a\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u70b9\u7684\u5750\u6807\\(\\textbf{x}\uff08x, y, z\uff09\\)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7ecf\u8fc7\u8be5\u70b9\u7684\u5149\u7ebf\u7684\u5355\u4f4d\u65b9\u5411\u5411\u91cf\u7684\u7b1b\u5361\u5c14\u5355\u4f4d\u7403\u7684\u89d2\u5ea6\u8868\u793a(\\(\\theta\\),  \\(\\phi\\))\uff0c\u8f93\u51fa\u7684\u662f\u8fd9\u4e2a\u8f93\u5165\u4e0b\u8be5\u70b9\u7684RGB\u503c\\(\\textbf{c} = (r,g,b)\\)\u548c\u5bc6\u5ea6(density)\\(\\sigma\\)\u3002\u8fd9\u4e00\u53e5\u8bdd\u91cc\u9762\u6700\u96be\u7406\u89e3\u7684\u662f\u5bc6\u5ea6\\(\\sigma\\)\u4e86\uff0c\u5b83\u4ee3\u8868\u8be5\u70b9\u7684\u5bf9\u5149\u7684\u963b\u6321\u6548\u679c\uff0c\u5bc6\u5ea6\u8d8a\u9ad8\uff0c\u5149\u8d8a\u900f\u4e0d\u8fc7\u53bb\uff0c\u53cd\u4e4b\u5219\u5149\u5f88\u5bb9\u6613\u900f\u8fc7\u53bb\u3002\u8fd9\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u9633\u5149\u4e0b\u4e3e\u8d77\u4e00\u7247\u8584\u6811\u53f6\uff0c\u4f9d\u7136\u80fd\u591f\u770b\u5230\u6811\u53f6\u540e\u7684\u90e8\u5206\u666f\u8272\uff1b\u800c\u5982\u679c\u4e3e\u8d77\u4e00\u5757\u9e45\u5375\u77f3\uff0c\u6839\u672c\u770b\u4e0d\u89c1\u3002\u53e6\u5916\uff0c\u4e3a\u4ec0\u4e48RGB\u503c\u8fd8\u9700\u8981\u8f93\u51fa\uff0c\u4e00\u4e2a\u70b9\u7684RGB\u76f4\u89c9\u4e2d\u4e0d\u5e94\u8be5\u4e00\u6837\u5417\uff1f\u4f46\u662f\u5176\u5b9e\u7ec6\u60f3\u53d1\u73b0\u4e0d\u662f\u5982\u6b64\u3002\u4e00\u4e2a\u7269\u4f53\u5728\u4e0d\u540c\u89c6\u89d2\u4e0b\uff0c\u56e0\u4e3a\u5149\u7ebf\u7684\u4e0d\u540c\uff0c\u989c\u8272\u662f\u4f1a\u53d1\u751f\u7565\u5fae\u7684\u53d8\u5316\u7684\uff0c\u5373\u4f7f\u662f\u8fd9\u4e2a\u7269\u4f53\u4e0a\u7684\u540c\u4e00\u4e2a\u70b9\u3002</p> <p>\u8fd9\u4fbf\u662fTechnical Contribution\u7b2c\u4e00\u70b9\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#volume-rendering","title":"Volume Rendering","text":"<p>\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u9ad8\u5ea6\u53c2\u6570\u5316\u4e00\u4e2a\u6a21\u578b\u4e86\uff1a\u5728\u4e00\u4e2a\u89c6\u89d2\u4e0b\uff0c\u5373\u5728\u4e00\u5806\u6563\u53d1\u51fa\u6765\u7684\u5149\u7ebf\u4e0b\uff0c\u4f1a\u7ecf\u8fc7\u73b0\u5b9e\u6a21\u578b\u4e2d\u7684\u4e00\u7cfb\u5217\u70b9\uff0c\u7136\u540e\u90fd\u80fd\u901a\u8fc7\u51fd\u6570\u77e5\u9053\u5728\u8fd9\u6761\uff08\u4e9b\uff09\u5149\u7ebf\u7684\u89c6\u89d2\u4e0b\uff0c\u5b83\u4eec\u5404\u81ea\u7684density\u4e0eRGB\u662f\u591a\u5c11\u3002\u90a3\u4e48\u5982\u4f55\u6210\u50cf\u5462\uff1f\u6211\u603b\u4e0d\u80fd\u518d\u8d70\u4e00\u904dGraphics Pipeline\u4e86\uff0c\u8981\u5229\u7528\u4e0a\u8fd9\u4e9b\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u6cbf\u7528\u4e86\u4f20\u7edf\u7684\u4f53\u6e32\u67d3\u6280\u672f\uff1ause classical volume rendering techniques to accumulate those colors and densities into a 2D image\uff08\u8bba\u6587\u539f\u6587\uff09\u3002\u5728\u8fd9\u6761\u5149\u7ebf\u4e0a\uff0c\u5047\u8bbe\u6211\u77e5\u9053\u7ecf\u8fc7\u4e86\u54ea\u4e9b\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u70b9\u7684xyz\u5750\u6807\u548c\u5149\u7ebf\u7684density\u548cRGB\u6211\u90fd\u77e5\u9053\u3002\u8fd9\u6761\u5149\u7ebf\u5c06\u4f1a\u4ee3\u8868\u7684\u989c\u8272\u662f\u4ec0\u4e48\u5462\uff1f\u4f53\u6e32\u67d3\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ C(r) = \\int_{t_n}^{t_f} T(t) \\cdot \\sigma(r(t)) \\cdot c(r(t)) \\, dt ,\\ where: \\\\ T(t) = \\exp\\left(-\\int_{t_n}^{t} \\sigma(r(s)) \\, ds \\right) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(C(r)\\)\u662f\u5149\u7ebf\\(r\\)\u7684\u6700\u7ec8\u989c\u8272\uff0c\u6709\u7ea2\u7eff\u84dd\u4e09\u4e2a\u989c\u8272\u7684\u5206\u91cf\u3002</li> <li>\\(t_n\\)\u548c\\(t_f\\)\u5206\u522b\u662f\u5149\u7ebf\u7684\u8fd1\u88c1\u526a\u9762\u548c\u8fdc\u88c1\u526a\u9762\u7684\u53c2\u6570\u3002</li> <li>\\(T(t)\\)\u662f\u4ece\u8d77\u70b9\u5230\u5f53\u524d\u70b9t\u7684\u900f\u660e\u5ea6\u79ef\u7d2f\uff08\u901a\u5e38\u4e3a \\(T(t) = \\exp\\left(-\\int_{t_n}^{t} \\sigma(r(s)) \\, ds \\right)\\)\uff09\u3002</li> <li>\\(\\sigma(r(t))\\) \u662f\u70b9 \\(r(t)\\)\u5904\u7684\u4f53\u79ef\u5bc6\u5ea6\u3002</li> <li>\\(c(r(t))\\)\u662f\u70b9 \\(r(t)\\)\u5904\u7684\u989c\u8272\u3002</li> </ul> <p>\u90a3\u4e48\u8fd9\u6837\u4e00\u4e2a\u5149\u7ebf\u6700\u540e\u5448\u73b0\u7684\u989c\u8272\u77e5\u9053\u4e86\uff0c\u4e00\u4e2a\u6444\u50cf\u5934\u5c31\u662f\u77e5\u9053\u4e86\u4e0d\u540c\u65b9\u5411\u7684\u5149\u7ebf\u7684\u989c\u8272\uff0c\u4e5f\u5c31\u77e5\u9053\u4e86\u6700\u540e\u5982\u4f55\u50cf\u7d20\u4e0a\u9762\u586b\u989c\u8272\u4e86\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#training-and-inferencing-for-task","title":"Training and Inferencing for Task","text":""},{"location":"Blog/NeRF%26Instant_NGP/note.html#pipeline","title":"Pipeline","text":"<p>\u90a3\u4e48\u63a5\u4e0b\u6765\u5c06\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u7f51\u7edc\u7684pipeline\u3002\u9996\u5148\u8f93\u5165\u8fdb\u7f51\u7edc\u7684\u662f\u4e00\u4e2a\u89c6\u89d2\u4e0b\u62cd\u6444\u7684\u7167\u7247\uff0c\u4ee5\u53ca\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u7f51\u7edc\u4e00\u5171\u6709\u4e24\u4e2a\uff1a\u7c97\u7f51\u7edc\u548c\u7ec6\u7f51\u7edc\u3002\u7c97\u7f51\u7edc\u4e0a\uff1a\u9996\u5148\uff0c\u4e00\u6761\u5149\u7ebf\u4e0a\uff0c\u4f1a\u901a\u8fc7\u7c97\u91c7\u6837\u5728\u8fd1\u70b9\u548c\u8fdc\u70b9\u4e4b\u95f4\u9009\u51fa\u4e00\u5806\u7a7a\u95f4\u4e2d\u7684\uff08\u4e0d\u662f\u7269\u4f53\u4e0a\u7684\uff01\uff09\u70b9\uff08\u6ca1\u9519\uff0c\u539f\u672c\u7269\u4f53\u76843D\u4fe1\u606f\u662f\u4e0d\u77e5\u9053\u7684\uff09\uff0c\u8f93\u5165\u8fdb5D\u51fd\u6570\uff08\u8fd9\u4e2a\u51fd\u6570\u4f7f\u7528\u4e00\u5806\u5168\u8fde\u63a5\u5c42\u53bb\u62df\u5408\u7684\uff09\uff08\u4e00\u5f00\u59cb\u4e0d\u77e5\u9053\uff0c\u4efb\u610f\u521d\u59cb\u5316\u7684\uff09\uff0c\u201c\u5f97\u5230\u201d\uff08\u201c\u5f97\u5230\u201d\u8fd9\u4e00\u5757\u7684\u7f51\u7edc\u4e5f\u4f1a\u7ec6\u8bb2\uff09\u8fd9\u4e9b\u70b9\u7684density and RGB\uff0c\u7136\u540e\uff1b\u7136\u540e\u5bf9\u4e8e\u76f8\u673a\u6765\u8bf4\uff0c\u7528\u8fd9\u4e9b\u5bc6\u5ea6\u548c\u989c\u8272\u4fe1\u606f\u8fdb\u884c\u4f53\u6e32\u67d3\uff0c\u5f97\u5230\u4e00\u5f20\u56fe\u7247\uff0cpixel-wise\u5730\u548cground truth\u56fe\u7247\u8fdb\u884c\u989c\u8272\u4e0a\u7684\u6bd4\u8f83\uff0c\u8ba1\u7b97\u51faMSE Loss\u5e76\u53cd\u5411\u4f20\u64ad\u66f4\u65b0\u68af\u5ea6\u3002\u62ff\u5230\u4e86\u7c97\u7f51\u7edc\u63d0\u4f9b\u7684\u70b9\u7684\u5bc6\u5ea6\u4fe1\u606f\uff0c\u66f4\u65b0\u91c7\u6837\u7b56\u7565\uff0c\u8fdb\u884c\u7ec6\u91c7\u6837\uff0c\u5f97\u5230\u65b0\u7684\u4e00\u5806\u91c7\u6837\u70b9\uff0c\u548c\u7c97\u91c7\u6837\u51fa\u6765\u7684\u70b9\u96c6\u8fdb\u884c\u548c\u5e76\uff0c\u518d\u4e00\u6b21\u4e00\u8d77\u8f93\u5165\u8fdb5D\u51fd\u6570\uff0c\u201c\u5f97\u5230\u201d\u4e86\u4e00\u5806\u7684\u989c\u8272\u548c\u5bc6\u5ea6\u4fe1\u606f\uff0c\u8fdb\u884c\u4f53\u6e32\u67d3\uff0c\u5f97\u5230\u56fe\u7247\u5e76\u8ba1\u7b97MSE Loss\uff0c\u6700\u540e\u7528\u7c97\u7f51\u7edc\u7684loss\u548c\u7ec6\u7f51\u7edc\u81ea\u5df1\u521a\u521a\u7b97\u51fa\u6765\u7684loss\u76f8\u52a0\uff0c\u7528\u8fd9\u4e2a\u5408\u5e76\u540e\u7684Loss\u53bb\u53cd\u5411\u4f20\u64ad\u3002</p> <p>Loss\u516c\u5f0f\uff1a\\(L = \\sum_{r \\in R} \\left( \\left\\| \\hat{C}_c(r) - C(r) \\right\\|_2^2 + \\left\\| \\hat{C}_f(r) - C(r) \\right\\|_2^2 \\right)\\)</p> <p>\u4e0b\u56fe\u5f88\u597d\u5730\u5c55\u793a\u4e86\u4e0a\u8ff0\u7684\u6d41\u7a0b\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u4e0a\u8ff0\u8fd8\u4e0d\u591f\u7ec6\u8282\uff0c\u7f51\u7edc\u6d41\u7a0b\u5982\u4e0b\u56fe\uff08\u56fe\u6765\u81ea\u539f\u8bba\u6587\uff09\u3002\u4e0a\u56fe\u4e2d\u7ea2\u7bad\u5934\u540e\u9762\u7684\u6d41\u7a0b\uff0c\u5c31\u5982\u4e0a\u8ff0\u6240\u8bf4\uff1b\u800c\u7ea2\u7bad\u5934\u4e4b\u524d\u7684\u90e8\u5206\uff0c\u5c31\u662f\u5728\u5c1d\u8bd5\u62df\u54085D\u51fd\u6570\uff0c\u4f46\u662f\u4ecd\u6709\u51e0\u4e2a\u7ec6\u8282\u9700\u8981\u8865\u5145\u3002</p> <p></p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#multi-view-consistent-representation","title":"Multi-view Consistent Representation","text":"<p>We encourage the representation to be multiview consistent by restricting the network to predict the volume density \u03c3 as a function of only the location x, while allowing the RGB color c to be predicted as a function of both location and viewing direction. (from NeRF)</p> <p>\u7b2c\u4e00\u70b9\uff1a\u4e3a\u4ec0\u4e48\u7ea2\u7bad\u5934\u540e\u9762\u5148\u5355\u72ec\u51fa\u5bc6\u5ea6\uff0c\u8f93\u51fa\u5b83\u4e4b\u540e\u624d\u518d\u7ed3\u5408\u5149\u7ebf\u65b9\u5411\u4fe1\u606f\uff0c\u7ecf\u8fc7MLP\u5f97\u5230\u989c\u8272\u503c\u5462\uff1f\u56e0\u4e3a\u76f4\u89c9\u4e0a\uff1a\u4e0d\u540c\u89d2\u5ea6\u89c2\u5bdf\u4e0b\u7684\u540c\u4e00\u4e2a\u70b9\uff0c\u867d\u7136\u8bf4\u5b83\u7684\u989c\u8272\u662f\u4e0d\u540c\u7684\uff0c\u4f46\u662fdensity\u5e94\u8be5\u662f\u76f8\u540c\u7684\uff01\u56e0\u6b64\uff0c\u76f4\u5230\u8f93\u51fadensity\u4e4b\u524d\uff0c\u7f51\u7edc\u4e2d\u4e0d\u80fd\u77e5\u9053\u65b9\u5411\u4fe1\u606f\u7684\u5b58\u5728\u3002</p> <p>\u8c01\u5148\u8f93\u5165\uff0c\u8c01\u5148\u8f93\u51fa\uff0c\u8c01\u540e\u8f93\u5165\uff0c\u8c01\u540e\u8f93\u51fa\uff0c\u4e0b\u56fe\u6f14\u793a\u7684\u5f88\u6e05\u695a\uff1a</p> <p></p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#positional-encoding","title":"Positional Encoding","text":"<p>This is consistent with recent work by Rahaman et al. , which shows that deep networks are biased towards learning lower frequency function. (from NeRF)</p> <p>\u7b2c\u4e8c\u70b9\uff1a\\(\\gamma\\)\u662f\u4ec0\u4e48\u73a9\u610f\u513f\uff1f\u5176\u5b9e\u8fd9\u4ee3\u8868Positional Encoding\u5750\u6807\u548c\u65b9\u5411\u5411\u91cf\u4e4b\u540e\u7ed3\u679c\u3002\u4e3a\u4ec0\u4e48\u8981\u4f4d\u7f6e\u7f16\u7801\uff1f\u56e0\u4e3a\u5b9e\u9645\u4e2d\uff0c\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u53d8\u5316\u8f83\u77ed\uff0c\u4f46\u662f\u8574\u542b\u7684\u4fe1\u606f\u7684\u53d8\u5316\u53ef\u80fd\u201c\u8f83\u5feb\u201d\uff0c\u5373\uff0csampling\u9891\u7387\u4e0d\u591f\uff0c\u5bb9\u6613\u9020\u6210\u8f93\u51fa\u56fe\u50cf\u989c\u8272\u548c\u5bc6\u5ea6\u53d8\u5316\u8f83\u4e3a\u5e73\u7f13\u7684\u73b0\u8c61\u3002Positional Encoding\u516c\u5f0f\u5982\u4e0b\uff1a  \u8fd9\u6837\u901a\u8fc7\u53cc\u5c04\u5c06\u4f4e\u9891\u7684\u4fe1\u606f\u6295\u5c04\u5230\u9ad8\u9891\u7684\u4fe1\u606f\uff0c\u8ba9\u5b83\u80fd\u591f\u611f\u77e5\u9ad8\u9891\u7684\u53d8\u5316\uff0c\u4ece\u800c\u589e\u52a0\u9c81\u68d2\u6027\u3002\u5728\u672c\u7bc7\u5de5\u4f5c\u4e2d\uff0cxyz\u4fe1\u606f\u548cview\u4fe1\u606f\u90fd\u8fdb\u884c\u4e86\u4f4d\u7f6e\u7f16\u7801\u3002\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u5728transformer\u4e2d\u4e5f\u6709\u5e94\u7528\uff0c\u4f46\u662f\u8bba\u6587\u4e2d\u7740\u91cd\u63d0\u53ca\u4e86Transformer\u548cNeRF\u4e2d\u4e24\u8005\u4f5c\u7528\u4e0a\u7684\u533a\u522b\uff1a</p> <p>A similar mapping is used in the popular Transformer architecture, where it is referred to as a positional encoding. However, Transformers use it for a different goal of providing the discrete positions of tokens in a sequence as input to an architecture that does not contain any notion of order. In contrast, we use these functions to map continuous input coordinates into a higher dimensional space to enable our MLP to more easily approximate a higher frequency function.</p> <p>\u8fd9\u4fbf\u662ftechnical contribution\u7b2c\u4e8c\u70b9\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#hierarchical-volume-sampling","title":"Hierarchical Volume Sampling","text":"<p>Our rendering strategy of densely evaluating the neural radiance field network at N query points along each camera ray is inefficient: free space and occluded regions that do not contribute to the rendered image are still sampled repeatedly. (from NeRF)</p> <p>\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1Coarse and Fine Sampling\uff08\u7c97\u91c7\u6837\u548c\u7ec6\u91c7\u6837\uff09\uff1f\u539f\u56e0\u5728\u4e0a\u9762\u8fd9\u6bb5\u8bba\u6587\u4e2d\u7684\u539f\u8bdd\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\u3002\u5747\u5300\u91c7\u6837\u8fd9\u79cdcoarse\u7684\u91c7\u6837\u5f88\u5bb9\u6613\u628a\u6ce8\u610f\u529b\u5206\u585e\u5728\u90a3\u4e9bdensity\u5de8\u4f4e\u7684\u5730\u65b9\u3002\u56e0\u6b64\u5728\u7c97\u91c7\u6837\u540e\u5927\u6982\u77e5\u9053\u90a3\u4e00\u7247\u90e8\u5206\u5206\u5e03\u7684\u70b9\u591a\u4e4b\u540e\uff0c\u9700\u8981\u4e00\u79cd\u673a\u5236\u5728\u6709\u70b9\u7684\u5730\u65b9\u591a\u91c7\u6837\u3002\u5c31\u5982\u4e0b\u4e00\u5f20\u56fe\u6240\u793a\uff1a\u68c0\u6d4b\u5230\u7684\u5bc6\u5ea6\u503c\u968f\u8ddd\u79bb\u53d8\u5316\u7684\u51fd\u6570\uff0c\u53d1\u73b0\u6709\u5f88\u591a\u5730\u65b9\u7531\u4e8e\u6ca1\u6709\u70b9\uff0c\u800c\u5bc6\u5ea6\u975e\u5e38\u975e\u5e38\u4f4e\uff0c\u90a3\u4e48\u5747\u5300\u91c7\u6837\u5c31\u663e\u5f97\u4e0d\u662f\u90a3\u4e48\u5408\u9002\u4e86\u3002</p> <p>  \u4e0a\u9762\u7684\u4e24\u4e2a\u516c\u5f0f\uff1a\u7b2c\u4e00\u884c\u8868\u793a\u5728\u8303\u56f4 \\([tn,tf]\\)\u533a\u95f4\u4e2d\u5747\u5300\u91c7\u6837\uff0c\u7b2c\u4e8c\u884c\u8868\u793a\u6839\u636e\u5bc6\u5ea6\u4fe1\u606f\u7ec6\u91c7\u6837\u3002</p> <p>\u8fd9\u4fbf\u662ftechnical contribution\u7b2c\u4e09\u70b9\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#concatenation","title":"Concatenation","text":"<p>\u4e3a\u4ec0\u4e48xyz\u5750\u6807\u4fe1\u606f\u7ecf\u8fc7\u4f4d\u7f6e\u7f16\u7801\u4e4b\u540e\u53d8\u6210\u4e86256\u7684\u9ad8\u7ef4\u4fe1\u606f\u4e4b\u540e\uff0c\u4ecd\u7136\u9700\u8981\u548c\u539f\u6765\u7684\u4f4d\u7f6e\u7f16\u7801concate\u5462\uff1f\u539f\u8bba\u6587\u4e2d\u6ca1\u7ec6\u8bf4\uff0c\u4f46\u662f\u901a\u5e38\u8ba4\u4e3a\u8fd9\u79cd\u65b9\u6cd5\u6709\u52a9\u4e8e\u63d0\u9ad8\u7f51\u7edc\u5bf9\u7ec6\u8282\u7684\u6355\u6349\u80fd\u529b\uff0c\u56e0\u4e3a\u7f51\u7edc\u80fd\u591f\u63a5\u6536\u5230\u66f4\u591a\u7684\u9891\u7387\u6210\u5206\uff0c\u8fd9\u5bf9\u4e8e\u8868\u793a\u590d\u6742\u7684\u573a\u666f\u548c\u7ec6\u8282\u975e\u5e38\u91cd\u8981\u3002</p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#conclusion","title":"Conclusion","text":"<p>5D\u51fd\u6570\u8868\u793a\uff0c\u4f4d\u7f6e\u7f16\u7801\uff0c\u7ee7\u627f\u5f0f\u91c7\u6837\uff08\u7ec6\u91c7\u6837\uff09\u975e\u5e38work\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\uff1a\u5982\u679c\u6ca1\u6709\u89c6\u89d2\u4fe1\u606f\uff085D\u7f3a\u5931\u65b9\u5411\u89d2\u5ea6\u76842D\uff09\u3001\u6ca1\u6709\u4f4d\u7f6e\u7f16\u7801\u7684\u6548\u679c\u662f\u8f83\u5dee\u7684\u3002\u76f4\u89c2\u770b\u51fa\uff1a\u6ca1\u6709\u89c6\u89d2\u4fe1\u606f\uff0c\u5f88\u96be\u4ea7\u751f\u9ad8\u5149\uff08specularity\uff09\u6548\u679c\uff1b\u6ca1\u6709\u4f4d\u7f6e\u7f16\u7801\uff0c\u6a21\u578b\u4e0drobust\uff0cinference\u7ed3\u679cpixel\u4e4b\u95f4\u7684\u989c\u8272\u53d8\u5316\u5f88\u4fdd\u5b88\u3002</p> <p></p> <p>\u4e8e\u662f\u4e4e\u5730\uff0c\u4e00\u7bc7\u4f1f\u5927\u7684\u5de5\u4f5c\u8bde\u751f\u4e86\uff1a</p> <p></p>"},{"location":"Blog/NeRF%26Instant_NGP/note.html#instant-ngp","title":"Instant NGP","text":"<p>Neural graphics primitives, parameterized by fully connected neural networks, can be costly to train and evaluate.</p> <p>\u8bba\u6587\u94fe\u63a5</p> <p>Instant-NPG\u548cNeRF\u6709\u5f88\u591a\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u662fNeRF\u539f\u6765\u7684MLP\u7f51\u7edc\u8bad\u7ec3\u65f6\u95f4\u5f88\u957f\u3002\u4e3a\u4e86\u80fd\u9ad8\u8d28\u91cf\u91cd\u5efa\u573a\u666f\uff0c\u5f80\u5f80\u9700\u8981\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u7f51\u7edc\uff0c\u6bcf\u4e2a\u91c7\u6837\u70b9\u8fc7\u4e00\u904d\u7f51\u7edc\u5c31\u4f1a\u8017\u8d39\u5927\u91cf\u65f6\u95f4\u3002\u56e0\u6b64\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4f7f\u7528grid\u6765\u89e3\u51b3\uff0c\u5373voxel\u3002\u628a\u6574\u4e2a\u7a7a\u95f4\u7528\u4e00\u4e2a\u4e2a\u7684\u7acb\u65b9\u4f53\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u9ad8\u7ef4\u7279\u5f81\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u627e\u5230\u5305\u56f4\u5b83\u7684\u516b\u4e2a\u5b9a\u70b9\uff0c\u5229\u7528\u5b83\u4eec\u7684xyz\u5750\u6807\u7528\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u5f15\u7d22\u51fa\u516b\u4e2a\u9ad8\u7ef4\u7279\u5f81\uff0c\u7136\u540e\u901a\u8fc7Interpolation\u5c31\u53ef\u4ee5\u5b9e\u73b0\u70b9\u7684\u9ad8\u7ef4\u7279\u5f81\u7684\u8868\u8fbe\u4e86\u3002</p> <p>\u90a3\u4e48\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u80fd\u591f\u901a\u8fc7\u70b9\u7684\u5750\u6807\u4fe1\u606f\u5f15\u7d22\u503c\u5462\uff1f\u54c8\u5e0c\u8868\u5e94\u8fd0\u800c\u751f\u3002\u5c06xyz\u5750\u6807\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u6574\u6570\uff0c\u7136\u540e\u5728\u6570\u7ec4\u91cc\u9762\u5f15\u7d22\u51fa\u9ad8\u7ef4\u7279\u5f81\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u7acb\u65b9\u4f53\u7684\u5927\u5c0f\u5982\u679c\u662f\u56fa\u5b9a\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4e0d\u591frobust\uff0c\u56e0\u6b64\u9700\u8981\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684\u7acb\u65b9\u4f53\u5212\u5206\u3002\u6765\u591a\u91cd\u8868\u8fbe\u8fd9\u4e2a\u9ad8\u7ef4\u5411\u91cf\u3002\u8bba\u6587\u4e2d\uff0c\u4e00\u5171\u67098\u79cd\u5206\u8fa8\u7387\uff0c\u7136\u540e\u6700\u540e\u4f1a\u5bf9\u516b\u4e2a\u5c5e\u6027\u7ed3\u679c\u518d\u4e00\u6b21\u8fdb\u884c\u63d2\u503c\u3002</p> <p>\u5728\u8bba\u6587\u4e2d\uff0c\u6570\u7ec4\u7684\u5bb9\u91cf\u6709\u9650\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u4ea7\u751f\u54c8\u5e0c\u51b2\u7a81\uff0c\u5373\u4e0d\u540c\u7684\u7acb\u65b9\u4f53\u9876\u70b9\u7d22\u5f15\u5230\u7684\u9ad8\u7ef4\u5411\u91cf\u53ef\u80fd\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u8bba\u6587\u4e2d\u8ba4\u4e3a\uff0c\u8fd9\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u56e0\u4e3a\u6709\u516b\u4e2a\u5206\u8fa8\u7387\u7684\u7ed3\u679c\uff0c\u8db3\u4ee5\u514b\u670d\u8fd9\u79cd\u5c0f\u6270\u52a8\u3002</p> <p></p> <p>\u56e0\u6b64Instant NGP\u7684pipeline\u5982\u4e0a\uff0c\u548cNeRF\u975e\u5e38\u76f8\u4f3c\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5728\u4e00\u4e2a\u5206\u8fa8\u7387\u4e0b\uff0c\u627e\u5230\u7acb\u65b9\u4f53\u7684\u516b\u4e2a\u9876\u70b9\uff0c\u8fd9\u516b\u4e2a\u9876\u70b9xyz\u5750\u6807\u5404\u81ea\u7ecf\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u5f15\u7d22\uff0c\u4ece\u54c8\u5e0c\u8868\u4e2d\u4ee5\\(O(1)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5f97\u5230\u5404\u81ea\u7684\u9ad8\u7ef4\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u8fdb\u884c\u63d2\u503c\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u91cd\u590d\u516b\u6b21\uff08\u56e0\u4e3a\u6709\u516b\u4e2a\u5206\u8fa8\u7387\uff09\u3002\u5f97\u5230\u4e86\u516b\u4e2a\u9ad8\u7ef4\u5411\u91cf\u4e4b\u540e\uff0c\u518d\u6b21\u63d2\u503c\u5f97\u5230\u5411\u91cf\uff0c\u8f93\u5165MLP\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u4e0d\u662fNeRF\u7684MLP\uff0c\u800c\u662f\u5f88\u5c0f\u7684MLP\uff0c\u56e0\u4e3a\u8f93\u5165\u5411\u91cf\u7684\u53c2\u6570\u6570\u91cf\u4e0d\u591a\uff09\uff1b\u800c\u4e4b\u540e\u7684\u4e00\u5207\u548cNeRF\u975e\u5e38\u76f8\u4f3c\u3002</p> <p>\u5173\u4e8e\\(point\\rightarrow vector_{input}\\)\u7684\u751f\u52a8\u5316\u8fc7\u7a0b\u5982\u4e0b\uff08\u6765\u81ea\u539f\u8bba\u6587\uff1b\u75282D\u7684\u6f14\u793a\u56fe\u6765\u6f14\u793a3D\u4e2d\u7684\u5b9e\u9645\u64cd\u4f5c\uff09</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html","title":"\u57fa\u672c\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>\u6570\u7ec4\uff0c\u94fe\u8868\uff0c\u6808\uff0c\u961f\u5217</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_2","title":"\u6570\u636e\u7ed3\u6784\u7b97\u6cd5\u590d\u6742\u5ea6\u4ecb\u7ecd","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#brief-intro","title":"Brief Intro","text":"<p>\u6570\u636e\u7ed3\u6784: \u76f8\u4e92\u4e4b\u95f4\u5b58\u5728\u4e00\u79cd\u6216\u8005\u591a\u79cd\u7279\u5b9a\u5173\u7cfb\u7684\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408. \u5728\u903b\u8f91\u4e0a\u53ef\u4ee5\u5206\u4e3a\u7ebf\u6027\u7ed3\u6784, \u6563\u5217\u7ed3\u6784, \u6811\u5f62\u7ed3\u6784, \u56fe\u5f62\u7ed3\u6784\u7b49\u7b49</p> <p>\u7b97\u6cd5: \u6c42\u89e3\u5177\u4f53\u95ee\u9898\u7684\u6b65\u9aa4\u63cf\u8ff0, \u4ee3\u7801\u4e0a\u8868\u73b0\u51fa\u6765\u662f\u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u7684\u4e00\u7ec4\u6709\u9650\u7684\u6307\u4ee4\u5e8f\u5217</p> <p>\u7b97\u6cd5\u590d\u6742\u5ea6: \u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6, \u8861\u91cf\u7b97\u6cd5\u6548\u7387, \u7b97\u6cd5\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d, \u968f\u7740\u6570\u636e\u89c4\u6a21n\u7684\u589e\u957f, \u7b97\u6cd5\u6267\u884c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u589e\u957f\u901f\u5ea6. </p> <p>\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5173\u7cfb: </p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a\\(O(n!)\\)\u662f\u6700\u5927\u7684\uff0c\u800c\\(O(nlogn) &lt; O(n^i)\\)\u5982\u679c\\(i&gt;1\\)\uff0c\u8fd9\u4e00\u7ed3\u8bba\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u4f5c\u5546\u6c42\u6781\u9650\u8bf4\u660e\uff08\u6d1b\u5fc5\u8fbe\u6cd5\u5219\uff09\u3002</p> <p>\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6: </p> <p></p> <p></p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#algorithm-analysis","title":"Algorithm Analysis","text":"<p>Landau Symbols\u89c4\u5b9a\uff1a</p> <ul> <li>\\(\\Theta\\) notation: A function \\(f(n) = \\Theta(g(n))\\) if there exist positive \\(k, c_1, c_2\\) such that: \\(c_1 g(n) &lt; f(n) &lt; c_2 g(n)\\) whenever \\(n&gt;k\\)</li> <li>Big O notation: \\(f(n) = O(g(n))\\) if there exists k and c such that \\(f(n) &lt; cg(n)\\) whenever \\(n&gt;k\\)</li> </ul> <p>\u6211\u4eec\u4ece\u6781\u9650\u7684\u89d2\u5ea6\u6765\u770b\\(\\Theta\\)\uff0c\u5982\u679cf(n) g(n)\u90fd\u662f\u6700\u9ad8\u6307\u6570\u76f8\u540c\u7684\u591a\u9879\u5f0f\uff0c\u4e14\u7cfb\u6570\u76f8\u540c\uff0c\u5982\u679c\u8bf4\uff1a</p> <p>\\(\\lim_{n \\to \\infty} \\frac{f(n)}{g(n)} = c \\quad \\text{where} \\quad 0 &lt; c &lt; \\infty\\)\uff0c\u90a3\u4e48\u6211\u4efb\u53d6\\(c &gt; \\varepsilon &gt; 0\\)\uff0c\u90a3\u4e48\u603b\u4f1a\u5b58\u5728\u6b63\u6570k\uff0c\u4f7f\u5f97\uff1a</p> <p>\\(\\left| \\frac{f(n)}{g(n)} - c \\right| &lt; \\varepsilon \\ \\text{whenever} \\ n &gt; k\\)\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\uff1a  \u4e8e\u662f\u7c7b\u4f3c\u5730\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u6781\u9650\u5f62\u5f0f\u91cd\u65b0\u5b9a\u4e49\u4e0a\u9762\u4e24\u4e2a\u7b26\u53f7\uff0c\u987a\u4fbf\u518d\u5982\u4e0b\u56fe\u5b9a\u4e49\uff1a\\(o, \\omega, \\Omega\\)</p> <p></p> <p></p> <p>Tip\uff1a\u7b97\u6cd5\u6709\u6ca1\u6709\u53ef\u80fdbest case\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(\\Omega(n)\\)\u800cworst case\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n)\\)\u5462\uff1f\u5f53\u7136\u6709\u53ef\u80fd\uff01\u6bd4\u5982\u8bf4\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u603b\u662f\uff08\u6ca1\u9519\uff0c\u201c\u603b\u662f\u201d\u4e5f\u80fd\u62e5\u6709\u6700\u597d\u548c\u6700\u574f\u60c5\u51b5\uff09\\(\\Theta(n)\\)\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_3","title":"\u5f15\u8a00","text":"<p>\u8003\u8651\u4e00\u79cd\u95ee\u9898\uff1acompute the summation for a polynomial at a fixed value x.\u5bf9\u4e8e\u4e00\u4e2a\u591a\u9879\u5f0f\uff1a\\(f(x)=a_0+a_1x+a_2x^2+\u22ef+a_{n\u22121}x^{n\u22121}+a_nx^n\\)\u6765\u8bf4\uff0c\u4ee3\u5165x\u4e4b\u540e\u5982\u4f55\u8ba1\u7b97\uff1f\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6570\u7ec4\u53bb\u50a8\u5b58\u7cfb\u6570\uff0c\u7528\u5f15\u7d22\u4ee3\u8868\u5e42\uff0c\u5373\uff1aa[i] = \\(a_i\\)</p> <pre><code>double fpoly1 ( int n, double a[ ], double x )\n{ int i;\n  double p = a[0];\n  for (i = 1; i &lt;=n; i++)\n       p += (a[i] * pow( x, i) );\n  return p;\n}\n</code></pre> <p>\u6216\u8005\uff0c\u53e6\u4e00\u79cd\u8868\u8fbe\u65b9\u5f0f\u7684\u591a\u9879\u5f0f\uff1a\\(f(x)=a_0+x(a_1+x(a_2+\u22efx(a_n\u22121+x(a_n))\u22ef))\\):</p> <pre><code>double fpoly2 ( int n, double a[ ], double x )\n{ int i;\n  double p = a[n];\n  for (i = n; i &gt; 0; i-- )\n       p = a[i-1]  + x* p;\n  return p;\n}\n</code></pre> <p>\u4f46\u662f\uff0c\u5f53\\(f(x)=4+3x^{2024}\\)\u5462\uff1f\u96be\u9053\u9700\u8981\u5f00\u4e00\u4e2a2025\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u5417\uff1f\u5f88\u660e\u663e\u4e0d\u73b0\u5b9e\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u6570\u7ec4\u91cc\u9762\u5b58\u50a8\u4e00\u4e2astructure\uff1a\\((a_i, i)\\)\u3002\u8fd9\u6837\u5c31\u5f88\u5b8c\u7f8e\u7684\u8282\u7701\u4e86\u7a7a\u95f4\u3002\u4f46\u662f\u8fd9\u79cd\u8868\u793a\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u8ba1\u7b97\u591a\u9879\u5f0f\u7684\u76f8\u52a0\u7684\uff1f\u6211\u4eec\u6309\u6307\u6570\u9012\u51cf\u7684\u987a\u5e8f\u5b58\u50a8\u4e24\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u4e24\u4e2a\u6307\u9488\u5f00\u59cb\u9010\u4e2a\u6bd4\u8f83\uff1a\u6307\u6570\u5982\u679c\u4e0d\u4e00\u6837\uff0c\u8f83\u5927\u7684\u4f18\u5148\u8fdb\u5165\u6570\u7ec4\uff0c\u4e14\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\uff1b\u5982\u679c\u76f8\u540c\uff0c\u7cfb\u6570\u76f8\u52a0\uff0c\u50a8\u5b58\u8fdb\u65b0\u7684\u6570\u7ec4\uff0c\u4e24\u4e2a\u6307\u9488\u90fd\u6307\u5411\u4e0b\u4e00\u4e2a\u3002\u8fd9\u6837\u4e5f\u80fd\u5f88\u597d\u5730\u8868\u793a\u591a\u9879\u5f0f\u7684\u76f8\u52a0\u3002</p> <p>\u4ece\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u80fd\u770b\u51fa\uff1a</p> <ul> <li>Different data types can be used for the same type of problem.</li> <li>There exists a common problem: the organization and management of ordered linear data.</li> </ul> <p>\u56e0\u6b64\u5f15\u51fa\u4e86\u7b2c\u4e00\u4e2a\u5173\u952e\u7684\u6982\u5ff5\uff1aList ADT(Abstract Data Type)\u3002An Abstract List (or List ADT) is linearly ordered data (with same data type)\u3002</p> <ul> <li>The number of elements in the List denotes the length of the List.</li> <li>When there is no element, it is an empty List.</li> <li>The beginning of a List is called the List head; the end of a List is called the List tail.</li> <li>The same value may occur more than once.</li> </ul> <p>\u5bf9\u4e8e\u8fd9\u79cd\u6570\u636e\u7ed3\u6784,\u4e00\u822c\u8981\u80fd\u591f\u652f\u6301\u4e00\u4e9b\u57fa\u672c\u7684\u64cd\u4f5c: Access; Erasing; Insertion; Replacement. \u800c\u5bf9\u4e8e\u4e24\u4e2aADT\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u5e0c\u671b\u53bb\u64cd\u4f5c\uff1aConcatenation; Determine if sublist. \u56e0\u6b64\u4e00\u822c\u7a0b\u5e8f\u4e2d\u6709\u5982\u4e0b\u7ed3\u6784\uff1a</p> <ul> <li>For L\u2208List, i denotes the indices, X\u2208ElementType, the basic operations includes but not limited to:</li> <li>ListEmpty(): initialize an empty list.</li> <li>ElementType FindKt\u210e(int K, List L): find the K_t\u210e element and return it.</li> <li>int Find(ElementType X, int I, List L): find the location for X.</li> <li>void Insert(ElementType X, int i, List L): insert a new element before the i_t\u210e element.</li> <li>void Delete(int i, List L): delete the i_t\u210e element.</li> <li>int Lengt\u210e(List L): return the length of a list.</li> </ul> <p>\u5177\u4f53\u6709\u54ea\u4e9b\u7ebf\u6027\u8868\u7684\u6570\u636e\u7ed3\u6784\u5462\uff1f\u89c1\u4e0b\u9762\u7684\u5185\u5bb9\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_4","title":"\u6570\u7ec4","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_5","title":"\u57fa\u672c\u4fe1\u606f","text":"<p>\u6570\u7ec4\u7684\u7279\u70b9: \u5185\u5b58\u662f\u8fde\u7eed\u7684(\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6570\u7ec4\u79f0\u4e3a\u7ebf\u6027\u8868). \u90a3\u4e48\u6570\u7ec4\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\u5462\uff1f</p> <p>\u4f18\u70b9: </p> <ul> <li>\u4e0b\u6807\u8bbf\u95ee(\u968f\u673a\u8bbf\u95ee)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1)</li> <li>\u672b\u5c3e\u4f4d\u7f6e\u589e\u52a0\u5220\u9664\u5143\u7d20\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(1)</li> <li>\u8bbf\u95ee\u5143\u7d20\u524d\u540e\u76f8\u90bb\u4f4d\u7f6e\u7684\u5143\u7d20\u975e\u5e38\u65b9\u4fbf </li> </ul> <p>\u7f3a\u70b9:</p> <ul> <li>\u975e\u672b\u5c3e\u4f4d\u7f6e\u589e\u52a0\u5220\u9664\u5143\u7d20\u9700\u8981\u8fdb\u884c\u5927\u91cf\u7684\u6570\u636e\u79fb\u52a8</li> <li>\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6: \u5982\u679c\u662f\u65e0\u5e8f\u6570\u7ec4, \u90a3\u4e48\u7ebf\u6027\u641c\u7d22O(n); \u5982\u679c\u662f\u6709\u5e8f\u6570\u7ec4, \u90a3\u4e48\u5c31\u662f\u4e8c\u5206\u641c\u7d22O(logn)</li> <li>\u6570\u7ec4\u6269\u5bb9\u6d88\u8017\u6bd4\u8f83\u5927(\u5982\u4f55\u6269\u5bb9? \u4e4b\u540e\u4f1a\u6709\u5177\u4f53\u7684\u7ec6\u8282\u5b9e\u73b0)</li> </ul> <p>\u6ce8\u610f! </p> <ol> <li>\u968f\u673a\u8bbf\u95ee \u2260 \u67e5\u627e or \u641c\u7d22</li> <li>\u7ebf\u6027\u641c\u7d22\u6307\u7684\u662f\u4e0b\u6807\u4ece0\u5f00\u59cb\u4e00\u76f4\u5230n-1\u6765\u4e00\u4e2a\u4e00\u4e2a\u8fdb\u884c\u968f\u673a\u8bbf\u95ee</li> <li>\"\u6570\u7ec4\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u5341\u5206\u4e0d\u65b9\u4fbf\"\u5176\u5b9e\u8981\u5206\u60c5\u51b5, \u662f\u672b\u5c3e\u4f4d\u7f6e\u52a0\u5165\u5143\u7d20\u8fd8\u662f\u4e2d\u95f4\u4f4d\u7f6e? </li> </ol> <pre><code>int arr[10];\n// c/c++\u4e2d, \u4e0d\u80fd\u7528\u53d8\u91cf\u6765\u521d\u59cb\u5316\u6570\u7ec4, \u5fc5\u987b\u8981\u7528\u5e38\u91cf\n// \u5982\u679c\u8bbf\u95eearr[10], \u90a3\u4e48\u5c31\u662f\u8d8a\u754c\u8bbf\u95ee\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#expand","title":"Expand","text":"<p>\u5728\u63d2\u5165\u5143\u7d20\u7684\u65f6\u5019\uff0c\u9700\u8981\u5224\u65ad\u6570\u7ec4\u5185\u5b58\u6ee1\u4e86\u6ca1\u6709\uff1b\u5982\u679c\u6ee1\u4e86\uff0c\u9700\u8981\u5f00\u8f9f\u65b0\u7684\u66f4\u5927\u7684\u5185\u5b58\uff0c\u5e76\u4e14\u628a\u539f\u6765\u7684\u6570\u636e\u62f7\u8d1d\u8fc7\u53bb\u3002\u90a3\u4e48\u662f\u4e58\u4ee52\u597d\uff0c\u8fd8\u662f\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570\u5462\uff1f\u6211\u4eec\u5148\u5b9a\u4e49amortized time\u5747\u644a\u65f6\u95f4\uff1aIf n operations requires \\(\\Theta(f(n))\\), we will say that an individual operation has an amortized run time of \\(\\Theta(f(n)/n)\\). \u90a3\u4e48\u5206\u6790double\u7684\u60c5\u51b5\uff1a\u5047\u8bbe\u5728\u4e00\u6b21\u6269\u5bb9\u4e2d\uff0cInserting n objects would require 1, 2, 4, 8, ..., all the way up to the largest \\(2^k &lt; n\\) or \\(k=\\lfloor lg(n) \\rfloor\\)  \u90a3\u4e48double\u7684\u5747\u644a\u65f6\u95f4\u5c31\u662f\\(\\Theta(1)\\), \u800c\u5982\u679c\u662f\u4e00\u6b21\u5185\u5b58\u52a0m\u5462\uff1f  \u90a3\u4e48\u5747\u644a\u65f6\u95f4\u5c31\u662f\\(\\Theta(n)\\)\u4e86\uff0c\u56e0\u6b64\u6700\u597d\u7684\u7b56\u7565\u662fdouble\u5185\u5b58\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_6","title":"\u589e\u5220\u6539\u67e5\u2014\u2014\u57fa\u672c\u63a5\u53e3","text":"<p>\u9996\u5148\u56de\u987e: \u5185\u5b58\u5206\u533a. </p> <ul> <li>\u6570\u636e\u6bb5(data): \u5b58\u653e\u5168\u5c40\u53d8\u91cf\u7684\u5730\u65b9, \u7cfb\u7edf\u5206\u914d\u7cfb\u7edf\u91ca\u653e, \u751f\u547d\u5468\u671f\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f</li> <li>\u5806(heap): \u81ea\u5df1\u5f00\u8f9f\u81ea\u5df1\u91ca\u653e(new delete)</li> <li>\u6808(stack): \u51fd\u6570\u8fdb\u6765, \u81ea\u52a8\u5206\u914d; \u51fd\u6570\u51fa\u53f3\u62ec\u53f7, \u7cfb\u7edf\u91ca\u653e</li> </ul> <p>\u6240\u4ee5\u5e0c\u671b\u81ea\u5df1\u63a7\u5236\u6269\u5bb9\u7b49, \u5fc5\u987b\u8981\u5c06\u5185\u5b58\u653e\u5728\u5806\u533a: </p> <pre><code>// array.cpp\n#include &lt;iostream&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nusing namespace std; // \u5efa\u8bae\u4e4b\u540e\u653e\u5f03\u8fd9\u4e00\u884c, \u547d\u540d\u7a7a\u95f4\u90fd\u5e26\u4e0astd\nclass Array\n{\npublic:\n    // \u5982\u679c\u6ca1\u6709\u4f20, \u9ed8\u8ba4capacity\u662f10\n    Array(int size = 10): mCur(0), mCap(size) // \u521d\u59cb\u5316\u5217\u8868\u7684\u987a\u5e8f\u4e00\u5b9a\u8981\u662f\u6210\u5458\u5b9a\u4e49\u7684\u987a\u5e8f\n    {\n        mpArr = new int[mCap]();\n    }\n    ~Array()\n    {\n        delete []mpArr; // \u4ec5\u4ec5\u662f\u5806\u4e0a\u9762\u7684\u6570\u636e\u91ca\u653e\u4e86\n        // \u6ca1\u5fc5\u8981\u5224\u65admpArr\u539f\u6765\u662f\u4e0d\u662f\u7a7a\u6307\u9488, \u56e0\u4e3a\u4e0d\u77e5\u9053\u662f\u91ce\u6307\u9488\u8fd8\u662f\u6307\u5411\u7684\u5185\u5b58\u88ab\u91ca\u653e\n        // \u5373\u4f7f\u539f\u672c\u5c31\u662f\u7a7a\u6307\u9488, \u90a3\u4e48delete\u5c31\u76f8\u5f53\u4e8e\u662f\u7a7a\u64cd\u4f5c\n        mpArr = nullptr; // \u9632\u6b62\u91ce\u6307\u9488\u7684\u51fa\u73b0\n    }\n\n    // \u672b\u5c3e\u589e\u52a0\u5143\u7d20\n    void push_back(int val){\n        // \u5982\u679c\u6570\u7ec4\u6ee1\u4e86, \u9700\u8981\u6269\u5bb9\n        if (mCur == mCap){\n            expand(2 * mCap);\n        }\n        mpArr[mCur] = val;\n        mCur++;\n    }\n    // \u672b\u5c3e\u5220\u9664\u5143\u7d20\n    void pop_back(){\n        if (mCur == 0){\n            return;\n        }\n        mCur--;\n    }\n    // \u6309\u4f4d\u7f6e\u589e\u52a0\u5143\u7d20\n    void insert(int pos, int val){\n        // \u597d\u4e60\u60ef: \u5224\u65ad\u4f20\u5165\u53c2\u6570\u7684\u6709\u6548\u6027\n        if (pos &lt; 0 || pos &gt; mCur){\n            return; // invalid position\n        }\n        // \u5982\u679c\u6570\u7ec4\u6ee1\u4e86, \u9700\u8981\u6269\u5bb9\n        if (mCur == mCap){\n            expand(2 * mCap);\n        }\n        for (int i = mCur - 1; i &gt;= pos; i--){\n            mpArr[i+1] = mpArr[i];\n        }\n        mpArr[pos] = val;\n    }\n    // \u6309\u4f4d\u7f6e\u5220\u9664\n    void erase(int pos){\n        if (pos &lt; 0 || pos &gt;= mCur){\n            return; // invalid operation\n        }\n        for (int i = pos + 1; i &lt; mCur; i++){\n            mpArr[i-1] = mpArr[i];\n        }\n        mCur--; // \u4ee3\u8868\u6570\u7ec4\u5c11\u4e86\u4e00\u4e2a\u5143\u7d20\n    }\n    // \u5143\u7d20\u67e5\u8be2\n    int find(int val){\n        for (int i = 0; i &lt; mCur; i++){\n            if (mpArr[i] == val){\n                return i;\n            }\n        }\n        return -1;\n    }\n    void show() const{\n        for (int i = 0; i &lt; mCur; i++){\n            cout &lt;&lt; mpArr[i] &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    }\nprivate: // \u4e00\u5b9a\u8981\u5148\u7406\u6e05\u54ea\u4e9b\u662f\u79c1\u6709\u6210\u5458\u90a3\u4e9b\u4e8b\u516c\u5f00\u6210\u5458\n    int *mpArr; // \u6307\u5411\u53ef\u6269\u5bb9\u7684\u6570\u7ec4\u5185\u5b58\n    int mCur; // \u6570\u7ec4\u6709\u6548\u5143\u7d20\u7684\u4e2a\u6570, \u8fd9\u91cc\u6709\u5999\u7528\n    int mCap; // \u6570\u7ec4\u7684\u5bb9\u91cf\n    // \u5185\u90e8\u6570\u7ec4\u6269\u5bb9\u63a5\u53e3\n    void expand(int size){\n        // \u5f00\u8f9f\u66f4\u957f\u5185\u5b58, \u590d\u5236\u6570\u636e, \u7136\u540e\u91ca\u653e\u539f\u6765\u7684\u6570\u636e\n        int *p = new int[size];\n        memcpy(p, mpArr, sizeof(int) * mCap);\n        delete[]mpArr; \n        mpArr = p;\n        mCap = size;\n    }\n};\n\nint main(){\n    Array arr;\n    srand(time(0));\n    for (int i = 0; i &lt; 10; i++){\n        arr.push_back(rand() % 100);\n    }\n    arr.show();\n    arr.pop_back();\n    arr.show();\n    arr.insert(0, 100);\n    arr.show();\n    arr.insert(10, 200);\n    arr.show();\n    int pos = arr.find(100);\n    if (pos != -1){\n        arr.erase(pos);\n        arr.show();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_7","title":"\u5e38\u89c1\u9898\u76ee","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_8","title":"\u5143\u7d20\u9006\u5e8f\u95ee\u9898","text":"<p>\u95ee\u9898\uff1a\u9006\u5e8f\u5b57\u7b26\u4e32\u2014\u2014\u5f15\u5165\u5341\u5206\u91cd\u8981\u7684\u53cc\u6307\u9488\u601d\u60f3! </p> <pre><code>// reverse.cpp\n#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nvoid Reverse(char arr[], int size){ // \u4f20\u5165size\u662f\u56e0\u4e3a\u6570\u7ec4\u4f20\u5165\u4e4b\u540e\u4f1a\u9000\u5316\u4e3a\u6307\u9488, \u6240\u4ee5\u9700\u8981\u77e5\u9053\u4e2a\u6570\n    char *p = arr;\n    char *q = arr + size - 1;\n    while (p &lt; q){\n        char ch = *p;\n        *p = *q;\n        *q = ch;\n        p++;\n        q--;\n    }\n}\nint main(){\n    char arr[] = \"hello world\";\n    cout &lt;&lt; arr &lt;&lt; endl;\n    Reverse(arr, strlen(arr)); // strlen()\u9700\u8981\u7528&lt;string.h&gt;\n    cout &lt;&lt; arr &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u53cc\u6307\u9488\u662f\u4e00\u7c7b\u975e\u5e38\u91cd\u8981\u7684\u95ee\u9898, \u53cc\u6307\u9488\u601d\u60f3\u8981\u719f\u7ec3!</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_9","title":"\u53cc\u6307\u9488\u5b9e\u6218\u2014\u2014\u5947\u5076\u6570\u8c03\u6574\u95ee\u9898","text":"<p>\u95ee\u9898\u63cf\u8ff0: \u6574\u578b\u6570\u7ec4, \u628a\u5076\u6570\u8c03\u6574\u5230\u6570\u7ec4\u7684\u5de6\u8fb9, \u628a\u5947\u6570\u8c03\u6574\u5230\u6570\u7ec4\u7684\u53f3\u8fb9</p> <p>\u601d\u8def: \u5c1d\u8bd5\u5229\u7528\u53cc\u6307\u9488! \u8ba9p\u6307\u9488\u4ece\u5de6\u5f00\u59cb\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u5947\u6570, \u7136\u540eq\u6307\u9488\u4ece\u53f3\u8fb9\u5f00\u59cb\u5bfb\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u6570, \u7136\u540ep q\u4e24\u4e2a\u6307\u9488\u7684\u6570\u5b57\u8fdb\u884c\u4ea4\u6362, \u4ea4\u6362\u5b8c\u6210\u4e4b\u540e, <code>p++ q--</code>; \u540c\u65f6, more specifically, \u5982\u679cp\u627e\u5230\u4e86\u7b2c\u4e00\u4e2a\u5947\u6570, \u90a3\u4e48\u5c31\u505c\u6b62, \u4e0d\u518d<code>p++</code>, \u5426\u5219\u6307\u9488\u4f1a\u4e00\u6b65\u4e00\u6b65\u5411\u53f3\u8fb9\u79fb\u52a8; q\u540c\u7406. \u76f4\u5230p q\u4e24\u4e2a\u6307\u9488\u90fd\u52a8\u4e0d\u4e86\u7684\u65f6\u5019, \u4ea4\u6362, \u7136\u540e\u90fd\u8d70\u52a8, \u5224\u65ad\u6761\u4ef6\u662f<code>while(p &lt; q)</code></p> <pre><code>// odd_even.cpp\n#include &lt;iostream&gt;\n#include &lt;time.h&gt;\nusing namespace std;\n\nvoid AdjustArray(int arr[], int size){\n    int * p = arr;\n    int * q = arr + size - 1;\n    while (p &lt; q){\n        if (*p % 2 == 0){ // p\u6307\u9488\u5bf9\u5e94\u7684\u662f\u5076\u6570, \u90a3\u4e48\u5c31\u53f3\u8fb9\u79fb\u52a8\n            p++; // \u5426\u5219, \u90a3\u5c31\u4e0d\u4f1a\u79fb\u52a8\n        }\n        if (*q % 2 == 1){ // q\u6307\u9488\u5bf9\u5e94\u7684\u662f\u5947\u6570, \u90a3\u4e48\u5c31\u5de6\u79fb\u52a8\n            q--; // \u5426\u5219, \u90a3\u5c31\u4e0d\u4f1a\u79fb\u52a8\n        }\n        // \u5148\u5904\u7406\u5b8c\u79fb\u52a8\u7684\u7a0b\u5e8f, \u7136\u540e\u5224\u65ad\u65f6\u5019\u4ea4\u6362p q\u6307\u9488\u7684\u6570\u5b57\n        if ((*p % 2 == 1) &amp;&amp; (*q % 2 == 0)){ // \u5982\u679cp\u5bf9\u5e94\u5947\u6570\u800cq\u5bf9\u5e94\u5076\u6570, \u4ea4\u6362!\n            int temp = *p;\n            *p = *q;\n            *q = temp;\n        }\n    }\n}\nint main(){\n    int arr[10] = {0};\n    srand(time(0));\n    for (int i = 0; i &lt; 10; i++){\n        arr[i] = rand()%100;\n    }\n    // trick : \u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af\n    for (int v : arr){\n        cout &lt;&lt; v &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    AdjustArray(arr, 10);\n    for (int v : arr){\n        cout &lt;&lt; v &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre> <p>\u6211\u89c9\u5f97, \u53cc\u6307\u9488\u7684\u7075\u9b42\u5c31\u5728\u4e8e: p\u6307\u9488\u5de6\u8fb9\u4e00\u5b9a\u662f\u5904\u7406\u5b8c\u6210\u7684, \u800cq\u6307\u9488\u53f3\u8fb9\u4e00\u5b9a\u662f\u5904\u7406\u5b8c\u6210\u7684!  \u540c\u65f6, \u5728\u5224\u65adp(q)\u6307\u9488\u7684\u6570\u5b57\u662f\u4e0d\u662f\u5076\u6570(\u5947\u6570)\u7684\u65f6\u5019, \u6709\u4e0b\u9762\u8fd9\u4e2a\u4f4d\u8fd0\u7b97\u7684trick, \u901f\u5ea6\u4e0a\u4f1a\u66f4\u5feb: </p> <pre><code>if (*p &amp; 0x1 == 0){}; // \u5982\u679cp\u6307\u9488\u5bf9\u5e94\u7684\u662f\u5076\u6570\nif (*q &amp; 0x1 == 1){}; // \u5982\u679cq\u6307\u9488\u5bf9\u5e94\u7684\u662f\u5947\u6570\n</code></pre> <p>\u5173\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u7684\u89e3\u91ca, <code>ChatGPT</code>\u5982\u4e0b\u89e3\u91ca: </p> <p>\u8fd9\u662f\u901a\u8fc7\u4f4d\u8fd0\u7b97\u6765\u5224\u65ad\u4e00\u4e2a\u6307\u9488\u5bf9\u5e94\u7684\u503c\u662f\u5426\u4e3a\u5076\u6570\u3002\u4ee3\u7801\u4e2d\u7684\u8868\u8fbe\u5f0f <code>(*p &amp; 0x1 == 0)</code> \u4f7f\u7528\u4e86\u6309\u4f4d\u4e0e\u64cd\u4f5c\u7b26 (<code>&amp;</code>) \u6765\u68c0\u67e5\u6570\u503c\u7684\u6700\u4f4e\u6709\u6548\u4f4d\uff08least significant bit, LSB). \u5177\u4f53\u5730\u8bf4\uff1a</p> <ul> <li> <p><code>*p</code> \u8868\u793a\u901a\u8fc7\u6307\u9488 <code>p</code> \u8bbf\u95ee\u7684\u503c\u3002</p> </li> <li> <p><code>0x1</code> \u662f\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\uff0c\u7b49\u540c\u4e8e\u4e8c\u8fdb\u5236\u7684 <code>0001</code>\uff0c\u53ea\u5173\u6ce8\u6570\u503c\u7684\u6700\u4f4e\u6709\u6548\u4f4d\u3002</p> </li> <li> <p><code>*p &amp; 0x1</code>\u662f\u6309\u4f4d\u4e0e\u64cd\u4f5c\uff0c\u7528\u6765\u68c0\u6d4b <code>*p</code></p> </li> </ul> <p>\u7684\u6700\u4f4e\u6709\u6548\u4f4d\u662f\u5426\u4e3a 1\u3002</p> <ul> <li>\u5982\u679c <code>*p &amp; 0x1</code> \u7ed3\u679c\u662f 0\uff0c\u8fd9\u610f\u5473\u7740\u6700\u4f4e\u6709\u6548\u4f4d\u662f 0\uff0c\u90a3\u4e48 <code>*p</code> \u5c31\u662f\u4e00\u4e2a\u5076\u6570\u3002</li> <li>\u5982\u679c <code>*p &amp; 0x1</code> \u7ed3\u679c\u662f 1\uff0c\u8fd9\u610f\u5473\u7740\u6700\u4f4e\u6709\u6548\u4f4d\u662f 1\uff0c\u90a3\u4e48 <code>*p</code> \u5c31\u662f\u4e00\u4e2a\u5947\u6570\u3002</li> </ul> <p>\u5f53\u7136\u4e0a\u9762\u8fd9\u79cd\u89e3\u6cd5\u5f88straight forward, \u80fd\u4e0d\u80fd\u4f18\u5316\u5462? \u5728\u6bcf\u4e00\u6b21\u7684\u5faa\u73af\u4e2d, \u5047\u5982\u8bf4p\u6307\u9488\u4e0d\u52a8\u4e86, \u800cq\u4e00\u76f4\u5728\u52a8, \u90a3\u4e48\u76f8\u5f53\u4e8eq\u7684\u5faa\u73af\u79fb\u52a8\u8fc7\u7a0b\u4e2d, p\u767d\u767d\u591a\u5224\u65ad\u4e86\u5f88\u591a\u6b21. \u90a3\u4e48\u4e00\u79cd\u5f88\u597d\u7684\u903b\u8f91\u662f: \u6211\u4e00\u6b21\u8ba9p q\u6307\u9488\u4e00\u6b21\u6027\u52a8\u5230\u4f4d: </p> <pre><code>while (p &lt; q){\n    while (p &lt; q){\n        if ((*p &amp; 0x1) == 0){\n            break;\n        }\n        p++\n    }\n    while (p &lt; q){\n        if ((*q &amp; 0x1) == 1){\n            break;\n        }\n        q--;\n    }\n    // \u6ce8\u610f: \u80fd\u8df3\u51fa\u4e0a\u9762\u4e24\u4e2a\u5faa\u73af\u7684\u60c5\u51b5\u9664\u4e86p\u5bf9\u5e94\u5947\u6570, q\u5bf9\u5e94\u5076\u6570, \u8fd8\u80fd\u662f\u4ec0\u4e48corner case? \n    // \u90a3\u5c31\u662farr\u4e2d\u5168\u662f\u5076\u6570(for example), \u90a3\u4e48p == q, \u610f\u5473\u7740: \u6ca1\u6709\u5fc5\u8981\u4ea4\u6362\n    if (p &lt; q){ // \u5982\u679c\u662fp == q, \u90a3\u4e48\u5c31\u6ca1\u6709\u5fc5\u8981\u4ea4\u6362\u4e86\n        int tmp = *p;\n        *p = *q;\n        *q = tmp;\n        p++;\n        q--;\n    } \n}\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_10","title":"\u53cc\u6307\u9488\u5b9e\u6218\u2014\u2014\u79fb\u9664\u5143\u7d20\u95ee\u9898","text":"<p>\u9898\u76ee\u63cf\u8ff0: </p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u503c <code>val</code>\uff0c\u4f60\u9700\u8981 \u539f\u5730 \u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e <code>val</code> \u7684\u5143\u7d20\u3002\u5143\u7d20\u7684\u987a\u5e8f\u53ef\u80fd\u53d1\u751f\u6539\u53d8\u3002\u7136\u540e\u8fd4\u56de <code>nums</code> \u4e2d\u4e0e <code>val</code> \u4e0d\u540c\u7684\u5143\u7d20\u7684\u6570\u91cf\u3002</p> <p>\u5047\u8bbe <code>nums</code> \u4e2d\u4e0d\u7b49\u4e8e <code>val</code> \u7684\u5143\u7d20\u6570\u91cf\u4e3a <code>k</code>\uff0c\u8981\u901a\u8fc7\u6b64\u9898\uff0c\u60a8\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u66f4\u6539 <code>nums</code> \u6570\u7ec4\uff0c\u4f7f <code>nums</code> \u7684\u524d <code>k</code> \u4e2a\u5143\u7d20\u5305\u542b\u4e0d\u7b49\u4e8e <code>val</code> \u7684\u5143\u7d20\u3002<code>nums</code> \u7684\u5176\u4f59\u5143\u7d20\u548c <code>nums</code> \u7684\u5927\u5c0f\u5e76\u4e0d\u91cd\u8981\u3002</li> <li>\u8fd4\u56de <code>k</code>\u3002</li> </ul> <p>\u7528\u6237\u8bc4\u6d4b\uff1a</p> <p>\u8bc4\u6d4b\u673a\u5c06\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u6d4b\u8bd5\u60a8\u7684\u89e3\u51b3\u65b9\u6848\uff1a</p> <pre><code>int[] nums = [...]; // \u8f93\u5165\u6570\u7ec4\nint val = ...; // \u8981\u79fb\u9664\u7684\u503c\nint[] expectedNums = [...]; // \u957f\u5ea6\u6b63\u786e\u7684\u9884\u671f\u7b54\u6848\u3002\n                            // \u5b83\u4ee5\u4e0d\u7b49\u4e8e val \u7684\u503c\u6392\u5e8f\u3002\n\nint k = removeElement(nums, val); // \u8c03\u7528\u4f60\u7684\u5b9e\u73b0\n\nassert k == expectedNums.length;\nsort(nums, 0, k); // \u6392\u5e8f nums \u7684\u524d k \u4e2a\u5143\u7d20\nfor (int i = 0; i &lt; actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</code></pre> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,2,2,3], val = 3\n\u8f93\u51fa\uff1a2, nums = [2,2,_,_]\n\u89e3\u91ca\uff1a\u4f60\u7684\u51fd\u6570\u51fd\u6570\u5e94\u8be5\u8fd4\u56de k = 2, \u5e76\u4e14 nums \u4e2d\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u5747\u4e3a 2\u3002\n\u4f60\u5728\u8fd4\u56de\u7684 k \u4e2a\u5143\u7d20\u4e4b\u5916\u7559\u4e0b\u4e86\u4ec0\u4e48\u5e76\u4e0d\u91cd\u8981\uff08\u56e0\u6b64\u5b83\u4eec\u5e76\u4e0d\u8ba1\u5165\u8bc4\u6d4b\uff09\u3002\n</code></pre> <p>\u90a3\u4e48\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d, \u53cc\u6307\u9488\u53c8\u88ab\u8d4b\u4e88\u4e86\u65b0\u7684\u542b\u4e49: \u56e0\u4e3a\u53cc\u6307\u9488\u53ef\u4ee5\u4e0d\u518d\u662f\u4e00\u5934\u4e00\u5c3e\u7684\u8bbe\u8ba1\u610f\u4e49\u4e86. \u6211\u5e0c\u671b\u7528<code>i</code>\u4ece\u5934\u5f00\u59cb\u904d\u5386, \u7528<code>j</code>\u8bb0\u5f55\u653e\u4e0b\u6570\u5b57\u7684\u5f15\u7d22(\u4e0d\u7b49\u4e8eval\u7684\u4e0b\u4e00\u4e2a\u5f15\u7d22), \u8fd9\u662f\u4e24\u5957\u7684\"\u8bb0\u53f7\": \u5982\u679c\u8fd9\u4e2a<code>nums[i]</code>\u662f<code>val</code>, \u90a3\u4e48<code>j</code>\u4e0d\u52a8, \u7b49\u5f85\u4e4b\u540e\u4e0d\u662f<code>val</code>\u7684<code>nums[i]</code>, \u628a\u8fd9\u4e2a\u503c\u653e\u8fc7\u6765; \u5982\u679c<code>nums[i]</code>\u4e0d\u662f<code>val</code>, \u90a3\u4e48<code>j++</code>, \u4ee3\u8868\u521a\u521a\u90a3\u4e2a\u5730\u65b9\u5c31\u653e\u539f\u6765\u90a3\u4e2a\u5730\u65b9\u7684\u5143\u7d20. \u4e3a\u4ec0\u4e48\u80fd\u8fd9\u6837\u8bbe\u8ba1? \u5c31\u662f\u56e0\u4e3a\u9898\u76ee\u53ea\u8981\u6c42\u4fdd\u8bc1\u524dk\u4e2a\u5143\u7d20\u4e0d\u662fval, \u540e\u9762\u7684\u6839\u672c\u4e0d\u7528\u7ba1, \u6240\u4ee5\u8bf4, \u6211\u53ea\u9700\u8981\u7528<code>j</code>\u8fd9\u4e2a\u8bbe\u8ba1\u6765\u66f4\u65b0\u6570\u7ec4\u91cc\u9762\u7684\u5143\u7d20, \u8ba9\u540e\u9762\u7684\u975e<code>val</code>\u5143\u7d20\u653e\u5230\u524d\u9762\u6765: </p> <pre><code>// [27] \u79fb\u9664\u5143\u7d20\n// @lc code=start\nclass Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int j = 0; // \u6307\u5411\u4e0d\u7b49\u4e8eval\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n        for (int i = 0; i &lt; nums.size(); i++){\n            if (nums[i] != val){\n                nums[j] = nums[i];\n                j++;\n            }\n        }\n        return j;\n    }\n};\n// @lc code=end\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_11","title":"\u94fe\u8868","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_12","title":"\u57fa\u672c\u77e5\u8bc6","text":"<p>\u7279\u70b9\uff1a \u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u5728\u5806\u5185\u5b58\u4e0a\u72ec\u7acbnew\u51fa\u6765\u7684, \u8282\u70b9\u5185\u5b58\u4e0d\u8fde\u7eed.</p> <p>\u4f18\u70b9: </p> <ul> <li>\u5185\u5b58\u5229\u7528\u7387\u9ad8, \u4e0d\u9700\u8981\u5927\u5757\u8fde\u7eed\u5185\u5b58</li> <li>\u63d2\u5165\u548c\u5220\u9664\u8282\u70b9\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u8282\u70b9, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(1)</code></li> <li>\u4e0d\u9700\u8981\u4e13\u95e8\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c</li> </ul> <p>\u7f3a\u70b9: </p> <ul> <li>\u5185\u5b58\u5360\u7528\u91cf\u5927, \u56e0\u4e3a\u6bcf\u4e00\u4e2a\u8282\u70b9\u591a\u51fa\u5b58\u653e\u5730\u5740\u7684\u7a7a\u95f4</li> <li>\u8282\u70b9\u5185\u5b58\u4e0d\u8fde\u7eed, \u65e0\u6cd5\u8fdb\u884c\u5185\u5b58\u968f\u673a\u8bbf\u95ee </li> <li>\u94fe\u8868\u641c\u7d22\u6548\u7387\u4e0d\u9ad8, \u53ea\u80fd\u4ece\u5934\u8282\u70b9\u5f00\u59cb\u9010\u8282\u70b9\u904d\u5386</li> </ul> <p>\u90a3\u4e48\u5c31\u6709\u7591\u95ee\u4e86: \u6bcf\u4e00\u4e2a\u8282\u70b9\u4e4b\u95f4\u90fd\u662f\u72ec\u7acb\u7684, \u90a3\u4e48\u5728\u4e00\u4e2a\u8282\u70b9\u5982\u4f55\u77e5\u9053\u4e0a\u4e0b\u8282\u70b9\u5728\u54ea\u91cc? \u4e4b\u524d\u6570\u7ec4\u91cc\u9762, \u7528<code>p++ p--</code>\u5c31\u80fd\u79fb\u52a8\u6307\u9488, \u627e\u5230\u4e0a\u9762\u4e0b\u9762\u7684\u6570\u636e, \u56e0\u4e3a\u6570\u7ec4\u50a8\u5b58\u662f\u8fde\u7eed\u7684. \u6240\u4ee5\u8bf4, \u94fe\u8868\u7684\u8282\u70b9\u4e00\u5b9a\u4e0d\u662f\u7b80\u5355\u50a8\u5b58\u6570\u636e\u7684, \u8fd8\u8981\u5b58\u653e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740. </p> <p>\u56e0\u6b64, \u4e00\u4e2anode\u91cc\u9762, \u5206\u4e3a\u6570\u636e\u57dfdata \u548c \u5730\u5740\u57dfnext, \u5176\u4e2d\u5730\u5740\u57df\u50a8\u5b58\u7684\u662f\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740. \u901a\u8fc7\u8fd9\u6837\u7684\u8bbe\u8ba1\u4ee5\u5b9e\u73b0: 1. \u94fe\u8868\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u662f\u72ec\u7acb\u5206\u914d\u51fa\u6765\u7684  2. \u4ece\u5f53\u524d\u8282\u70b9\u80fd\u591f\u627e\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9. \u503c\u5f97\u6ce8\u610f\u7684\u662f, \u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\u57df\u5b58\u653e\u7684\u662f<code>nullptr</code>.</p> <p>\u9644\uff1a\u5728\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u4e2d\uff0c\u4ee3\u7801\u5b9a\u4e49\u7684\u4e0d\u50a8\u5b58\u6570\u5b57\u3001\u7528\u6765\u65b9\u4fbf\u904d\u5386\u7684\u8282\u70b9\u79f0\u4e3a\u4e86\u5934\u7ed3\u70b9head_\u3002\u4f46\u662f\u4e0d\u662f\u6240\u6709\u7684notational convention\u90fd\u662f\u4f7f\u7528\u201c\u5934\u7ed3\u70b9\u201d\u79f0\u547c\u5b83\uff01\u6709\u7684\u65f6\u5019\uff0chead\u5c31\u662f\u4ee3\u8868\u7b2c\u4e00\u4e2a\u6709\u5730\u5740\u57df\u548c\u6570\u636e\u57df\u7684\u6709\u6548\u8282\u70b9\uff0c\u800c\u6709\u7684\u65f6\u5019\u90a3\u4e2a\u6240\u8c13\u7684\u201c\u5934\u7ed3\u70b9\u201d\u6709\u53e6\u5916\u7684\u540d\u79f0\uff0c\u4f8b\u5982dummy \u54d1\u7ed3\u70b9\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_13","title":"\u4ee3\u7801\u5b9e\u73b0\u2014\u2014\u5355\u94fe\u8868","text":"<p>\u5355\u94fe\u8868, \u987e\u540d\u601d\u4e49, \u6bcf\u4e00\u4e2a\u8282\u70b9\u53ea\u80fd\u627e\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9, \u4f46\u662f\u627e\u4e0d\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9. \u5728\u5177\u4f53\u5b9e\u73b0\u4e2d, \u6211\u4eec\u8bbe\u8ba1\u5934\u8282\u70b9, \u5176\u4e2d\u5934\u8282\u70b9\u7684\u5730\u5740\u57df\u4e3a\u7a7a\u6307\u9488, \u4e3a\u4e86\u9632\u6b62\u94fe\u8868\u91cc\u9762\u6ca1\u6709\u6709\u6548\u8282\u70b9\u800c\u4e0d\u597d\u64cd\u4f5c\u7684\u60c5\u51b5. \u7528head\u6307\u9488\u6307\u5411\u5934\u8282\u70b9, \u521d\u59cb\u5316\u7684\u65f6\u5019, \u5934\u8282\u70b9\u7684\u5730\u5740\u57df\u4e3a\u7a7a, \u7136\u540e\u5728\u52a0\u5165\u6709\u6548\u8282\u70b9\u7684\u65f6\u5019, new\u4e00\u5757\u65b0\u5185\u5b58, \u7136\u540e\u628a\u5730\u5740\u5199\u8fdb\u5934\u8282\u70b9\u7684\u5730\u5740\u57df\u4e2d. \u5f53\u7136\u503c\u5f97\u6ce8\u610f\u7684\u662f, \u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u7684\u52a0\u5165, \u6211\u4eec\u90fd\u8bbe\u8ba1\u6210: \u521d\u59cb\u5316\u7684\u65f6\u5019\u5730\u5740\u5b58\u653e\u7684\u662f\u7a7a, \u7136\u540e\u4e0b\u4e00\u4e2a\u8282\u70b9\u52a0\u5165\u7684\u65f6\u5019, \u628a\u5b83\u7684\u5730\u5740\u653e\u5728\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\u57df\u4e2d.</p> <p>\u9700\u8981\u5b9e\u73b0\u7684\u529f\u80fd: \u5c3e\u90e8\u63d2\u5165, \u5934\u90e8\u63d2\u5165, \u8282\u70b9\u5220\u9664, \u5220\u9664\u591a\u4e2a\u8282\u70b9, \u641c\u7d22, \u6253\u5370, \u6784\u9020\u6790\u6784</p> <pre><code>// clink.cpp\n#include &lt;iostream&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nusing namespace std;\n\nstruct Node{\n    Node(int data = 0): data_(data), next_(nullptr){}\n    int data_;\n    Node* next_;\n};\n/*\n\u5982\u679c\u5e0c\u671bNode\u5206\u88c5\u6027\u66f4\u5f3a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684class\u5b9a\u4e49\uff1a\nclass Node(){\nprivate:\n    int element;\n    Node *next_node;\npublic:\n    Node(int data = 0):\n        element(data),\n        next_node(nullptr){}\n    int retrieve() const{\n        return element;\n    }\n    Node *next() const{\n        return next_node;\n    }\n    friend class Clink;\n    \u8fd9\u91cc\u53cb\u5143\u662f\u4e3a\u4e86\u65b9\u4fbf\u5728Clink\u4e2d\u76f4\u63a5\u4fee\u6539\u8bbf\u95ee\u8282\u70b9\u7684\u6570\u636e\u57df\u548c\u6307\u9488\u57df\n    \u56e0\u4e3a\u539f\u5148\u662f\u7ed3\u6784\u4f53\uff0c\u9ed8\u8ba4\u662fpublic\uff1b\u4f46\u662f\u73b0\u5728\u662fprivate\uff0c\u800c\u4e14\u63d0\u4f9b\u7684\u63a5\u53e3\u662fconst\n    \u5982\u679c\u8003\u8651\u8bbe\u7f6e\u4e00\u4e2a\u51fd\u6570\u53bb\u4fee\u6539\u5143\u7d20\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5143\u7d20\u5fc5\u987b\u662fpublic\uff0c\u90a3\u4e48\u5168\u5c40\u90fd\u53ef\u4ee5\u8c03\u7528\u4e86\n};\n*/\nclass Clink{\npublic:\n    Clink(){\n        // \u521d\u59cb\u5316\u7684\u65f6\u5019, \u6307\u5411\u5934\u8282\u70b9; new Node()\u5728\u5f00\u8f9f\u7684\u65f6\u5019, \u540c\u65f6\u4e5f\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\n        head_ = new Node();\n    }\n    ~Clink(){ // \u4e00\u5b9a\u4e0d\u662f\u7b80\u7b80\u5355\u5355\u7684\u91ca\u653e\u5934\u6307\u9488\u5c31\u5b8c\u4e86! \u7406\u89e3\u4e3a\u4ec0\u4e48\u9700\u8981p head_\u4e24\u4e2a\u6307\u9488\u5b8c\u6210\u64cd\u4f5c!\n        Node *p = head_;\n        while (p != nullptr){\n            head_ = head_-&gt;next_;\n            delete p;\n            p = head_;\n        }\n        head_ = nullptr;\n    }\n\n    void InsertTail(int val){ // \u94fe\u8868\u5c3e\u63d2\u6cd5\n        // \u5148\u627e\u5230\u5f53\u524d\u94fe\u8868\u7684\u672b\u5c3e\u8282\u70b9, \u7136\u540e\u751f\u6210\u65b0\u8282\u70b9; \u5982\u4f55\u627e\u5230\u5c3e\u8282\u70b9\u5462? \u5224\u65ad\u5730\u5740\u57df\u662f\u4e0d\u662f\u7a7a\u6307\u9488!\n        Node *p = head_;\n        while (p-&gt;next_ != nullptr){\n            p = p-&gt;next_;\n        }\n        Node *node = new Node(val);\n        p-&gt;next_ = node;        \n    }\n\n    void InsertHead(int val){ // \u94fe\u8868\u5934\u63d2\u6cd5; \u6ce8\u610f\u4fee\u6539\u7684\u987a\u5e8f!!\n        Node *node = new Node(val);\n        node-&gt;next_ = head_-&gt;next_;\n        head_-&gt;next_ = node;\n    }\n\n    void Remove(int val){ // \u5220\u9664\u8282\u70b9; \u7406\u89e3\u4e3a\u4ec0\u4e48p q\u8981\u4e24\u4e2a\u7ed3\u6784\u4f53\u6307\u9488\u6765\u64cd\u4f5c!\n        Node *p = head_-&gt;next_;\n        Node *q = head_;\n        while (p != nullptr){\n            if (p-&gt;data_ == val){\n                q-&gt;next_ = p-&gt;next_;\n                delete p; // \u91ca\u653ep\u5bf9\u5e94\u7684node\n                return;\n            }\n            else{\n                q = p;\n                p = p-&gt;next_;\n            }\n        }\n    }\n\n    bool Find(int val){\n        Node *p = head_-&gt;next_;\n        while (p != nullptr){\n            if (p-&gt;data_ == val){\n                return true;\n            }\n            else{\n                p = p-&gt;next_;\n            }\n        }\n        return false;\n    }\n\n    void RemoveAll(int val){\n        Node *p = head_-&gt;next_;\n        Node *q = head_;\n        while (p != nullptr){\n            if (p-&gt;data_ == val){\n                q-&gt;next_ = p-&gt;next_;\n                delete p;\n                p = q-&gt;next_;\n            }\n            else{\n                q = p;\n                p = p-&gt;next_;\n            }\n        }\n    }\n\n    void Show(){\n        // \u6ce8\u610f\u8fd9\u91cc\u6307\u9488\u7684\u8bbe\u8ba1! \u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u5c3e\u8282\u70b9\u7684\u6570\u636e\u5fd8\u8bb0\u88ab\u6253\u5370! \n        Node *p = head_-&gt;next_;\n        while (p != nullptr){\n            cout &lt;&lt; p-&gt;data_ &lt;&lt; \" \";\n            p = p-&gt;next_;\n        }\n        cout &lt;&lt; endl;\n    }\nprivate:\n    Node *head_;\n    // \u8c03\u7528\u51fd\u6570\u5185\u7684\u51fd\u6570\u65f6\u5408\u4e00\u8bbf\u95eeprivate\u6210\u5458\uff0c\u4f46\u662f\u5982\u679c\u5916\u90e8\u5e0c\u671b\u83b7\u53d6\u5230\u7684\u8bdd\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a\u63a5\u53e3\n};\n\nint main(){\n    Clink link;\n    srand(time(0));\n    for (int i = 0; i &lt; 10; i++){\n        int val = rand()%100;\n        link.InsertTail(val);\n        cout &lt;&lt; val &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    link.InsertTail(200);\n    link.Show();\n    link.Remove(200);\n    link.Show();\n    link.InsertHead(233);\n    link.InsertHead(233);\n    link.InsertTail(233);\n    link.Show();\n    link.RemoveAll(233);\n    link.Show();\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_14","title":"\u5e38\u89c1\u9898\u76ee","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_15","title":"\u5355\u94fe\u8868\u9006\u5e8f","text":"<p>Eg: head -&gt; 25 -&gt; 67 -&gt; 32 -&gt; 18   \u7ecf\u8fc7\u9006\u5e8f\u4e4b\u540e: head -&gt; 18 -&gt; 32 -&gt; 67 -&gt; 25</p> <p>\u601d\u8def: \u5934\u8282\u70b9\u7684\u5730\u5740\u57df\u53d8\u6210\u7a7a, \u7136\u540e\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u5934\u63d2. \u5934\u63d2\u7684\u65f6\u5019, \u9700\u8981\u7528\u4e24\u4e2a\u6307\u9488, \u4e00\u4e2a\u7528\u6765\u8bb0\u5f55\u987a\u5e8f\u4e0b\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740(q), \u4e00\u4e2a\u7528\u6765\u5b9e\u73b0\u5934\u63d2(p). </p> <pre><code>struct Node{\n    Node(int data = 0): data_(data), next_(nullptr){}\n    int data_;\n    Node* next_;\n};\nclass Clink{\n    //...\nprivate:\n    Node *head_;\n    // \u65b9\u4fbf\u51fd\u6570\u8bbf\u95ee\u5b83\u7684\u79c1\u6709\u6210\u5458\n    friend void ReverseLink(Clink &amp;link);\n}\nvoid ReverseLink(Clink &amp;link){\u3001\n    // \u5f15\u7528\u4f20\u9012\uff1b\u800c\u4e14\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95eehead_\u5143\u7d20\n    Node *p = link.head_-&gt;next_;\n    if (p == nullptr){return;}\n    link.head_-&gt;next_ = nullptr;\n    while (p != nullptr){\n        Node *q = p-&gt;next_;\n        p-&gt;next_ = link.head_-&gt;next_;\n        link.head_-&gt;next_ = p;\n        p = q;\n    }\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#k","title":"\u5355\u94fe\u8868\u6c42\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9","text":"<p>\u95ee\u9898\u63cf\u8ff0: \u5728\u5b9e\u6218\u4e2d, \u8282\u70b9\u6570\u91cf\u662f\u5f88\u591a\u7684. \u5982\u679c\u6211\u9700\u8981\u77e5\u9053\u5355\u94fe\u8868\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9\u7684\u6570\u5b57\u662f\u591a\u5c11\u5462? </p> <p>\u4e00\u79cd\u66b4\u529b\u7684\u65b9\u6cd5\u662f: \u5148\u904d\u5386\u4e00\u904d, \u76f4\u5230\u5c3e\u8282\u70b9, \u76f4\u5230\u5168\u90e8\u7684\u8282\u70b9\u6570\u91cf; \u7136\u540e\u518d\u904d\u5386\u4e00\u8fb9. \u8fd9\u5f53\u7136\u662f\u53ef\u4ee5\u7684, \u4f46\u662f\u65f6\u95f4\u590d\u6742\u7684\u662f<code>O(n)</code>; \u6240\u4ee5\u8bf4\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e0d\u53ef\u53d6\u7684, \u800c\u4e14\u4e00\u65e6\u8282\u70b9\u6570\u91cf\u975e\u5e38\u5927, \u90a3\u4e48\u5c31\u4f1a\u77ac\u95f4\u7206\u70b8. </p> <p>\u66f4\u597d\u7684\u65b9\u6cd5\u662f: \u8bbe\u8ba1\u53cc\u6307\u9488p &amp; q, \u7136\u540e\u4e24\u8005\u90fd\u4ece\u5934\u8282\u70b9\u51fa\u53d1, \u4f46\u662f\u5148\u8ba9p\u8d70k\u6b65, \u7136\u540e\u4e4b\u540ep q\u4e00\u8d77\u8d70. \u76f4\u5230p\u6307\u9488\u53d8\u6210\u4e86\u7a7a\u6307\u9488, \u90a3\u4e48q\u81ea\u52a8\u6307\u5411\u7684\u5c31\u662f\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9\u4e86. </p> <pre><code>struct Node{\n    Node(int data = 0): data_(data), next_(nullptr){}\n    int data_;\n    Node* next_;\n};\nclass Clink{\n    //...\nprivate:\n    Node *head_;\n    // \u65b9\u4fbf\u51fd\u6570\u8bbf\u95ee\u5b83\u7684\u79c1\u6709\u6210\u5458\n    friend bool GetLastKNode(Clink &amp;link, int k, int &amp;val);\n}\nbool GetLastKNode(Clink &amp;link, int k, int &amp;val){\n    // \u6ce8\u610f\u662f\u5f15\u7528\u4f20\u9012, \u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u503c\u8d4b\u7ed9val\n    Node* head = link.head_;\n    Node* q = head;\n    Node* p = head;\n    // \u597d\u4e60\u60ef: \u5224\u65ad\u53c2\u6570\u6709\u6548\u6027!! \u4e3a\u4ec0\u4e48\u5c0f\u5fc3k=0? \u56e0\u4e3ap\u6700\u540e\u5f00\u59cb\u8d700\u6b65, \u7136\u540e\u548cq\u4e00\u8d77\u5230\u7a7a\u6307\u9488\n    // \u60b2\u5267\u5c31\u662f: \u8bbf\u95ee\u4e86\u7a7a\u6307\u9488. \n    if (k &lt; 1){return false;} \n    for (int i = 0; i &lt; k; i++){\n        p = p-&gt;next_;\n        if (p == nullptr){\n            return false;\n        }\n    }\n    while (p != nullptr){\n        q = q-&gt;next_;\n        p = p-&gt;next_;\n    }\n    val = q-&gt;data_;\n    return true;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_16","title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5355\u5217\u8868","text":"<p>\u5df2\u7ecf\u6709\u4e00\u4e2a\u94fe\u88681\u548c2, \u4e24\u4e2a\u4ece\u5c0f\u5230\u5927\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86, \u7136\u540e\u5e0c\u671b2\u8fde\u63a5\u52301\u4e0a. \u5e76\u4e14\u6700\u540e\u4f9d\u7136\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f.</p> <p>\u6211\u4eec\u9700\u8981\u57281 2\u4e24\u4e2a\u94fe\u8868\u4e0a\u9762\u5404\u81ea\u6709\u4e00\u4e2a\u6307\u9488, p q\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u5b57\u8c01\u6253\u8c01\u5c0f; \u540c\u65f6, \u4e0d\u96be\u60f3\u5230, \u6211\u4eec\u5e0c\u671b\u7528\u4e00\u4e2alast\u6307\u9488\u6765\u50a8\u5b58\u4e0a\u4e00\u6b21\u64cd\u4f5c\u5b8c\u4e4b\u540e\u6240\u505c\u7559\u5728\u7684\u8282\u70b9\u4fe1\u606f. \u5904\u7406\u5b8c\u4e4b\u540e, \u5047\u5982\u8bf4p\u5bf9\u5e94\u6570\u5b57\u66f4\u5927, \u90a3\u4e48\u5c31: </p> <pre><code>last-&gt;next_ = p;\np = p-&gt;next_;\nlast = last-&gt;next_;\n</code></pre> <p>\u5f53\u7136, \u80af\u5b9a\u6709\u4e00\u4e2a\u6307\u9488\u4f1a\u5148\u8d70\u5230nullptr\u7684, \u90a3\u4e48\u5047\u5982\u8bf4p\u53d8\u6210\u4e86\u7a7a\u6307\u9488, \u8bf4\u660ep\u6240\u5728\u76841\u94fe\u8868\u6ca1\u6709\u8282\u70b9\u8981\u4e32\u8d77\u6765\u4e86, \u76f4\u63a5\u5c06q\u6307\u5411\u7684\u8282\u70b9\u53ca\u5176\u540e\u9762\u7684\u4e00\u7cfb\u5217\u8282\u70b9\u5f52\u5e76\u5230last\u4e0a\u9762: </p> <pre><code>struct Node{\n    Node(int data = 0): data_(data), next_(nullptr){}\n    int data_;\n    Node* next_;\n};\nclass Clink{\n    //...\nprivate:\n    Node *head_;\n    // \u65b9\u4fbf\u51fd\u6570\u8bbf\u95ee\u5b83\u7684\u79c1\u6709\u6210\u5458\n    friend bool MergeLink(Clink&amp; link1, Clink&amp; link2);\n}\nbool MergeLink(Clink&amp; link1, Clink&amp; link2){\n    Node* p = link1.head_-&gt;next_;\n    Node* q = link2.head_-&gt;next_;\n    Node* last = link1.head_;\n    link2.head_-&gt;next_ = nullptr;\n    while (p != nullptr &amp;&amp; q != nullptr){\n        if (p-&gt;data_ &lt; q-&gt;data_){\n            last-&gt;next_ = p;\n            p = p-&gt;next_;\n            last = last-&gt;next_;\n        }\n        else{\n            last-&gt;next_ = q;\n            q = q-&gt;next_;\n            last = last-&gt;next_;\n        }\n    }\n    if (p != nullptr){\n        last-&gt;next_ = p;\n    }\n    else{\n        last-&gt;next_ = q;\n    }\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_17","title":"\u5224\u65ad\u5355\u94fe\u8868\u662f\u5426\u5b58\u5728\u73af\u4ee5\u53ca\u5165\u53e3\u8282\u70b9","text":"<p>\u5982\u679c\u5b58\u5728\u73af\u7684\u8bdd, \u90a3\u4e48\u5047\u5982\u8bf4\u5f00\u59cb\u904d\u5386\u7684\u8bdd, \u6839\u672c\u904d\u5386\u4e0d\u5b8c! \u4ec0\u4e48\u65f6\u5019\u5b58\u5728\u73af? \u6253\u4e2a\u6bd4\u65b9, \u5730\u5740\u4e0a\u6765\u770b\u6709: A -&gt; B -&gt; C -&gt; D -&gt; A, \u90a3\u4e48\u5c31\u662f\u4e00\u4e2a\u73af, \u800c\u4e14\u904d\u5386\u662f\u5341\u5206\u5371\u9669\u7684. </p> <p>\u4e0d\u5047\u601d\u7d22\u5730: \u53ef\u4ee5\u904d\u5386\u7684\u65f6\u5019, \u628a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\u5355\u72ec\u50a8\u5b58\u8d77\u6765, \u6bcf\u904d\u5386\u4e00\u6b65\u4e4b\u540e, \u770b\u8fd9\u4e2a\u5730\u5740\u5728\u4e0d\u5728\u4e4b\u524d\u50a8\u5b58\u7684\u5730\u5740\u5e93\u91cc\u9762. \u4f46\u662f, \u4f9d\u7136\u662f\u5e0c\u671b\u80fd\u591f\u539f\u5730\u89e3\u51b3\u95ee\u9898. </p> <p>\u73af\u7684\u7279\u70b9\u6709\u4ec0\u4e48? \u9664\u4e86\u6211\u603b\u662f\u80fd\u56de\u5230\u6211\u4e4b\u524d\u8dd1\u8fc7\u7684\u5730\u65b9, \u8fd8\u6709\u4e00\u4e2a\u7279\u70b9: \u4e24\u4e2a\u901f\u5ea6\u4e0d\u4e00\u6837\u7684\u4eba\u8dd1\u5708, \u603b\u662f\u80fd\u5feb\u7684\u4ece\u540e\u9762\u8ffd\u4e0a\u6162\u7684! \u56e0\u6b64, \u8fd9\u4e2a\u95ee\u9898\u6d89\u53ca\u5230\u4e86\u53cc\u6307\u9488\u7684\u5e94\u7528\u2014\u2014\u5feb\u6162\u6307\u9488. </p> <p>\u8fd9\u6837\u4e00\u6765, \u5224\u65ad\u51fa\u662f\u5426\u5b58\u5728\u73af\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86. \u5c31\u6bd4\u5982, slow\u6307\u9488\u8dd1\u7684\u6162, \u4e00\u6b21\u8d70\u4e00\u4e2a\u8282\u70b9; fast\u6307\u9488\u8d70\u5f97\u5feb, \u4e00\u6b21\u8d70\u4e24\u4e2a\u8282\u70b9; fast == slow, \u90a3\u4e48\u5c31\u6210\u73af, \u800c\u5982\u679cfast\u53d8\u6210\u4e86\u7a7a\u6307\u9488, \u90a3\u4e48\u5c31\u8bf4\u660e\u6ca1\u6709\u73af. \u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u6709\u4e00\u4e2a\u7075\u6027\u7684\u95ee\u9898\u4e86: \u4f1a\u4e0d\u4f1afast\u6307\u9488\u8de8\u8d8a\u8fc7slow\u6307\u9488? \u5176\u5b9e\u8fd9\u662f\u4f2a\u547d\u9898. \u552f\u4e00\u80fd\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\u5c31\u662ffast == slow! </p> <p>\u4f46\u662f\u5982\u4f55\u5bfb\u627e\u8282\u70b9\u5462? \u5982\u4e0b\u56fe : </p> <p></p> <p>\u5982\u679c\u5728\u8fd9\u4e2a\u65f6\u5019, fast slow\u4e0d\u518d\u4ee3\u8868\u5feb\u6162, \u800c\u662f\u4ec5\u4ec5\u662f\u8bb0\u53f7, \u90a3\u4e48\u628afast\u6307\u9488\u653e\u56de\u5230head, \u6bcf\u6b21\u8d70\u4e00\u6b65. \u90a3\u4e48fast\u548cslow\u540c\u65f6\u5f00\u59cb\u8d70, \u6700\u540e\u518d\u6b21\u76f8\u9047\u7684\u5730\u65b9\u6b63\u597d\u5c31\u662f\u5165\u53e3\u7684\u5730\u65b9!</p> <pre><code>bool IsLinkHasCircle(Node* head, int&amp; val){\n    Node* fast = head;\n    Node* slow = head;\n    while (fast != nullptr &amp;&amp; fast-&gt;next_ != nullptr){ // fast\u8d70\u4e24\u6b65, \u6240\u4ee5\u5224\u65ad\u4e24\u4e2a\u662f\u4e0d\u662fnullptr, \u9632\u6b62\u8bbf\u95ee\u7a7a\u6307\u9488\n        slow = slow-&gt;next_;\n        fast = fast-&gt;next_-&gt;next_;\n        if (fast == slow){\n            fast = head;\n            while (fast != slow){\n                slow = slow-&gt;next_;\n                fast = fast-&gt;next_;\n            }\n            val = slow-&gt;data_;\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre> <p>\u9644: \u8fd9\u4e2a\u51fd\u6570\u4f20\u5165\u7684\u662f\u7ed3\u6784\u4f53(Node)\u6307\u9488, \u662f\u56e0\u4e3a\u8fd9\u6837\u65b9\u4fbf\u6d4b\u8bd5. \u6d4b\u8bd5\u4ee3\u7801, \u8be6\u89c1: <code>clink.cpp</code></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_18","title":"\u5224\u65ad\u4e24\u4e2a\u94fe\u8868\u662f\u5426\u76f8\u4ea4\u4ee5\u53ca\u76f8\u4ea4\u5165\u53e3","text":"<p>\u4e00\u79cd\u5f88\u76f4\u63a5\u7684\u601d\u8def: \u5148\u5404\u81ea\u904d\u5386\u4e24\u4e2a\u94fe\u8868, \u5f97\u5230a b\u4e24\u4e2a\u957f\u5ea6, \u7136\u540e\u5047\u8bbe\u94fe\u88681\u7684\u957f\u5ea6a\u66f4\u5927, \u90a3\u4e48\u5c311\u94fe\u8868\u6307\u9488\u5148\u8d70(a-b)\u6b65, \u7136\u540e1 2\u94fe\u8868\u7684\u4e24\u4e2a\u6307\u9488\u4e00\u8d77\u8d70, \u6700\u540e\u76f8\u9047\u7684\u5730\u65b9\u5c31\u662f\u5165\u53e3; \u5982\u679c\u6700\u540e\u4e24\u4e2a\u90fd\u5404\u81ea\u53d8\u6210\u4e86<code>nullptr</code>, \u90a3\u4e48\u5c31\u8bf4\u660e\u4e0d\u76f8\u4ea4. </p> <pre><code>bool IsLinkHasMerge(Node* head1, Node* head2, int&amp; val){\n    int cnt1 = 0, cnt2 = 0;\n    Node* p = head1-&gt;next_;\n    Node* q = head2-&gt;next_;\n    while (p != nullptr){\n        cnt1++;\n        p = p-&gt;next_;\n    }\n    while (q != nullptr){\n        cnt1++;\n        q = q-&gt;next_;\n    }\n    p = head1-&gt;next_;\n    q = head2-&gt;next_;\n    if (cnt1 &gt; cnt2){\n        int offset = cnt1 - cnt2;\n        while (offset-- &gt; 0){\n            p = p-&gt;next_;\n        }\n        while (p != nullptr &amp;&amp; q != nullptr){\n            if (p == q){\n                val = p-&gt;data_;\n                return true;\n            }\n            p = p-&gt;next_;\n            q = q-&gt;next_;\n        }\n        return false;\n    }\n    else {\n        int offset = cnt2 - cnt1;\n        while (offset-- &gt; 0){\n            q = q-&gt;next_;\n        }\n        while (p != nullptr &amp;&amp; q != nullptr){\n            if (p == q){\n                val = p-&gt;data_;\n                return true;\n            }\n            p = p-&gt;next_;\n            q = q-&gt;next_;\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_19","title":"\u5355\u5411\u5faa\u73af\u94fe\u8868","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_20","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>\u5355\u9879\u5faa\u73af\u94fe\u8868\u7684\u5faa\u73af\u5177\u4f53\u6765\u8bf4\u662f:\u5982\u679c\u6709\u5934\u8282\u70b9, \u5c3e\u8282\u70b9\u5b58\u50a8\u7740\u5934\u8282\u70b9\u7684\u5730\u5740; \u5982\u679c\u6ca1\u6709\u5934\u8282\u70b9, \u5c3e\u8282\u70b9\u5b58\u50a8\u7740\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740. \u6211\u4eec\u53ef\u4ee5\u4e13\u95e8\u4f7f\u7528tail\u6307\u9488, \u6765\u8bb0\u5f55\u5c3e\u8282\u70b9\u7684\u5730\u5740, \u90a3\u4e48<code>tail-&gt;next_</code>\u5c31\u662f\u5934\u8282\u70b9\u7684\u5730\u5740. \u6ce8\u610f, \u5168\u7a0btail\u7684\u4fe1\u606f\u5e94\u8be5\u5f97\u5230\u6b63\u786e\u7684\u66f4\u65b0! </p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_21","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>// circlelink.cpp\n#include &lt;iostream&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\nusing namespace std;\n\nstruct Node{\n    Node(int data = 0) : data_(data), next_(nullptr){}\n    int data_;\n    Node* next_;\n};\nclass CircleLink{\npublic:\n    CircleLink(){\n        head_ = new Node();\n        // tail\u6307\u9488\u7684\u4fe1\u606f\u5c06\u5728\u5c3e\u63d2\u7684\u8fc7\u7a0b\u4e2d\u5f97\u5230\u66f4\u65b0!\n        tail_ = head_;\n        head_-&gt;next_ = head_;\n    }\n    ~CircleLink(){\n        Node* p = head_-&gt;next_;\n        while (p != head_){\n            head_-&gt;next_ = p-&gt;next_;\n            delete p;\n            p = head_-&gt;next_;\n        }\n        delete head_;\n    }\n\npublic:\n    void InsertTail(int val){\n        Node* node = new Node(val);\n        node-&gt;next_=tail_-&gt;next_;\n        tail_-&gt;next_ = node;\n        // \u5728\u8fd9\u91cc, tail\u6307\u9488\u7684\u4fe1\u606f\u5f97\u5230\u66f4\u65b0! \n        tail_ = node;\n    }\n\n    void InsertHead(int val){\n        Node* node = new Node(val);\n        node-&gt;next_=head_-&gt;next_;\n        head_-&gt;next_ = node;\n        // \u5982\u679c\u53ea\u6709\u5934\u8282\u70b9, tail\u548chead\u4e00\u6837, \u90a3\u4e48\u5934\u63d2\u4e4b\u540e, tail\u6307\u9488\u9700\u8981\u79fb\u52a8\n        // \u4f46\u662f\u5bf9\u4e8e\u4e0d\u6b62\u5934\u8282\u70b9\u60c5\u51b5, tail\u6307\u9488\u4e0d\u9700\u8981\u79fb\u52a8. \u6240\u4ee5\u8fd9\u91cc\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u5bf9tail\u6307\u9488\u7684\u5904\u7406!\n        if (node-&gt;next_ == head_){\n            tail_ = node;\n        }\n    }\n\n    void Remove(int val){\n        Node* q = head_;\n        Node* p = head_-&gt;next_;\n        while (p != head_){ // \u6ce8\u610f\u4ec0\u4e48\u65f6\u5019\u9000\u51fa\u5faa\u73af! \u9664\u975e\u9700\u8981\u53ef\u4ee5\u5bfb\u627e\u5c3e\u8282\u70b9, \u5faa\u73af\u4e2d\u5c3d\u53ef\u80fd\u5c11\u7528-&gt;next_\u5224\u65ad\n            if (p-&gt;data_ == val){\n                q-&gt;next_ = p-&gt;next_;\n                delete p;\n                // \u5982\u679c\u5220\u9664\u7684\u662f\u4e3a\u8282\u70b9, \u90a3\u4e48tail\u6307\u9488\u9700\u8981\u5f97\u5230\u66f4\u65b0! \n                if (q-&gt;next_ == head_){\n                    tail_ = q;\n                }\n                return;\n            }\n            else {\n                q = p;\n                p = p-&gt;next_;\n            }\n        }\n        return;\n    }\n\n    bool Find(int val) const{\n        Node* p = head_-&gt;next_;\n        while (p != head_){\n            if (p-&gt;data_ == val){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    void Show() const{\n        Node* p = head_-&gt;next_;\n        while (p != head_){\n            cout &lt;&lt; p-&gt;data_ &lt;&lt; \" \";\n            p = p-&gt;next_;\n        }\n        cout &lt;&lt; endl;\n    }\n\nprivate:\n    Node* head_;\n    Node* tail_;\n };\n\nvoid TestBasic(CircleLink clink){\n    srand(time(NULL));\n    for (int i = 0; i &lt; 10; i++){\n        clink.InsertTail(rand()%100);\n    }\n    clink.Show();\n    clink.InsertHead(200);\n    clink.InsertTail(200);\n    clink.Show();\n    clink.Remove(200);\n    clink.Show();\n}\n\nint main(){\n    CircleLink clink;\n    TestBasic(clink);\n    return 0;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_22","title":"\u7ea6\u745f\u592b\u73af\u95ee\u9898","text":"<p>\u5df2\u77e5n\u4e2a\u4eba\u56f4\u5750\u5728\u4e00\u5f20\u5706\u684c\u5468\u56f4, \u4ece\u7f16\u53f7\u4e3ak\u7684\u4eba\u5f00\u59cb\u62a5\u6570, \u6570\u5230m\u7684\u90a3\u4e2a\u4eba\u51fa\u5217, \u5b83\u7684\u4e0b\u4e00\u4e2a\u4eba\u53c8\u5f00\u59cb\u4ece1\u62a5\u6570, \u6570\u5230m\u7684\u90a3\u4e2a\u4eba\u53c8\u51fa\u5217, \u4ee5\u6b64\u91cd\u590d\u4e0b\u53bb, \u76f4\u5230\u5706\u684c\u5468\u56f4\u7684\u4eba\u5168\u90e8\u51fa\u5217, \u8f93\u51fa\u4eba\u7684\u51fa\u5217\u987a\u5e8f.</p> <p>\u7531\u4e8e\u73af\u7684\u8bbe\u8ba1, \u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u9002\u5408\u7528\u5355\u5faa\u73af\u94fe\u8868\u6765\u89e3\u51b3. \u56e0\u4e3a\u6d89\u53ca\u5230\u4e86\u5220\u9664\u8282\u70b9, \u6240\u4ee5\u81ea\u7136\u60f3\u5230\u9700\u8981\u7528p q\u4e24\u4e2a\u6307\u9488(q\u5728p\u540e\u9762, \u7528\u6765\u65b9\u4fbf\u5220\u9664\u8282\u70b9). \u90a3\u4e48\u6700\u540e\u7ed3\u675f\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\u5462? \u6700\u540e, p q\u6307\u9488\u4f1a\u91cd\u5408. </p> <pre><code>// circlelink.cpp\nvoid Joseph(Node* head, int k, int m){\n    Node* p = head;\n    Node* q = head;\n    // q\u6307\u5411\u6700\u540e\u4e00\u4e2a\u8282\u70b9! \u56e0\u4e3a\u5728\u6211\u4eec\u6d4b\u8bd5\u7684\u65f6\u5019, \u6ca1\u6709\u5934\u8282\u70b9.\n    while (q-&gt;next_ != head){\n        q = q-&gt;next_;\n    }\n    // \u5230\u7b2ck\u4e2a\u4eba\n    for (int i = 1; i &lt; k; i++){\n        q = p;\n        p = p-&gt;next_;\n    }\n    for (;;){ // \u4e00\u76f4\u5faa\u73af, \u76f4\u5230p == q\n        for (int i = 1; i &lt; m; i++){\n            q = p;\n            p = p-&gt;next_;\n        }\n        cout &lt;&lt; p-&gt;data_ &lt;&lt; \" \";\n        if (p == q){\n            delete p;\n            break;\n        }\n        q-&gt;next_ = p-&gt;next_;\n        delete p;\n        p = q-&gt;next_;\n    }\n    cout &lt;&lt; endl;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_23","title":"\u53cc\u5411\u94fe\u8868","text":"<ul> <li>\u6bcf\u4e00\u4e2a\u8282\u70b9\u9664\u4e86\u6570\u636e\u57df\uff0c\u8fd8\u6709next\u6307\u9488\u57df\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0cpre\u6307\u9488\u57df\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9</li> <li>\u5934\u7ed3\u70b9\u7684pre\u662fNULL\uff0c\u672b\u5c3e\u8282\u70b9\u7684next\u662fNULL</li> </ul> <p>\u6ce8\uff1a\u505a\u9898\u65f6\u8981\u5224\u65ad\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u7a76\u7adf\u662f\u5355\u5411\u8fd8\u662f\u53cc\u5411\uff08\u56e0\u4e3a\u53cc\u5411\u786e\u5b9e\u662f\u65b9\u4fbf\uff09</p> <pre><code>// doublelink.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\nstruct Node{\n    Node(int data = 0) \n        : data_(data)\n        , next_(nullptr)\n        , pre_(nullptr) \n        {} // \u89c4\u8303\u5316\u7684\u521d\u59cb\u5316\u6784\u9020\u5217\u8868,\u4e00\u884c\u4e00\u4e2a\n    int data_;\n    Node *next_;\n    Node *pre_;\n};\n\nclass DoubleLink{\npublic:\n    DoubleLink(){\n        head_ = new Node();\n    }\n    ~DoubleLink(){\n        Node* p = head_;\n        while (p != nullptr){\n            head_ = head_-&gt;next_;\n            delete p;\n            p = head_;\n        }\n    }\n\nprivate:\n    Node* head_;\n\npublic:\n    void InsertHead(int val){\n        Node* node = new Node(val);\n        node-&gt;next_ = head_-&gt;next_;\n        node-&gt;pre_ = head_;\n        if (head_-&gt;next_ != nullptr){\n            head_-&gt;next_-&gt;pre_ = node;\n        }\n        head_-&gt;next_ = node;\n    }\n\n    void InsertTail(int val){\n        Node* p = head_;\n        while (p-&gt;next_ != nullptr){\n            p = p-&gt;next_;\n        }\n        Node* node = new Node(val);\n        node-&gt;pre_ = p;\n        p-&gt;next_ = node;\n    }\n\n    bool Find(int val){\n        Node* p = head_-&gt;next_;\n        while (p != nullptr){\n            if (p-&gt;data_ == val){\n                return true;\n            }\n            else{\n                p = p-&gt;next_;\n            }\n        }\n    }\n\n    void Remove(int val){\n        Node* p = head_-&gt;next_;\n        while (p != nullptr){\n            if (p-&gt;data_ == val){\n                p-&gt;pre_-&gt;next_ = p-&gt;next_;\n                if (p-&gt;next_ != nullptr){\n                    p-&gt;next_-&gt;pre_ = p-&gt;pre_;\n                }\n                Node* next = p-&gt;next_;\n                delete p;\n                p = next; // \u6709\u4e86\u8fd9\u4e00\u884c,\u8bf4\u660e\u662f\u5220\u9664\u5168\u90e8\u503c\u4e3aval\u7684\u8282\u70b9\n            }\n            else{\n                p = p-&gt;next_;\n            }\n        }\n    }\n\n    void Show(){\n        Node* p = head_-&gt;next_;\n        while (p != nullptr){\n            cout &lt;&lt; p-&gt;data_ &lt;&lt; \" \";\n            p = p-&gt;next_;\n        }\n        cout &lt;&lt; endl;\n     }\n};\n\nvoid TestBasic(DoubleLink&amp; dlink){\n    cout &lt;&lt; \"Testing Basics!\" &lt;&lt; endl;\n    dlink.InsertHead(11);\n    dlink.InsertHead(45);\n    dlink.InsertHead(14);\n    dlink.Show();\n    dlink.InsertTail(19);\n    dlink.InsertTail(19);\n    dlink.InsertTail(810);\n    dlink.Show();\n}\n\nvoid TestRemoval(DoubleLink&amp; dlink){\n    dlink.Remove(19);\n    dlink.Show();\n}\n\nint main(){\n    DoubleLink dlink;\n    TestBasic(dlink);\n    TestRemoval(dlink);\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_24","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u4e3a\u4ec0\u4e48\u8bf4\u5141\u8bb8\u4fee\u6539\u8282\u70b9\uff08\u800c\u4e0d\u662f\u5b9a\u6b7b\u4e86\u4e00\u4e2a\u8282\u70b9\u7684\u6570\u636e\u57df\u548c\u6307\u9488\u57df\u90fd\u4e0d\u53ef\u4ee5\u4fee\u6539\uff09\u80fd\u591f\u52a0\u5feb\u4e09\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5462\uff1f\u56e0\u4e3a\u5728\u524d\u9762\u63d2\u5165\u4e0d\u518d\u662f\u5fc5\u987b\u8981\u53e6\u8bbe\u6307\u9488\u4e0d\u65ad\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u524d\u4e00\u4e2a\u8282\u70b9\u4e86\uff1b\u800c\u662f\u6211\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u503c\u6362\u6210\u5b83\u7684\uff0c\u7136\u540e\u6307\u9488\u57df\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u5b83\u81ea\u5df1\u7684\u5730\u5740\u88ab\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7684\u6307\u9488\u57df\u6307\u5411\u3002</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_25","title":"\u6808","text":"<p>\u6808\u5341\u5206\u91cd\u8981\uff01\u7279\u70b9\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u540e\u8fdb\u5148\u51fa\u3002\u6808\u5e76\u4e0d\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u636e\u7ed3\u6784\uff0c\u800c\u662f\u5efa\u7acb\u5728\u6570\u7ec4\u548c\u94fe\u8868\u4e4b\u4e0a\u5b9e\u73b0\u7684\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u5728\u6570\u7ec4\u548c\u94fe\u8868\u4e2d\uff0c\u53ef\u4ee5\u5728\u672b\u5c3e\u548c\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff0c\u4f46\u662f\u5728\u6808\u4e2d\u6709\u786c\u6027\u89c4\u5b9a\uff1a\u53ea\u80fd\u5728\u4e00\u4e2a\u4f4d\u7f6e\u52a0\u5165\u5143\u7d20\uff0c\u53ea\u80fd\u5728\u4e00\u4e2a\u4f4d\u7f6e\u5220\u9664\u5143\u7d20\u3002\u6808\u6709\u4ee5\u4e0b\u7c7b\u578b\uff1a\u987a\u5e8f\u6808\u548c\u94fe\u5f0f\u6808\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_26","title":"\u987a\u5e8f\u6808","text":"<p>\u987a\u5e8f\u6808\uff08Sequential Stack\uff09\uff1a\u5efa\u7acb\u5728\u6570\u7ec4\u4e4b\u4e0a\u3002\u987a\u5e8f\u6808\u4e2d\uff0c\u6808\u5e95\u5c42\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\u79f0\u4e3a\u6808\u5e95\uff0c\u800c\u53ea\u80fd\u5728\u6808\u9876\uff08top\uff09\u8fdb\u884c\u5143\u7d20\u7684\u8fdb\u51fa\u3002\u4e00\u5f00\u59cb\uff0c<code>top = 0 // top\u4ee3\u8868\u5143\u7d20\u7684\u6570\u7ec4\u4e0b\u6807</code>\uff0c\u4ee3\u8868\u6808\u7684\u521d\u59cb\u5316\uff0c\u6808\u662f\u7a7a\u7684\u3002\u4e4b\u540e\u5143\u7d20\u8fdb\u884c\u5165\u6808\uff0c\u800c\u53ea\u80fd\u4ece\u6808\u9876\u8fdb\u5165\uff0c\u56e0\u6b64\u662f\uff1a<code>arr[top] = val; top++;</code>\u90a3\u4e48\u8bbf\u95ee\u6808\u9876\u5143\u7d20\u5c31\u662f<code>arr[top-1]</code>\u4e86\u3002\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u51fa\u6808\u5462\uff1f\u5176\u5b9e<code>top--;</code>\u5c31\u53ef\u4ee5\u4e86\u3002\u6240\u4ee5\u53ea\u8981\u63a7\u5236\u597dtop\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u4f7f\u5f97\u6808\u5916\u7684\u6570\u636e\u8bbf\u95ee\u4e0d\u5230\uff0c\u5c31\u80fd\u5b9e\u73b0\u51fa\u5165\u6808\u3002\u7c7b\u4f3c\u5730\uff0c\u60f3\u8981\u7a7a\u6808\u5c31\u76f4\u63a5<code>top = 0;</code>\u3002\u800c\u5f53\u6808\u6ee1\u7684\u65f6\u5019<code>top == sizeof(arr)/sizeof(arr[0])</code>\uff0c\u5c31\u4e0d\u80fd\u518d\u5728\u539f\u5730\u63d2\u5165\u5143\u7d20\u4e86\uff0c\u4e0d\u7136\u5c31\u6570\u7ec4\u8d8a\u754c\u8bbf\u95ee\u4e86\uff0c\u6240\u4ee5\u5c31\u8981\u8003\u8651\u81ea\u52a8\u6269\u5bb9\uff08\u548c\u6570\u7ec4\u5f88\u50cf\uff09\u3002</p> <pre><code>// sequential_stack.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\n// \u987a\u5e8f\u6808 C++\u5bb9\u5668\u9002\u914d\u5668 stack\nclass SeqStack{\npublic:\n    SeqStack(int size = 10)\n        : mtop(0)\n        , mcap(size)\n        {\n            mpStack = new int[mcap];\n        }\n    ~SeqStack(){\n        delete[] mpStack;\n        mpStack = nullptr; // \u9632\u6b62\u91ce\u6307\u9488\n    }\n\npublic:\n    // \u5165\u6808\n    void push(int val){\n        if (mtop == mcap){\n            // \u6269\u5bb9\n            expand(2*mcap);\n        }\n        mpStack[mtop++] = val; // \u8d4b\u503c\u540e,top++\n    }\n\n    void pop(){\n        if (mtop == 0){\n            // \u629b\u5f02\u5e38\u4e5f\u662f\u4e00\u79cdreturn\n            throw \"Stack is empty\";\n        }\n        mtop--;\n    }\n\n    int top() const{ // \u52a0const\u662f\u56e0\u4e3a,\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ea\u8bfb\u7684\n        if (mtop == 0){\n            throw \"Stack is empty\";\n        }\n        return mpStack[mtop-1];\n    }\n\n    bool empty(){\n        return mtop == 0;\n    }\n\n    int size() const{\n        return mtop;\n    }\n\nprivate:\n    int* mpStack;\n    int mtop; // \u6808\u9876\u4f4d\u7f6e\n    int mcap; // \u6808\u7a7a\u95f4\u5927\u5c0f\n\nprivate:\n    void expand(int size){\n        int* p = new int[size];\n        memcpy(p, mpStack, mtop*sizeof(int));\n        delete[] mpStack;\n        mpStack = p;\n        mcap = size;\n    }\n};\n\nint main(){\n    int arr[] = {12, 4, 56, 7, 89, 31, 53, 75};\n    SeqStack s;\n    for (int v : arr){\n        s.push(v);\n    }\n    while (!s.empty()){\n        cout &lt;&lt; s.top() &lt;&lt; \" \";\n        s.pop();\n    }\n    cout &lt;&lt; endl;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_27","title":"\u94fe\u8868\u6808","text":"<p>\u5728\u987a\u5e8f\u6808\u4e2d\uff0c\u6570\u636e\u7684\u6269\u5bb9\u5341\u5206\u4f4e\u6548\uff0c\u56e0\u6b64\u8003\u8651\u5229\u7528\u94fe\u8868\u7684\u4f18\u52bf\u6765\u5f25\u8865\u8fd9\u4e00\u4e0d\u8db3\u3002</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass LinkStack{\npublic:\n    LinkStack() : size_(0){\n        head_ = new Node;\n    }\n    ~LinkStack(){\n        Node* p = head_;\n        while (p != nullptr){\n            head_ = head_-&gt;next_;\n            delete p;\n            p = head_;\n        }\n    }\n\npublic:\n    // \u5165\u6808 \u5934\u7ed3\u70b9\u7684\u540e\u9762\u7b2c\u4e00\u4e2a\u6709\u6548\u8282\u70b9\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u6808\u9876\n    void push(int val){\n        Node* node = new Node(val);\n        node-&gt;next_ = head_-&gt;next_;\n        head_-&gt;next_ = node;\n        size_++;\n    }\n    // \u51fa\u6808\n    void pop(){\n        if (head_-&gt;next_ == nullptr)\n            throw \"Stack is empty!\";\n        Node* p = head_-&gt;next_;\n        head_-&gt;next_ = p-&gt;next_;\n        delete p;\n        size_--;\n    }\n\n    int top() const{\n        if (head_-&gt;next_ == nullptr)\n            throw \"Stack is empty!\";\n        return head_-&gt;next_-&gt;data_;\n    } \n\n    bool empty(){\n        return head_-&gt;next_ == nullptr;\n    }\n\n    int size() const{\n        // \u8fd4\u56de\u6808\u5143\u7d20\u4e2a\u6570\uff0c\u5982\u679c\u904d\u5386\uff0c\u90a3\u4e48\u5c31\u662fO(n)\n        // \u4e3a\u4e86O(1),\u53ef\u4ee5\u5728\u6210\u5458\u91cc\u9762\u52a0\u5165\u8bb0\u5f55\u8fd9\u4e00\u53c2\u6570\u7684\u8bbe\u8ba1\n        return size_;\n    }\nprivate:\n    struct Node{\n        Node(int data = 0) : data_(data), next_(nullptr){}\n        int data_;\n        Node* next_;\n    };\n    Node* head_;\n    int size_;\n};\n\nint main(){\n    int arr[] = {12, 4, 56, 7, 89, 31, 53, 75};\n    LinkStack s;\n    for (int v : arr){\n        s.push(v);\n    }\n    cout &lt;&lt; \"The size of the stack is: \" &lt;&lt; s.size() &lt;&lt; endl;\n    while (!s.empty()){\n        cout &lt;&lt; s.top() &lt;&lt; \" \";\n        s.pop();\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_28","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_29","title":"\u62ec\u53f7\u5339\u914d\u95ee\u9898","text":"<p>\u601d\u8def\uff1a 1. \u904d\u5386s\u5b57\u7b26\u4e32\uff0c\u9047\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808  2. \u5982\u679c\u9047\u5230\u4e86\u53f3\u62ec\u53f7\uff0c\u4ece\u6808\u9876\u53d6\u51fa\u4e00\u4e2a\u5de6\u62ec\u53f7\uff0c\u5982\u679c\u5339\u914d\uff0c\u7ee7\u7eed\uff1b\u5982\u679c\u4e0d\u5339\u914d\uff0c\u76f4\u63a5\u7ed3\u675f\uff0c\u8fd4\u56defalse. </p> <p>\u4f46\u662f\u4f9d\u7136\u6709\u4e00\u4e9b\u7ec6\u8282: 1. \u5982\u679c\u662f<code>(</code>\u5462\uff1f \u5de6\u62ec\u53f7\u90fd\u653e\u8fdb\u4e86\u6808\u91cc\u9762\uff0c\u56e0\u6b64\u4f1a\u8df3\u51fa\u5faa\u73af\uff0c\u56e0\u6b64\u9700\u8981\u6ce8\u610f\u5faa\u73af\u5916\u8981\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a    2. \u5982\u679c\u662f<code>)</code>\u5462\uff1f\u9047\u5230\u4e86\u53f3\u62ec\u53f7\uff0c\u4f46\u662f\u6808\u91cc\u9762\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u56e0\u6b64\u6ca1\u6709\u6b64\u9047\u5230\u53f3\u62ec\u53f7\uff0c\u9700\u8981\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\u3002</p> <pre><code>class Solution {\npublic:\n    bool isValid(string s) {\n        stack&lt;char&gt; cs;\n        for (char ch : s){\n            if (ch == '(' || ch == '[' || ch == '{'){\n                cs.push(ch);\n            }\n            else{\n                if (cs.empty())\n                    return false;\n                char cmp = cs.top();\n                cs.pop();\n                if (ch == ')' &amp;&amp; cmp != '('\n                || ch == ']' &amp;&amp; cmp != '['\n                || ch == '}' &amp;&amp; cmp != '{'){\n                    return false;\n                }\n            }\n        }\n        // \u8fd8\u9700\u8981\u5224\u65ad\u6808\u91cc\u9762\u662f\u5426\u5904\u7406\u5b8c\u6bd5\n        return cs.empty();\n    }\n};\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_30","title":"\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f","text":"<p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u6240\u8c13\u540e\u7f00\u5c31\u662f\u6307\u7b97\u7b26\u5199\u5728\u540e\u9762\u3002</p> <ul> <li>\u5e73\u5e38\u4f7f\u7528\u7684\u7b97\u5f0f\u5219\u662f\u4e00\u79cd\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff0c\u5982 <code>( 1 + 2 ) * ( 3 + 4 )</code> \u3002</li> <li>\u8be5\u7b97\u5f0f\u7684\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5199\u6cd5\u4e3a <code>( ( 1 2 + ) ( 3 4 + ) * )</code> \u3002</li> </ul> <p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4f18\u70b9\uff1a</p> <ul> <li>\u53bb\u6389\u62ec\u53f7\u540e\u8868\u8fbe\u5f0f\u65e0\u6b67\u4e49\uff0c\u4e0a\u5f0f\u5373\u4fbf\u5199\u6210 <code>1 2 + 3 4 + *</code>\u4e5f\u53ef\u4ee5\u4f9d\u636e\u6b21\u5e8f\u8ba1\u7b97\u51fa\u6b63\u786e\u7ed3\u679c\u3002</li> <li>\u9002\u5408\u7528\u6808\u64cd\u4f5c\u8fd0\u7b97\uff1a\u9047\u5230\u6570\u5b57\u5219\u5165\u6808\uff1b\u9047\u5230\u7b97\u7b26\u5219\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u5165\u6808\u4e2d</li> </ul> <pre><code>\u8f93\u5165\uff1atokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\n\u8f93\u51fa\uff1a22\n\u89e3\u91ca\uff1a\u8be5\u7b97\u5f0f\u8f6c\u5316\u4e3a\u5e38\u89c1\u7684\u4e2d\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u4e3a\uff1a\n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</code></pre> <p>\u601d\u8def\u5df2\u7ecf\u6e05\u6670\u5730\u8868\u8fbe\u5728\u9898\u76ee\u91cc\u9762\u4e86\u3002</p> <pre><code>class Solution {\npublic:\n    int calculate(int left, int right, char sign){\n        switch(sign){\n            case '+' : return left + right; \n            case '-' : return left - right; \n            case '*' : return left * right; \n            case '/' : return left / right; \n        }\n        throw \"\";\n        // throw\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u901a\u8fc7\u901a\u8fc7\u7f16\u8bd1\uff0c\u5e76\u4e14\u9632\u6b62case\u4e2d\u51fa\u73b0\u975e\u52a0\u51cf\u4e58\u9664\u7684char\n    }\n    int evalRPN(vector&lt;string&gt;&amp; tokens) {\n        stack&lt;int&gt; is;\n        for (string&amp; str : tokens){\n            if (str.size() == 1 &amp;&amp;\n            (str[0] == '+' || str[0] == '-'\n            || str[0] == '*' || str[0] == '/'))\n            {\n                int right = is.top();\n                is.pop();\n                int left = is.top();\n                is.pop();\n                is.push(calculate(left, right, str[0]));\n            }\n            else{\n                // string\u7684\u6570\u5b57\u8f6c\u5316\u4e3a\u6b63\u6574\u6570\uff0cc++\u63a5\u53e3\n                is.push(stoi(str));\n            }\n        }\n        return is.top();\n    }\n};\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_31","title":"\u4e2d\u7f00\u8f6c\u540e\u8868\u8fbe\u5f0f","text":"<p>\u90a3\u4e48\u5982\u4f55\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u5316\u4e3a\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u5462\uff1f\u5982\u679c\u80fd\u5b9e\u73b0\u8fd9\u4e2a\uff0c\u90a3\u4e48\u5c31\u80fd\u5f88\u597d\u5730\u5b9e\u73b0\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u3002</p> <p>\u90a3\u4e48\u4f8b\u5982<code>(1+2)*(3+4)</code>\u8fd9\u6837\u7684\u5f0f\u5b50\u5982\u4f55\u53d8\u6210 <code>1 2 + 3 4 + *</code>\u5462\uff1f</p> <p>\u6211\u4eec\u8981\u5355\u72ec\u8bbe\u8ba1\u7b26\u53f7\u6808\u3002\u9047\u5230\u6570\u5b57\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u800c\u9047\u5230\u7b26\u53f7\uff1a</p> <ul> <li>\u6808\u4e3a\u7a7a\uff0c\u90a3\u4e48\u7b26\u53f7\u76f4\u63a5\u5165\u6808</li> <li>\u5982\u679c\u662f(\uff0c\u76f4\u63a5\u5165\u6808</li> <li>\u7528\u5f53\u524d\u7b26\u53f7\u548c\u6808\u9876\u7b26\u53f7\u6bd4\u8f83\u4f18\u5148\u7ea7*</li> </ul> <p>\u4f18\u5148\u7ea7*\uff1a</p> <ul> <li>\u5f53\u524d\u7b26\u53f7&gt;\u6808\u9876\u7b26\u53f7\uff0c\u5f53\u524d\u7b26\u53f7\u5165\u6808\uff0c\u7ed3\u675f</li> <li>\u5f53\u524d\u7b26\u53f7&lt;=\u6808\u9876\u7b26\u53f7\uff0c\u6808\u9876\u7b26\u53f7\u51fa\u6808\u5e76\u8f93\u51fa\uff0c\u7ee7\u7eed\u6bd4\u8f83</li> </ul> <p>\u76f4\u5230\uff1a1. \u6808\u91cc\u9762\u7b26\u53f7\u51fa\u5b8c   2. \u9047\u5230)\uff0c\u8981\u4e00\u76f4\u51fa\u6808\uff0c\u76f4\u5230\u9047\u89c1(\u4e3a\u6b62</p> <pre><code>// MiddleToEndExpr.cpp\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stack&gt;\nusing namespace std;\n\nbool Priority(char ch, char topch){\n    if ((ch == '*' || ch == '/') &amp;&amp; \n    (topch == '+' || topch == '-')){\n        return true;\n    }\n    if (ch == ')'){return false;}\n    if (topch == '(' &amp;&amp; ch != ')'){return true;}\n    return false;\n}\n\n\nstring MiddleToEndExpr(string expr){\n    string result;\n    stack&lt;char&gt; s;\n\n    for (char ch : expr){\n        if (ch &gt;= '0' &amp;&amp; ch &lt;= '9'){\n            result.push_back(ch);\n        }\n        else{\n            if (s.empty() || ch == '('){\n                s.push(ch);\n            }\n            else{\n                while (!s.empty()){\n                    char topch = s.top();\n                    if (Priority(ch, topch)){\n                        s.push(ch);\n                        break;\n                    }\n                    else{\n                        s.pop();\n                        if (topch == '(')\n                            break;\n                        result.push_back(topch);\n                    }\n                }\n            }\n        }\n    }\n    // \u5982\u679c\u7b26\u53f7\u6808\u4ecd\u7136\u5b58\u7559\u7b26\u53f7\n    while (!s.empty()){\n        result.push_back(s.top());\n        s.pop();\n    }\n    return result;\n}\n\nint main(){\n    cout &lt;&lt; MiddleToEndExpr(\"(1+2)*(3+4)\") &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#stl","title":"STL\u5b9e\u73b0","text":"<p>queue\u5934\u6587\u4ef6\u4e2d\u7684STL\u6240\u652f\u6301\u7684\u51fd\u6570\uff1apush(), pop()(\u6ca1\u6709\u8fd4\u56de\u503c), top()(\u4e13\u95e8\u8fd4\u56de\u6808\u9876\u503c)\u3002\u6ce8\u610f\uff0c\u6ca1\u6709\u4e13\u95e8\u63d0\u4f9b\u6808\u5e95\u5143\u7d20\u7684\u51fd\u6570\uff0c\u56e0\u4e3a\u961f\u5217\u662fLIFO\uff08last-in, first-out\uff09\uff0c\u6ca1\u6709\u8bbf\u95ee\u6808\u5e95\u5143\u7d20\u7684\u63a5\u53e3\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;stack&gt;\nusing namespace std;\nint main() {\n    stack&lt;int&gt; istack;\n\n    istack.push( 13 );\n    istack.push( 42 );\n    cout &lt;&lt; \"Top: \" &lt;&lt; istack.top() &lt;&lt; endl;\n    istack.pop();                             // no return value\n    cout &lt;&lt; \"Top: \" &lt;&lt; istack.top() &lt;&lt; endl;\n    cout &lt;&lt; \"Size: \" &lt;&lt; istack.size() &lt;&lt; endl;\n\n    return 0;\n}\n\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_32","title":"\u961f\u5217","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_33","title":"\u57fa\u7840\u4e0e\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u7279\u70b9\uff1a\u5148\u8fdb\u5148\u51fa\uff0c\u540e\u8fdb\u540e\u51fa</p> <p>\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u4e24\u5957\u5f15\u7d22\uff0cfirst\u8bb0\u5f55\u5934\uff0crear\u8bb0\u5f55\u5c3e\u3002\u5165\u961f\u7684\u8fc7\u7a0b\u4e2d\uff0c<code>arr[rear] = val; rear++;</code>\uff0c\u90a3\u4e48\u548c\u6808\u7c7b\u4f3c\u5730\uff0c\u51fa\u961f\u7684\u65f6\u5019\u76f4\u63a5<code>first++\uff1b</code>\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u7136\uff0crear\u6709\u8d8a\u754c\u8bbf\u95ee\u7684\u5371\u9669\uff08\u5982\u679c\u662f\u7528\u6570\u7ec4\u5b9e\u73b0\uff09\uff0c\u56e0\u4e3arear\u53ef\u80fd\u7b49\u4e8e<code>arr.length</code>\u3002\u800c\u4e14\u524d\u9762\u51fa\u961f\u7684\u5143\u7d20\u6839\u672c\u7528\u4e0d\u4e0a\uff0c\u5c31\u4f1a\u95f2\u7f6e\u5728\u90a3\u91cc\uff0c\u6d6a\u8d39\u7a7a\u95f4\u3002\u6240\u4ee5\u8bf4\u5728\u5c1d\u8bd5\u7528\u6570\u7ec4\u5b9e\u73b0\u961f\u5217\u7684\u65f6\u5019\uff0c\u903b\u8f91\u8981\u8fdb\u884c\u8f6c\u5316\uff1a</p> <p>\u903b\u8f91\u4e0a\uff0c\u5f53rear\u51c6\u5907\u8d8a\u754c\u7684\u65f6\u5019\uff0c\u76f4\u63a5<code>rear = (rear + 1) % arr.length</code>\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u5165\u961f\u90fd\u4f1a\u628a\u4e4b\u524d\u51fa\u961f\u7684\u4f4d\u7f6e\u7684\u5143\u7d20\u8986\u76d6\u6389\uff0c\u4ece\u800c\u91cd\u65b0\u5229\u7528\u5185\u5b58\u3002\u90a3\u4e48rear\u53ef\u80fd\u4f1a\u8ffd\u4e0afirst\u7684\u5440\uff01\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u662f\u7a7a\u8fd8\u662f\u6ee1\u5462\uff1f\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u8ba9\u6570\u7ec4\u5b58\u6ee1\uff0c\u56e0\u6b64\u5f53\uff1a <code>(rear+1)%length == first</code>\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8ba4\u4e3a\u73af\u5f62\u961f\u5217\u6ee1\u4e86\uff08\u4f46\u4e8b\u5b9e\u4e0arear\u6307\u9488\u6240\u5728\u7684\u5730\u65b9\u5e76\u6ca1\u6709\u5b58\u6570\u636e\uff0c\u6216\u8005\u8bf4\u5b58\u7684\u662f\u5df2\u7ecf\u51fa\u961f\u7684\u6570\u636e\uff1b\u6362\u800c\u8a00\u4e4b\uff0cfirst\u5f15\u7d22\u6240\u5728\u7684\u4f4d\u7f6e\u6709\u6570\u636e\uff0c\u800crear\u5f15\u7d22\u6240\u5728\u7684\u4f4d\u7f6e\u6ca1\u6709\u6570\u636e\uff0c\u800c\u662frear\u7684\u524d\u9762\u4e00\u4e2a\u5730\u65b9\u6709\u6570\u636e\uff01\uff09\uff0c\u800c<code>first == rear</code>\u7684\u65f6\u5019\u73af\u5f62\u961f\u5217\u5c31\u662f\u7a7a\u7684\u3002</p> <p>\u961f\u5217\u7684\u5b9e\u73b0\u53ef\u4ee5\u4f9d\u9760\u6570\u7ec4\uff1a</p> <pre><code>// queue.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass Queue{\npublic:\n    Queue(int size = 10)\n    : cap_(size)\n    , front_(0)\n    , rear_(0)\n    , size_(0){\n        pQue_ = new int[cap_];\n    }\n    ~Queue(){\n        delete[] pQue_;\n        pQue_ = nullptr;\n    }\n\npublic:\n    void push(int val){\n        if ((rear_ + 1) % cap_ == front_){\n            expand(2 * cap_);\n        }\n        pQue_[rear_] = val;\n        rear_ = (rear_ + 1) % cap_;\n        size_++;\n    }\n\n    void pop(){\n        if (front_ == rear_){\n            throw \"The Queue is empty!\";\n        }\n        front_ = (front_ + 1) % cap_;\n        size_--;\n    }\n\n    int front() const{\n        if (front_ == rear_){\n            throw \"The Queue is empty!\";\n        }\n        return pQue_[front_];\n    }\n\n    int back() const{\n        if (front_ == rear_){\n            throw \"The Queue is empty!\";\n        }\n        return pQue_[(rear_ - 1 + cap_) % cap_];\n        // \u4e0a\u9762\u8fd9\u4e2a\u5f0f\u5b50\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u5305\u62ecrear\u4e3a0\u7684\u60c5\u51b5\n    }\n\n    bool empty() const{\n        return front_ == rear_;\n    }\n\n    int size() const{\n        return size_;\n    }\nprivate:\n    void expand(int size){\n        int* p = new int[size];\n        int i = 0;\n        int j = front_;\n        for (;j != rear_; i++,j = (j+1) % cap_){\n            p[i] = pQue_[j];\n        }\n        delete[] pQue_;\n        pQue_ = p;\n        cap_ = size_;\n        front_ = 0;\n        rear_ = i;\n    }\nprivate:\n    int* pQue_;\n    int cap_; // \u7a7a\u95f4\u5bb9\u91cf\n    int front_; // \u961f\u5934\n    int rear_; //\u961f\u5c3e\n    int size_;\n};\n\nint main(){\n    int arr[] = {11, 45, 14, 19, 19, 8, 1, 0};\n    Queue que;\n    for (int v : arr){\n        que.push(v);\n    }\n    cout &lt;&lt; que.front() &lt;&lt; endl;\n    cout &lt;&lt; que.back() &lt;&lt; endl;\n    que.push(100);\n    que.push(200);\n    que.push(300);\n    cout &lt;&lt; que.front() &lt;&lt; endl;\n    cout &lt;&lt; que.back() &lt;&lt; endl;\n    while (!que.empty()){\n        cout &lt;&lt; que.front() &lt;&lt; \" \" &lt;&lt; que.back() &lt;&lt; endl;\n        que.pop();\n    }\n}\n</code></pre> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f9d\u9760\u94fe\u8868\u3002\u8fd9\u6837\u73af\u5f62\u7684\u590d\u6742\u7ed3\u6784\u5c31\u53ef\u4ee5\u5229\u7528\u53cc\u5411\u5faa\u73af\u94fe\u8868\u8868\u793a\u4e86\uff1a</p> <pre><code>// linkqueue.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass LinkQueue{\npublic:\n    LinkQueue(){\n        head_ = new Node();\n        head_-&gt;next_ = head_;\n        head_-&gt;pre_ = head_;\n    }\n\n    ~LinkQueue(){\n        Node* p = head_-&gt;next_;\n        while (p != head_){\n            head_-&gt;next_ = p-&gt;next_;\n            p-&gt;next_-&gt;pre_ = head_;\n            delete p;\n            p = head_-&gt;next_;\n        }\n        delete head_;\n        head_ = nullptr;\n    }\n\npublic:\n    void push(int val){\n        Node* p = head_-&gt;pre_;\n        Node* node = new Node(val);\n        node-&gt;next_ = head_;\n        node-&gt;pre_ = p;\n        head_-&gt;pre_-&gt;next_ = node;\n        head_-&gt;pre_ = node;\n    }\n\n    void pop(){\n        if (head_-&gt;next_ == head_){\n            throw \"queue is empty!\";\n        }\n        Node* p = head_-&gt;next_;\n        head_-&gt;next_ = p-&gt;next_;\n        p-&gt;next_-&gt;pre_ = head_;\n        delete p;\n    }\n\n    int front() const{\n        if (head_-&gt;next_ == head_){\n            throw \"queue is empty!\";\n        }\n        return head_-&gt;next_-&gt;data_;\n    }\n\n    int back() const{\n        if (head_-&gt;next_ == head_){\n            throw \"queue is empty!\";\n        }\n        return head_-&gt;pre_-&gt;data_;\n    }\n\n    bool empty() const{\n        return head_-&gt;next_ == head_;\n    }\nprivate:\n    struct  Node{\n        Node(int data = 0) \n        : data_(data)\n        , next_(nullptr)\n        , pre_(nullptr)\n        {}\n        int data_;\n        Node* next_;\n        Node* pre_;\n    };\n    Node* head_;\n};\n\nint main(){\n    int arr[] = {11, 45, 14, 19, 19, 8, 1, 0};\n    LinkQueue que;\n    for (int v : arr){\n        que.push(v);\n    }\n    cout &lt;&lt; que.front() &lt;&lt; endl;\n    cout &lt;&lt; que.back() &lt;&lt; endl;\n    que.push(100);\n    que.push(200);\n    que.push(300);\n    cout &lt;&lt; que.front() &lt;&lt; endl;\n    cout &lt;&lt; que.back() &lt;&lt; endl;\n    while (!que.empty()){\n        cout &lt;&lt; que.front() &lt;&lt; \" \" &lt;&lt; que.back() &lt;&lt; endl;\n        que.pop();\n    }\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#stl_1","title":"STL\u5b9e\u73b0","text":"<p>queue\u5934\u6587\u4ef6\u4e2d\u7684STL\u6240\u652f\u6301\u7684\u51fd\u6570\uff1apush(), pop()(\u6ca1\u6709\u8fd4\u56de\u503c), front()(\u4e13\u95e8\u8fd4\u56de\u961f\u9996\u503c)\u3002\u6ce8\u610f\uff0c\u6ca1\u6709\u4e13\u95e8\u63d0\u4f9b\u961f\u5c3e\u5143\u7d20\u7684\u51fd\u6570\uff0c\u56e0\u4e3a\u961f\u5217\u662fFIFO\uff08first-in, first-out\uff09\uff0c\u6ca1\u6709\u8bbf\u95ee\u961f\u5c3e\u5143\u7d20\u7684\u63a5\u53e3\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nint main()\n{\n    queue&lt;int&gt; iqueue;\n\n    iqueue.push(13);\n    iqueue.push(42);\n    cout &lt;&lt; \"Head: \" &lt;&lt; iqueue.front() &lt;&lt; endl;\n    iqueue.pop(); // no return value\n    cout &lt;&lt; \"Head: \" &lt;&lt; iqueue.front() &lt;&lt; endl;\n    cout &lt;&lt; \"Size: \" &lt;&lt; iqueue.size() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_34","title":"\u54c8\u5e0c\u8868","text":""},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#overview","title":"Overview","text":"<p>\u54c8\u5e0c\u8868\u53c8\u79f0\u6563\u5217\u8868\uff0c\u4e00\u79cd\u4ee5\u300ckey-value\u300d\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u3002\u6240\u8c13\u4ee5\u300ckey-value\u300d\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u662f\u6307\u4efb\u610f\u7684\u952e\u503c key \u90fd\u552f\u4e00\u5bf9\u5e94\u5230\u5185\u5b58\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u3002\u53ea\u9700\u8981\u8f93\u5165\u67e5\u627e\u7684\u952e\u503c\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u627e\u5230\u5176\u5bf9\u5e94\u7684 value\u3002\u53ef\u4ee5\u628a\u54c8\u5e0c\u8868\u7406\u89e3\u4e3a\u4e00\u79cd\u9ad8\u7ea7\u7684\u6570\u7ec4\uff0c\u8fd9\u79cd\u6570\u7ec4\u7684\u4e0b\u6807\u53ef\u4ee5\u662f\u5f88\u5927\u7684\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u5b57\u7b26\u4e32\u751a\u81f3\u7ed3\u6784\u4f53\u3002</p> <p>reference: https://oi.wiki/ds/hash/</p> <p>\u6211\u4eec\u5f88\u5e0c\u671b\uff1aStore data so that all operations are \\(\\Theta\\)(1) time, and the memory requirement should be \\(\\Theta\\)(n). \u4e3e\u4e00\u4e2a\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50\u3002\u5047\u8bbe\u4e00\u4e2a\u73ed100\u4e2a\u4eba\uff0c\u90a3\u4e48\u5982\u4f55\u5b58\u50a8100\u4e2a\u4eba\u7684\u6210\u7ee9\u5462\uff1f\u5047\u8bbe\u6bcf\u4e00\u4e2a\u5b66\u751f\u90fd\u6709\u4e00\u4e2a8\u4f4d\u5b66\u53f7\uff0c\u5982\u679c\u5e0c\u671b\u5b9e\u73b0\u201c\u5f15\u7d22\u2014\u2014\u5b66\u751f\u201d\u4e00\u4e00\u5bf9\u5e94\uff0c\u96be\u9053\u6211\u9700\u8981\u521b\u5efa\u4e00\u4e2a\\(10^8\\)\u7684\u6570\u7ec4\u5417\uff1f \u5176\u5b9e\u4e0d\u5fc5\u3002\u540e\u6765\u53d1\u73b0\uff0c\u7edd\u5927\u90e8\u5206\u7684\u4eba\u6700\u540e\u4e09\u4f4d\u4e0d\u4e00\u6837\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\uff1a\\(f(number) = number[:-3]\\)\uff0c\u90a3\u4e48\u521b\u5efa\u7684\u6570\u7ec4\u53ea\u9700\u8981\\(10^3\\)\u4e2a\u4f4d\u7f6e\u4e86\u3002\u90a3\u4e48\u95ee\u9898\u5728\u4e8e\uff1a\u4e07\u4e00\u6709\u4e24\u4e2a\u5b66\u751f\u6700\u540e\u4e09\u4f4d\u76f8\u540c\u5462\uff1f\u5176\u5b9e\u5f53\u7136\u6709\u53ef\u80fd\uff0c\u4f46\u662f\u6982\u7387\u5f88\u4f4e\u3002</p> <p>\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff1aThe process of mapping an object or a number onto an integer in a given range is called hashing\uff0c\u5bf9\u5e94\u7684\u5c31\u662f\u201c\u901a\u8fc7\u5b66\u751f\u7684\u5b66\u53f7\u5f97\u5230\u4e00\u4e2a\u4e09\u4f4d\u6570\u5b57\u201d\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e5f\u79f0\u4e3a\u54c8\u5e0c\u51fd\u6570\uff1b\u540c\u65f6\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\uff1amultiple objects may hash to the same value\uff0c\u8fd9\u5bf9\u5e94\u7684\u5c31\u662f\u4e24\u4e2a\u5b66\u751f\u6700\u540e\u7684\u4e09\u4f4d\u6570\u76f8\u540c\uff0c\u8fd9\u79cd\u73b0\u8c61\u5c31\u662f\u54c8\u5e0c\u51b2\u7a81\uff08collision\uff09\u3002\u540e\u9762\u4e5f\u4f1a\u4ecb\u7ecd\u5230\uff1a  Hash tables use a hash function together with a mechanism for dealing with collisions.</p> <p>\u5bf9\u4e8e\u4e00\u4e2ahash process\u6765\u8bf4\uff0c\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\u56fe\uff08\u5047\u8bbe\u6211\u4eec\u7684\u54c8\u5e0c\u51fd\u6570\u8bb2object\u8f6c\u5316\u4e3a\u4e8632\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\uff09\uff1a</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#hash-function","title":"Hash function","text":"<p>\u54c8\u5e0c\u7684\u5b9a\u4e49\uff1a\uff08From Merriam-Webster\uff09a restatement of something that is already known.  \u6211\u4eec\u5e0c\u671b\u54c8\u5e0c\u51fd\u6570\u6709\u4ee5\u4e0b\u7684\u6027\u8d28\uff1a</p> <ul> <li>The hash value must be deterministic\uff08It must always return the same 32-bit integer each time\uff09</li> <li>Equal objects hash to equal values</li> <li>Should be fast, like \\(\\Theta(1)\\)</li> <li>If two objects are randomly chosen, there should be only a one-in-\\(2^{32}\\) chance that they have the same hash value</li> </ul> <p>We will look at two classes of hash hunctions:</p> <ul> <li>Predetermined hash functions (explicit)</li> <li>Arithmetic hash functions (implicit)</li> </ul> <p>Predetermined hash functions\uff1a\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u7ed9\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u4e00\u4e2a\u72ec\u7279\u7684\u53f7\u7801\uff0c\u4f46\u662f\u5f53\u5f55\u5165\u4e86\u4e24\u4e2a\u76f8\u540c\u7684object\u4e4b\u540e\uff0c\u8f93\u5165\u8fd9\u4e2aobject\uff0c\u8fd4\u56de\u7684\u662f\u4e24\u4e2a\u53f7\u7801\u3002\u56e0\u6b64\uff1aThese hash values must depend on the member variables, usually this uses arithmetic functions.</p> <p>An arithmetic hash value is a deterministic function that is calculated from the relevant member variables of an object. We will look at arithmetic hash functions for strings. A string is simply an array of bytes, each byte stores a value from 0 to 255. \u56e0\u6b64\uff0c\u54c8\u5e0c\u51fd\u6570\u5fc5\u987b\u662f\u8fd9\u4e9b\u5b57\u8282\u7684\u51fd\u6570\u3002\u6253\u4e2a\u6bd4\u65b9\uff1a\u54c8\u5e0c\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5b57\u7b26\u4e32\u6240\u6709\u7684char\u7684\u5b57\u8282\u91cc\u9762\u50a8\u5b58\u7684\u6570\u5b57\u3002\u4f46\u662f\u8fd9\u79cd\u54c8\u5e0c\u51fd\u6570\u4e0d\u662f\u5f88\u597d\uff0c\u9996\u5148\u662f\uff1a\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(\\Theta(n)\\)\uff0c\u800c\u4e14\u975e\u5e38\u6709\u53ef\u80fd\u4f1a\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\uff0c\u6bd4\u5982\u8bf4\"from\" \"form\"\u4e24\u4e2a\u5355\u8bcd\u3002</p> <p>\u6362\u4e00\u79cd\u54c8\u5e0c\u51fd\u6570\uff1aLet the individual characters represent the coefficients of a polynomial in x. Use Horner\u2019s rule to evaluate this polynomial at a prime number, e.g., x=12347:</p> <pre><code>unsigned int hash( string const &amp;str ) {\n    unsigned int hash_value = 0;\n    for ( int k = 0; k &lt; str.length(); ++k ) {\n        hash_value = 12347*hash_value + str[k];\n    }\n    return hash_value;\n}\n</code></pre> <p>In general, any member variables that are used to uniquely define an object may be used as coefficients in such a polynomial.</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#mapping-to-0-m-1","title":"Mapping to [0, M-1]","text":"<p>\u4e3a\u4ec0\u4e48\u9700\u8981\u628a32bit\u6620\u5c04\u5230\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff1f\u56e0\u4e3a\u54c8\u5e0c\u8868\u5b9e\u9645\u4e0a\u662f\u6570\u7ec4\uff0c\u800c\u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u4e3aM\u7684\uff0c\u56e0\u6b64\u624d\u9700\u8981mapping\u8fd9\u4e00\u6b65\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u5185\u5b58\u8981\u6c42\u975e\u5e38\u7684\u9ad8\u3002\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff1a\u628a32bit\u7684\u6574\u6570\u6620\u5c04\u5230\u8fd9\u4e2a\u533a\u95f4\uff0c\u76f4\u63a5\u6a21M\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\u4f46\u662f\u5b9e\u5219\u4e0d\u7136\uff0c\u8ba1\u7b97\u4f59\u6570\u975e\u5e38\u7684expensive\uff1b\u4f46\u662f\u597d\u6d88\u606f\u662f\uff0c\u5982\u679c\\(M=2^m\\)\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u7b80\u5316\u8ba1\u7b97\u3002</p> <p>bitwise operators\u6709\uff1a&amp; &lt;&lt; &gt;&gt;\u3002\u5982\u4f55\u7406\u89e3\u4f4d\u8fd0\u7b97\u5982\u4f55\u8282\u7701\u8ba1\u7b97\u5f00\u652f\uff1f\u5047\u5982\u8bf4\u6211\u60f3\u8ba1\u7b977985325 % 100\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u5341\u8fdb\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\\(100=10^2\\)\uff0c\u6240\u4ee5\u8bf4\u53d6\u6700\u540e\u4e24\u4f4d\u5c31\u53ef\u4ee5\u4e86\uff0c\u5c31\u80fd\u76f4\u89c2\u770b\u51fa\u6765\u6700\u540e\u4f59\u6570\u5e94\u8be5\u662f25.</p> <p>\u56e0\u6b64\u5728\u4e8c\u8fdb\u5236\u4e2d\uff0c\u5047\u5982\u8bf4\u8ba1\u7b97\uff1a\\(100011100101_2 \\% 10000_2\\)\uff0c\u90a3\u4e48\u7531\u4e8e\u6211\u4eec\u77e5\u9053\uff1a\u4e8c\u8fdb\u5236\u4e2d\u768410000\u662f2\u7684\u56db\u6b21\u65b9\uff0c\u56e0\u6b64\u76f4\u63a5\u53d6\u6700\u540e\u56db\u4f4d\u5c31\u662f\u7ed3\u679c\uff1a0101\u3002\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u8bf4\u662f\u4e58\u4ee5\u8fd9\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662f\u539f\u6765\u8fd9\u4e2a\u6570\u5b57\u540e\u9762\u586b\u4e0a\u56db\u4f4d\u3002\u65e0\u8bba\u662f\u53d6\u51fa\u6700\u540e\u7684\u56db\u4f4d\u8fd8\u662f\u540e\u9762\u586b\u5145\u56db\u4f4d\uff0c\u5176\u5b9e\u90fd\u80fd\u901a\u8fc7\u4f4d\u8fd0\u7b97\u8fdb\u884c\u7b80\u4fbf\u7684\u8ba1\u7b97\uff1a</p> <pre><code>unsigned int hash_M( unsigned int n, unsigned int m ) {\n    return n &amp; ((1 &lt;&lt; m) \u2013 1);\n}\n</code></pre> <p></p> <p>\u4e0a\u9762\u5173\u4e8e\u4ee3\u7801\u7684\u89e3\u91ca\u6765\u81eaKimi\u3002\u4f46\u662f\u8fd9\u79cd\u54c8\u5e0c\u51fd\u6570\u4e5f\u6709\u5f0a\u7aef\uff1a\u5047\u5982\u8bf4\u54c8\u5e0c\u51fd\u6570\u8f93\u51fa\u7684\u603b\u662f\u5076\u6570\uff0c\u800c\u5076\u6570\u6a212\u7684\u591a\u5c11\u6b21\u5e42\u4e5f\u4f1a\u662f\u5076\u6570\uff0c\u56e0\u6b64\u5b83\u9650\u5236\u4e86\u6620\u5c04\u7684\u591a\u6837\u6027\uff0c\u5bfc\u81f4\u54c8\u5e0c\u78b0\u649e\u7684\u6982\u7387\u589e\u52a0\u3002</p> <p>\u56e0\u6b64\u4eba\u4eec\u53d1\u660e\u4e86multiplicative method\uff1aWe need to obfuscate the bits. \u800c\u6700\u7b80\u5355\u7684obsfucate\u5c31\u662f\u76f8\u4e58\uff1b\u5982\u679c\u5728\u81ea\u5df1\u4e58\u81ea\u5df1\u7684\u76f8\u4e58\u4e2d\uff0c\u4e2d\u95f4\u7684\u4e00\u4f4d\u6570\u5b57\u6240\u80fd\u9020\u6210\u7684\u5f71\u54cd\u4f1a\u653e\u5927\u3002\u56e0\u6b64\u4e58\u4ee5\u4e00\u4e2a\u6574\u6570\u5e38\u6570\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9009\u62e9:</p> <pre><code>// Take the middle m bits of Cn:\nunsigned int const C = 581869333;  // some number\nshift = 11; // some number\nunsigned int hash_M( unsigned int n, unsigned int m ) {\n    unsigned int shift = (32 \u2013 m)/2;\n    return ((C*n) &gt;&gt; shift) &amp; ((1 &lt;&lt; m) \u2013 1);\n}\n</code></pre> <p>\u5728shift = 11, m = 10, n = 42\u7684\u60c5\u51b5\u4e0b\uff0c\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p>\\((C*n) &gt;&gt; shift\\)\u8fc7\u7a0b\uff1a</p> <p></p> <p>\\((1 &lt;&lt; m) \u2013 1\\)\u8fc7\u7a0b\uff1a</p> <p></p> <p>\\((C*n) &gt;&gt; shift) \\&amp; ((1 &lt;&lt; m) \u2013 1\\)\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u7ed3\u679c\u793a\u610f\u56fe\uff1a</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#dealing-with-collisions","title":"Dealing with collisions","text":"<p>\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u5904\u7406\u54c8\u5e0c\u51b2\u7a81\u7684\u65b9\u6cd5\uff1aChained hash tables and Open addressing.</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#chained-hash-tables","title":"Chained hash tables","text":"<p>\u4e5f\u88ab\u79f0\u4e3a\u62c9\u94fe\u6cd5\uff0copen hashing\u3002\u62c9\u94fe\u6cd5\u662f\u5728\u6bcf\u4e2a\u5b58\u653e\u6570\u636e\u7684\u5730\u65b9\u5f00\u4e00\u4e2a\u94fe\u8868\uff0c\u5982\u679c\u6709\u591a\u4e2a\u952e\u503c\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u53ea\u7528\u628a\u4ed6\u4eec\u90fd\u653e\u5230\u90a3\u4e2a\u4f4d\u7f6e\u7684\u94fe\u8868\u91cc\u5c31\u884c\u4e86\u3002\u67e5\u8be2\u7684\u65f6\u5019\u9700\u8981\u628a\u5bf9\u5e94\u4f4d\u7f6e\u7684\u94fe\u8868\u6574\u4e2a\u626b\u4e00\u904d\uff0c\u5bf9\u5176\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u6bd4\u8f83\u5176\u952e\u503c\u4e0e\u67e5\u8be2\u7684\u952e\u503c\u662f\u5426\u4e00\u81f4\u3002\u5982\u679c\u7d22\u5f15\u7684\u8303\u56f4\u662f \uff0c\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u4e3a \uff0c\u90a3\u4e48\u4e00\u6b21\u63d2\u5165/\u67e5\u8be2\u9700\u8981\u8fdb\u884c\u671f\u671b\\(O(\\frac{N}{M})\\)\u6b21\u6bd4\u8f83\u3002</p> <p>Reference: oi.wiki</p> <p>\u5176\u4e2d\uff0c\\(\\lambda = \\frac{N}{M}\\)\u5b9a\u4e49\u4e3aload factor\u3002Load Factor is to describe the length of the linked lists and this is the average number of objects per bin\u3002\u5982\u679cload factor\u5f88\u5927\uff0c\u90a3\u4e48access times\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u589e\u5927\u5230\\(O(\\lambda)\\)\u3002\u5982\u679c\u5e0c\u671b\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e73\u8861\u4e8c\u53c9\u6811\u6765\u50a8\u5b58linked list\uff08assuming that we can order the objects\uff09\uff0c\u4f46\u662f\uff1aThe memory requirements are increased by \\(\\Theta(n)\\), as each node will require two pointers.</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#open-addressing","title":"Open addressing","text":"<p>Chained hash tables \u9700\u8981\u7279\u6b8a\u7684\u5185\u5b58\u5206\u914d\uff0c\u80fd\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u663e\u8457\u5185\u5b58\u5206\u914d\u7684\u54c8\u5e0c\u8868\u5462\uff1fWe can deal with collisions by storing collisions elsewhere by defining an implicit rule which tells us where to look next.</p> <p>\u5047\u5982\u8bf4\uff0c\u4e00\u4e2a\u7269\u4f53\u6700\u540e\u5bf9\u5e94\u7684\u6570\u5b57\u662f5\uff0c\u5982\u679c5\u5730\u65b9\u6ca1\u6709object\uff0c\u90a3\u4e48\u8fd9\u4e2aobject\u5c31\u4f1a\u50a8\u5b58\u57285\u91cc\u9762\u3002\u5982\u679c\u53c8\u4e00\u4e2a\u7269\u4f53\u5bf9\u5e94\u7684\u662f5\u5462\uff1f\u5982\u679c\u6ca1\u6709\u94fe\u8868\u7684\u8bdd\uff0c\u5b83\u5c31\u4e0d\u80fd\u50a8\u5b58\u57285\u91cc\u9762\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\uff1aWe need a rule to tells us where to look next, for example, look in the next bin to see if it is occupied.</p> <p>\u4f46\u662f\u8fd9\u4e2a\u89c4\u5219\u5fc5\u987b\u975e\u5e38\u5feb\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u53bbfollow\uff0c\u540c\u65f6should be general enough to deal with the fact that the next cell could also be occupied, e.g., continue searching until the first empty bin is found. \u5f53\u7136\uff0c\u5728\u641c\u7d22\u548c\u5220\u9664\u7684\u65f6\u5019\uff0c\u4e5f\u5fc5\u987b\u8981\u9075\u5b88\u8fd9\u4e00\u5957\u89c4\u5219\u3002</p> <p>There are numerous strategies for defining the order in which the bins should be searched\uff0c\u4f8b\u5982Linear probing\u7ebf\u6027\u63a2\u6d4b\uff0cQuadratic probing\u4e8c\u6b21\u63a2\u6d4b\uff0cDouble hashing\u53cc\u91cd\u6563\u5217\uff0c\u201cLast come, first served\u201d\uff0cCuckoo hashing. \u8fd9\u91cc\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e24\u79cd\uff1a\u7ebf\u5f62\u63a2\u6d4b\u548c\u4e8c\u6b21\u63a2\u6d4b\u3002</p> <p>Linear probing: \u5047\u5982\u8bf4inserting an object into bin k, if k is empty, we occupy it, otherwise we check k+1, k+2, and so on, until an empty bin is found(If reaching the end of the array, we start at the front of the array). \u63d2\u5165insertion\u7684\u8fc7\u7a0b\u5f88\u597d\u7406\u89e3\uff0c\u90a3\u4e48\u641c\u7d22\u7684\u65f6\u5019\u5462\uff1f\u9996\u5148\u67e5\u770bappropriate bin\uff0c\u7136\u540e\u4e0d\u65ad\u5411\u524d\u641cbin\u76f4\u5230\uff1a\u8981\u4e48item\u88ab\u627e\u5230\uff0c\u8981\u4e48\u53d1\u73b0\u4e86\u7a7abin\uff0c\u8981\u4e48\u904d\u5386\u5b8c\u4e86\u5168\u90e8\u7684\u6570\u7ec4\u3002\u5176\u4e2d\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4ee3\u8868\u8981\u67e5\u627e\u7684\u7269\u4f53\u4e0d\u5728\u6570\u7ec4\u91cc\u9762\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u4ee3\u8868\u7269\u4f53\u4e0d\u5728\u6570\u7ec4\u91cc\u9762\u4e14\u6570\u7ec4\u662f\u6ee1\u7684\u3002</p> <p>\u641c\u7d22\u4e0d\u662f\u4e00\u4ef6\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u5220\u9664erasing\u662f\u3002\u5982\u679c\u4ec5\u4ec5\u662f\u627e\u5230\u4e86item\u7136\u540e\u5220\u6389\u800c\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u7684\u8bdd\uff0c\u540e\u679c\u4f1a\u5f88\u4e25\u91cd\uff0c\u56e0\u4e3arule\u89c4\u5b9a\uff0c\u5f53\u521d\u5b58\u7269\u4f53\u7684\u65f6\u5019\u662f\u9047\u5230empty bin\u624d\u80fd\u9632\u6b62\u7269\u4f53\uff0c\u800c\u641c\u7d22\u7684\u65f6\u5019\u9047\u5230hole\u4ee3\u8868\u8fd9\u4e2a\u7269\u4f53\u4e0d\u5728\u6570\u7ec4\u91cc\u9762\u3002\u56e0\u6b64\u53ef\u89c1\uff0c\u5220\u9664\u7edd\u5bf9\u4e0d\u4ec5\u4ec5\u662f\u201c\u5220\u201d\u90a3\u4e48\u7b80\u5355\u3002</p> <p></p> <p></p> <p>\u4e0a\u9762\u4e00\u5171\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u5176\u4e2dhole\u4ee3\u8868\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7559\u4e0b\u7684\u7a7a\u4f4d\uff0cpotential candidate\u8fd9\u4e2a\u4f4d\u7f6e\u5927\u6709\u8bb2\u7a76\uff1ahole\u548ccandidate\u4e2d\u95f4\u7684bin\u91cc\u9762\u90fd\u6709\u5143\u7d20\uff0c\u800c\u4e14\u8fd9\u4e9b\u5143\u7d20\u90fdcould not have been copied into the hole\uff08i.e.\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u4e2d\u7684\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u6240\u5f15\u7d22\u51fa\u6765\u7684\u4f4d\u7f6e\u5c31\u662f\u8fd9\u4e2a\u4f4d\u7f6e\uff09\u3002\u56e0\u6b64\u6709\u4e24\u79cd\u60c5\u51b5\u5982\u4e0a\u56fe\uff1a\u7b2c\u4e00\u79cd\u662fcandidate\u662fhole\u7684\u540e\u9762\uff0c\u5982\u679c\u8fd9\u4e2acandidate index\u5bf9\u5e94\u7684\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u5728\u84dd\u52fe\u7684\u4f4d\u7f6e\u4e2d\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd9\u4e2a\u5143\u7d20\u4e4b\u6240\u4ee5\u50a8\u5b58\u5728candidate\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u662f\u56e0\u4e3a\u5728\u63d2\u5165\u7684\u65f6\u5019\uff0clinear probing\u7684\u8fc7\u7a0b\u4e2d\u7ecf\u8fc7\u4e86hole\u548chole\u540e\u9762\u7684\u4e00\u4e9b\u4e0d\u53ef\u80fd\u79fb\u52a8\u7684\u5143\u7d20\u3002\u56e0\u6b64\uff1awe move the object at index only if its hash value is either equal to or less than the hole or greater than the index of the potential candidate\u3002</p> <p>\u53cd\u4e4b\u5c31\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5982\u679ccandidate\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u662f\u5728\u84dd\u52fe\u7684\u4f4d\u7f6e\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5143\u7d20\u4e4b\u6240\u4ee5\u4f4d\u4e8ecandidate bin\u662f\u56e0\u4e3alinear probing\u4e14\u7ecf\u8fc7\u4e86hole\uff0c\u56e0\u6b64\uff1aIn this case, we move the object at index only if its hash value is both greater than the index of the potential candidate and less than or equal to the hole. </p> <p>\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6210\u529f\u79fb\u52a8\u7684\u8bdd\uff0ccandidate\u53c8\u4f1a\u5f62\u6210\u4e00\u4e2a\u65b0\u7684hole\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5224\u65ad\u4f1a\u9012\u5f52\u8fdb\u884c\u3002</p> <p>\u4e0a\u9762\u8fd9\u79cd\u5220\u9664\u7684\u65b9\u6cd5\u8c8c\u4f3c\u5f88\u597d\uff0c\u4f46\u662f\u5b9e\u8bdd\u6765\u8bf4\u8fd8\u662f\u5f88\u590d\u6742\uff0c\u80fd\u4e0d\u80fd\u7528\u4e00\u79cd\u61d2\u7684\u65b9\u6cd5\uff1f\u5047\u5982\u8bf4\u5220\u6389\u4e86\u4e00\u4e2a\u5730\u65b9\u7684\u5143\u7d20\uff0c\u7136\u540e\u6807\u8bb0\u5b83\u4e3aERASED\uff0c\u5728\u641c\u7d22\u7684\u65f6\u5019\u89c6\u5b83\u4e3aoccupied\uff0c\u63d2\u5165\u7684\u65f6\u5019\u89c6\u5b83\u4e3aunoccupied\u3002</p> <p></p> <p>\u4f46\u662f\u5728\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\u4e2d\uff0c\u6211\u5220\u9664\u4e863AD\uff0c\u7136\u540e\u5e0c\u671b\u63d2\u5165ACD\uff0c\u90a3\u4e48\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1fACD\u518d\u4e00\u6b21\u7684\u63d2\u5165\u4e86\uff01\u539f\u6765\u6ca1\u6709\u5220\u9664\u7684\u65f6\u5019\uff0c\u57283AD\u4e4b\u540elinear probing\uff0c\u53d1\u73b0\u4e86ACD\uff0c\u56e0\u6b64\u4e0d\u4f1a\u518d\u63d2\u5165\uff0c\u4f46\u662f\u5220\u9664\u4e86\u4e4b\u540e\u4f1a\u53d1\u751f\u4e0a\u8ff0\u7684\u91cd\u590d\u63d2\u5165\u7684\u98ce\u9669\u3002\uff08\u5f85\u65bd\u5de5\u3002\u3002\u3002\uff09</p> <p>Run-time analysis\uff1aIt is possible to estimate the average number of probes for a successful search, where \\(\\lambda\\) is the load factor:  The number of probes for an unsuccessful search or for an insertion is higher:  \u6211\u4eec\u7684\u76ee\u6807\u662f\u5e0c\u671b\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\\(\\Theta(1)\\)\uff0c\u4f46\u662f\u53ef\u60dc\u7684\u662f\u968f\u7740lambda\u7684\u589e\u9ad8\uff0c\u8fd0\u884c\u65f6\u95f4\u4f1a\u4e0a\u5347\u3002\u540c\u65f6\uff0c\u7ebf\u6027\u63a2\u6d4b\u6709Primary clustering\u7684\u73b0\u8c61\uff0c\u5373\u50a8\u5b58\u7684\u5143\u7d20\u8fde\u6210\u6bb5\uff0c\u5bfc\u81f4\u6bcf\u4e00\u6b21\u63d2\u5165\u90fd\u9700\u8981probe\u5f88\u591a\u5143\u7d20\u3002\u56e0\u6b64\uff1a\u53ef\u4ee5\u5c1d\u8bd5Choose a different strategy than linear probing. </p> <p>\u4e8c\u6b21\u63a2\u6d4bQuadratic probing\uff1a\u8fd9\u91cc\u7684\u201c\u4e8c\u6b21\uff0cquadratic\u201d\u7684\u610f\u601d\u5176\u5b9e\u662f\u4e8c\u6b21\u65b9\uff0c\u4ee3\u8868\u7740Probing\u7684\u6b65\u957f\u4e0d\u662f1\uff0c\u800c\u662fk\u00d7k\u3002\u4f46\u662f\u901a\u5e38\u6765\u8bf4\uff0c\u91c7\u53d6\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a</p> <pre><code>int initial = hash_M( x.hash(), M );\nfor ( int k = 0; k &lt; M; ++k ) {\n    bin = (initial + c1*k + c2*k*k) % M;\n}\n</code></pre> <p>\u66f4\u5177\u4f53\u5730\uff1a</p> <p></p> <p></p> <p>\u5728\u8fd9\u79cdprobing\u7b56\u7565\u4e0b\uff0cruntime\u7684\u8bc4\u4f30\u5982\u4e0b\uff1a </p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cclustering\u4f9d\u7136\u53ef\u80fd\u53d1\u751f\uff08Objects placed in the same bin will follow the same sequence\uff09\u3002\u4f46\u662f\u5df2\u7ecf\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u7b56\u7565\u4e86\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#linear-probe","title":"Linear Probe\u4e0b\u7684\u54c8\u5e0c\u5b9e\u73b0","text":"<p>\u4f7f\u7528<code>STATE_UNUSE; STATE_USING; STATE_DEL</code>\u4e09\u4e2a\u53c2\u6570\u6765\u4ee3\u8868bin(bucket)\u7684\u72b6\u6001\u3002</p> <p>\u589e\u52a0\uff1a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u6570\u636e\u5b58\u653e\u7684\u5730\u65b9\uff1a\u5982\u679c\u8be5\u4f4d\u7f6e\u7a7a\u95f2\uff0c\u90a3\u4e48\u76f4\u63a5\u50a8\u5b58\u5143\u7d20\uff0c\u5b8c\u6210\uff1b\u800c\u5982\u679c\u8be5\u4f4d\u7f6e\u88ab\u5360\u7528\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u627e\u7a7a\u95f2\u7684\u4f4d\u7f6e\uff0c\u5b58\u653e\u8be5\u5143\u7d20\u3002</p> <p>\u67e5\u8be2\uff1a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u6570\u636e\u5b58\u50a8\u7684\u5730\u65b9\uff0c\u4ece\u8be5\u4f4d\u7f6e\u53d6\u503c\uff0c\u5982\u679c\u662f\u5143\u7d20\u503c\u90a3\u4e48\u5c31\u67e5\u5230\u4e86\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u8bf4\u660e\u653e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u91cc\u9762\u5df2\u7ecf\u6709\u5143\u7d20\u4e86\uff0c\u53d1\u751f\u4e86\u54c8\u5e0c\u51b2\u7a81\uff0c\u56e0\u6b64\u9700\u8981\u5f80\u540e\u9762\u5bfb\u627e\u5143\u7d20\u3002</p> <p>\u5220\u9664\uff1a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u6570\u636e\u5b58\u653e\u7684\u5730\u65b9\uff0c\u4ece\u8be5\u4f4d\u7f6e\u53d6\u503c\uff0c\u5224\u65ad\u72b6\u6001STATE_USING\u3002\u5982\u679c\u662f\u8981\u5220\u9664\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u5f53\u524d\u4f4d\u7f6e\u4fee\u6539\u4e3aSTATE_DEL\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u8bf4\u660e\u4e4b\u524d\u53d1\u751f\u4e86\u54c8\u5e0c\u51b2\u7a81\uff0c\u4ece\u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u904d\u5386\uff0c\u627e\u5230\u5143\u7d20\u4fee\u6539\u72b6\u6001\uff1b\u5982\u679c\u9047\u5230\u4e86STATE_UNUSE\uff0c\u7ed3\u675f\uff01</p> <pre><code>// linear_probe_hash.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\nenum State{\n    STATE_UNUSE, // \u4ece\u672a\u4f7f\u7528\u8fc7\u7684\u6876\n    STATE_USING, // \u6b63\u5728\u4f7f\u7528\u7684\u6876\n    STATE_DEL, // \u5143\u7d20\u88ab\u5220\u9664\u4e86\u7684\u6876\n};\n\nstruct Bucket{\n    Bucket(int key = 0, State state = STATE_UNUSE)\n        : key_(key)\n        , state_(state)\n    {}\n    int key_; // \u5b58\u50a8\u7684\u6570\u636e\n    State state_; // \u6876\u5f53\u524d\u7684\u72b6\u6001\n};\n\nclass HashTable{\npublic:\n    HashTable(int size = primes_[0], double loadFactor = 0.75)\n        : useBucketNum_(0)\n        , loadFactor_(loadFactor)\n        , primeIdx_(0)\n    {\n        // \u7528\u6237\u4f20\u5165\u7684size\u8c03\u6574\u5230\u6700\u8fd1\u7684\u6bd4\u8f83\u5927\u7684\u7d20\u6570\u4e0a\n        if (size != primes_[0]){\n            for (; primeIdx_ &lt; PRIME_SIZE; primeIdx_++){\n                if (primes_[primeIdx_] &gt; size){\n                    break;\n                }\n            }\n            // \u7528\u6237\u4f20\u5165\u7684size\u503c\u8fc7\u5927,\u5df2\u7ecf\u8d85\u8fc7\u6700\u540e\u4e00\u4e2a\u7d20\u6570,\u5219\u8c03\u6574\u5230\u6700\u540e\u4e00\u4e2a\u7d20\u6570\n            if (primeIdx_ == PRIME_SIZE){\n                primeIdx_--;\n            }\n        }\n        tableSize_ = primes_[primeIdx_];\n        table_ = new Bucket[tableSize_];\n    }\n\n    ~HashTable(){\n        delete[] table_;\n        table_ = nullptr;\n    }\npublic:\n    // \u63d2\u5165\u5143\u7d20\n    bool insert(int key){\n        // \u8003\u8651\u6269\u5bb9\n        double factor = useBucketNum_*1.0 / tableSize_; \n        // \u4e24\u4e2aint\u76f8\u9664\u5f97\u5230int, \u4f46\u662f\u5176\u4e2d\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7*1.0\u53d8\u6210\u6d6e\u70b9\u6570\n        cout &lt;&lt; \"factor: \" &lt;&lt; factor &lt;&lt; endl;\n        if (factor &gt; loadFactor_){\n            // \u54c8\u5e0c\u8868\u6269\u5bb9\n            expand();\n        }\n        // \u6b64\u5904\u7684\u54c8\u5e0c\u51fd\u6570\n        int idx = key % tableSize_;\n        if (table_[idx].state_ != STATE_USING){\n            table_[idx].state_ = STATE_USING;\n            table_[idx].key_ = key;\n            useBucketNum_++;\n            return true;\n        }\n        // Linear Probe\n        for (int i = (idx+1) % tableSize_; i != idx; i = (i+1) % tableSize_){\n            if (table_[i].state_ != STATE_USING){\n                table_[i].state_ = STATE_USING;\n                table_[i].key_ = key;\n                useBucketNum_++;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // \u5220\u9664\u5143\u7d20\n    bool erase(int key){\n        int idx = key % tableSize_;\n        int i = idx;\n        do{\n            if (table_[i].state_ == STATE_USING &amp;&amp; table_[i].key_ == key){\n                table_[i].state_ = STATE_DEL;\n                useBucketNum_--;\n            }\n            i = (i + 1) % tableSize_;\n        } while(table_[i].state_ != STATE_DEL &amp;&amp; i != idx);\n        return true;\n    }\n\n    // \u67e5\u8be2 \n    bool find(int key){\n        int idx = key % tableSize_;\n        int i = idx;\n        do{\n            if (table_[i].state_ == STATE_USING &amp;&amp; table_[i].key_ == key){\n                return true;\n            }\n            i = (i + 1) % tableSize_;\n        } while(table_[i].state_ != STATE_UNUSE &amp;&amp; i != idx);\n        return false;\n    }\nprivate:\n    void expand(){\n        ++primeIdx_;\n        if (primeIdx_ == PRIME_SIZE){\n            throw \"HashTable is too large! Can not expand anymore\";\n        }\n        Bucket *newTable = new Bucket[primes_[primeIdx_]];\n        for (int i = 0; i &lt; tableSize_; i++){\n            if (table_[i].state_ == STATE_USING){\n                // \u65e7\u8868\u6709\u6548\u7684\u6570\u636e,\u91cd\u65b0\u54c8\u5e0c\u653e\u5728\u6269\u5bb9\u540e\u7684\u65b0\u8868\n                int idx = table_[i].key_ % primes_[primeIdx_];\n                int k = idx;\n                // \u653e\u8fdb\u65b0\u8868\u7684\u65f6\u5019, \u4f9d\u7136\u8981\u8003\u8651\u54c8\u5e0c\u51b2\u7a81\u7684\u95ee\u9898!\n                do{\n                    if (newTable[k].state_ != STATE_USING){\n                        newTable[k].state_ = STATE_USING;\n                        newTable[k].key_ = table_[i].key_;\n                        break;\n                    }\n                    k++;\n                } while(k != idx);\n            }\n        }\n        delete[] table_;\n        table_ = newTable;\n        tableSize_ = primes_[primeIdx_];\n    }\nprivate:\n    Bucket *table_; // \u6307\u5411\u52a8\u6001\u5f00\u8f9f\u7684\u54c8\u5e0c\u8868\n    int tableSize_; // \u54c8\u5e0c\u8868\u5f53\u524d\u7684\u957f\u5ea6\n    int useBucketNum_; // \u5df2\u7ecf\u4f7f\u7528\u7684\u6876\u7684\u4e2a\u6570\n    double loadFactor_; // \u54c8\u5e0c\u8868\u7684\u88c5\u8f7d\u56e0\u5b50\n    static const int PRIME_SIZE = 10; // \u7d20\u6570\u8868\u7684\u5927\u5c0f\n    static int primes_[PRIME_SIZE]; // \u7d20\u6570\u8868\n    int primeIdx_; // \u5f53\u524d\u4f7f\u7528\u7684\u7d20\u6570\u7684\u4e0b\u6807\n};\n\nint HashTable::primes_[HashTable::PRIME_SIZE] = {3, 7, 23, 47, 97, 251, 443, 911, 1471, 42773};\n\n\nint main(){\n    HashTable htable;\n    htable.insert(14);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n    htable.insert(32);\n    htable.insert(21);\n    htable.insert(15);\n    htable.insert(560);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n    htable.erase(14);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#linked-list","title":"Linked list \u4e0b\u7684\u54c8\u5e0c\u5b9e\u73b0","text":"<p>\u8fd9\u91cc\u5143\u7d20\u63d2\u5165\u94fe\u8868\u91c7\u7528\u7684\u662f\u5934\u63d2\u6cd5\uff1b\u6ce8\u610f\u5982\u679c\u5728class\u5185\u90e8\u8c03\u7528algorithm\u7684find\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u524d\u9762\u8981\u52a0\u4e0a::\uff0c\u4ee3\u8868\u662f\u5728\u5168\u5c40\u7684find\u65b9\u6cd5\uff0c\u800c\u4e0d\u662fclass\u5185\u90e8\u81ea\u5df1\u7684find\u65b9\u6cd5\uff1b\u4e14\u8fd9\u4e2a\u7c7b\u6ca1\u5fc5\u8981\u5199\u6790\u6784\u51fd\u6570\uff0c\u56e0\u4e3a\u91cc\u9762\u7684\u5185\u5b58\u7ba1\u7406\u90fd\u662fc++ STL\u8bbe\u8ba1\u597d\u7684\u94fe\u8868\u548c\u6570\u7ec4\uff0c\u5b83\u4eec\u4f1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u7684\u3002</p> <pre><code>// hash_linked_list.cpp\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;list&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nclass HashTable{\npublic:\n    HashTable(int size = primes_[0], double loadFactor=0.75)\n        : useBucketNum_(0)\n        , loadFactor_(loadFactor)\n        , primeIdx_(0)\n    {\n        if (size != primes_[0]){\n            for (; primeIdx_ &lt; PRIME_SIZE; primeIdx_++){\n                if (primes_[primeIdx_] &gt; size){\n                    break;\n                }\n            }\n            // \u7528\u6237\u4f20\u5165\u7684size\u503c\u8fc7\u5927,\u5df2\u7ecf\u8d85\u8fc7\u6700\u540e\u4e00\u4e2a\u7d20\u6570,\u5219\u8c03\u6574\u5230\u6700\u540e\u4e00\u4e2a\u7d20\u6570\n            if (primeIdx_ == PRIME_SIZE){\n                primeIdx_--;\n            }\n        }\n        table_.resize(primes_[primeIdx_]);\n    }\npublic:\n    // \u589e\u52a0\u5143\u7d20 \u4e14\u4e0d\u80fd\u91cd\u590d\u63d2\u5165\n    void insert(int key){\n        // \u5224\u65ad\u662f\u5426\u6269\u5bb9\n        double factor = useBucketNum_ * 1.0 / table_.size();\n        cout &lt;&lt; \"factor:\" &lt;&lt; factor &lt;&lt; endl;\n        if (factor &gt; loadFactor_){\n            expand();\n        }\n        // \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230idx\n        int idx = key % table_.size();\n        if (table_[idx].empty()){\n            useBucketNum_++;\n            table_[idx].emplace_front(key);\n        }\n        else{\n            // \u4f7f\u7528\u5168\u5c40\u7684::find\u6cdb\u578b\u7b97\u6cd5,\u800c\u4e0d\u662f\u8c03\u7528\u81ea\u5df1\u7684\u6210\u5458\u65b9\u6cd5find\n            auto it = ::find(table_[idx].begin(), table_[idx].end(), key);\n            if (it == table_[idx].end()){\n                // \u8bf4\u660e\u6ca1\u627e\u5230,\u53ef\u4ee5\u63d2\u5165\n                table_[idx].emplace_front(key);\n            } else{\n                cout &lt;&lt; \"This key has been inserted in the hash table!\" &lt;&lt; endl;\n            }\n        }\n    }\n    void erase(int key){\n        int idx = key % table_.size();\n        auto it = ::find(table_[idx].begin(), table_[idx].end(), key);\n        if (it != table_[idx].end()){\n            table_[idx].erase(it);\n            if (table_[idx].empty()){\n                useBucketNum_--;\n            }\n        }\n    }\n    bool find(int key){\n        int idx = key % table_.size();\n        auto it = ::find(table_[idx].begin(), table_[idx].end(), key);\n        return it != table_[idx].end();\n    }\nprivate:\n    void expand(){\n        if (primeIdx_ + 1 == PRIME_SIZE){\n            throw \"HashTable is too large! Can not expand anymore\";\n        }\n        primeIdx_++;\n        vector&lt;list&lt;int&gt;&gt; oldTable;\n        // swap\u4ec5\u4ec5\u662f\u53eb\u4ea4\u6362\u4e86\u4e24\u4e2a\u5bb9\u5668\u7684\u6210\u5458\u53d8\u91cf,\u56e0\u6b64\u8fd9\u91ccswap\u5176\u5b9e\u662f\u5f88\u9ad8\u6548\u7684\n        table_.swap(oldTable);\n        table_.resize(primes_[primeIdx_]);\n        for (auto list : oldTable){\n            for (auto key : list){\n                int idx = key % table_.size();\n                if (table_[idx].empty()){\n                    useBucketNum_++;\n                }\n                table_[idx].emplace_front(key);\n            }\n        }\n    }\nprivate:\n    vector&lt;list&lt;int&gt;&gt; table_; //\u54c8\u5e0c\u8868\u7684\u6570\u636e\u7ed3\u6784\n    int useBucketNum_; // \u8bb0\u5f55\u6876\u7684\u4e2a\u6570\n    double loadFactor_; // \u54c8\u5e0c\u8868\u88c5\u8f7d\u56e0\u5b50\n    static const int PRIME_SIZE = 10; // \u7d20\u6570\u8868\u7684\u5927\u5c0f\n    static int primes_[PRIME_SIZE]; // \u7d20\u6570\u8868\n    int primeIdx_; // \u5f53\u524d\u4f7f\u7528\u7684\u7d20\u6570\u7684\u4e0b\u6807\n};\n\nint HashTable::primes_[HashTable::PRIME_SIZE] = {3, 7, 23, 47, 97, 251, 443, 911, 1471, 42773};\n\nint main(){\n    HashTable htable;\n    htable.insert(14);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n    htable.insert(32);\n    htable.insert(21);\n    htable.insert(15);\n    htable.insert(560);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n    htable.erase(14);\n    cout &lt;&lt; htable.find(14) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#stl_2","title":"STL\u5b9e\u73b0","text":"<p>Reference: https://chatgpt.com</p> <p>\u5728 C++ \u4e2d\uff0c\u54c8\u5e0c\u8868\u7684 STL \u5b9e\u73b0\u662f\u901a\u8fc7 <code>unordered_map</code>\u8fd9\u4e2a\u5bb9\u5668\u7c7b\u6765\u5b9e\u73b0\u7684\u3002\u5728 C++ \u4e2d\uff0c<code>unordered_map</code> \u662f\u5e38\u7528\u7684\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\uff0c\u5c5e\u4e8e C++ \u6807\u51c6\u5e93\u4e2d\u7684\u54c8\u5e0c\u8868\u5bb9\u5668\u3002\u5b83\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\uff08<code>unordered_map</code>\uff09\u3002\u4e24\u8005\u90fd\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u56e0\u6b64\u5177\u6709 \u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\u5b83\u4eec\u7684\u521d\u59cb\u5316\u548c\u5e38\u7528\u65b9\u6cd5\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#unordered_map","title":"unordered_map","text":"<p><code>unordered_map</code> \u662f\u4e00\u4e2a\u952e\u503c\u5bf9\u7684\u54c8\u5e0c\u8868\u5bb9\u5668\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7531\u4e00\u4e2a \u952e \u548c\u4e00\u4e2a \u503c \u7ec4\u6210\u3002\u952e\u662f\u552f\u4e00\u7684\uff0c\u503c\u53ef\u4ee5\u91cd\u590d\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n// about initialization\nvoid demo_initialize() {\n    // \u521d\u59cb\u5316\u7684\u65f6\u5019\u5728template\u91cc\u9762\u58f0\u660e\u7c7b\u578b\n    // 1. \u9ed8\u8ba4\u521d\u59cb\u5316\n    std::unordered_map&lt;int, std::string&gt; map1;\n    // 2. \u5217\u8868\u521d\u59cb\u5316\n    std::unordered_map&lt;int, std::string&gt; map2 = {\n        {1, \"apple\"},\n        {2, \"banana\"},\n        {3, \"cherry\"}\n    };\n    // 3. \u62f7\u8d1d\u521d\u59cb\u5316\n    std::unordered_map&lt;int, std::string&gt; map3(map2);\n    // 4. \u4f7f\u7528\u6307\u5b9a\u7684\u54c8\u5e0c\u51fd\u6570\u548c\u6bd4\u8f83\u51fd\u6570\uff08\u81ea\u5b9a\u4e49\u51fd\u6570\u8f83\u5c11\u7528\u5230\uff09\n    std::unordered_map&lt;int, std::string&gt; map4(10 /* bucket_count */, std::hash&lt;int&gt;(), std::equal_to&lt;int&gt;());\n}\n\nint main() {\n    std::unordered_map&lt;int, std::string&gt; map = {\n        {1, \"apple\"},\n        {2, \"banana\"},\n        {3, \"cherry\"}\n    };\n\n    // \u63d2\u5165\u952e\u503c\u5bf9\n    map.insert({4, \"date\"});\n    map[5] = \"elderberry\";  // \u53e6\u4e00\u79cd\u63d2\u5165\u65b9\u5f0f\uff0c\u5982\u679c\u952e5\u5df2\u5b58\u5728\uff0c\u66f4\u65b0\u503c\n\n    // \u67e5\u627e\u5143\u7d20\uff0c\u5176\u4e2d\u4e0b\u9762\u7684\u6761\u4ef6\u5224\u65ad\u662f\u7ecf\u5178\uff01\n    if (map.find(2) != map.end()) {\n        std::cout &lt;&lt; \"Key 2 found, value: \" &lt;&lt; map[2] &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"Key 2 not found\" &lt;&lt; std::endl;\n    }\n\n    // \u8bbf\u95ee\u5143\u7d20\n    std::cout &lt;&lt; \"Key 1's value: \" &lt;&lt; map.at(1) &lt;&lt; std::endl;  // map.at() \u8bbf\u95ee\u5143\u7d20\n    std::cout &lt;&lt; \"Key 3's value: \" &lt;&lt; map[3] &lt;&lt; std::endl;     // [] \u8fd0\u7b97\u7b26\u8bbf\u95ee\n\n    // \u5220\u9664\u5143\u7d20\n    map.erase(2);  // \u6839\u636e\u952e\u5220\u9664\u5143\u7d20\n    std::cout &lt;&lt; \"After erasing key 2, map size: \" &lt;&lt; map.size() &lt;&lt; std::endl;\n\n    // \u904d\u5386 map\n    for (const auto&amp; pair : map) {\n        std::cout &lt;&lt; pair.first &lt;&lt; \": \" &lt;&lt; pair.second &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p><code>insert()</code>\uff1a\u63d2\u5165\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u63d2\u5165\u65f6\u4e0d\u4f1a\u8986\u76d6\u5df2\u6709\u952e\u7684\u503c\u3002</p> <p><code>[]</code>\uff08\u4e0b\u6807\u8fd0\u7b97\u7b26\uff09\uff1a\u65e2\u53ef\u7528\u4e8e\u8bbf\u95ee\u503c\uff0c\u4e5f\u53ef\u7528\u4e8e\u63d2\u5165\u65b0\u952e\u503c\u5bf9\u3002\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u4f1a\u9ed8\u8ba4\u63d2\u5165\u4e00\u4e2a\u503c\u521d\u59cb\u5316\u7684\u5143\u7d20\u3002</p> <p><code>find()</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u67d0\u4e2a\u952e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de <code>end()</code> \u8fed\u4ee3\u5668\u3002</p> <p><code>at()</code>\uff1a\u8bbf\u95ee\u67d0\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u952e\u4e0d\u5b58\u5728\u4f1a\u629b\u51fa\u5f02\u5e38\u3002</p> <p><code>erase()</code>\uff1a\u5220\u9664\u952e\u5bf9\u5e94\u7684\u5143\u7d20\u3002</p> <p><code>size()</code>\uff1a\u8fd4\u56de\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002</p> <p><code>empty()</code>\uff1a\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90.html#_35","title":"\u4f8b\uff1a\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6\u3002</p> <pre><code>\u8f93\u5165: s = \"abcabcbb\"\n\u8f93\u51fa: 3 \n\u89e3\u91ca: \u56e0\u4e3a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u662f \"abc\"\uff0c\u6240\u4ee5\u5176\u957f\u5ea6\u4e3a 3\u3002\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nint lengthOfLongestSubstring(string s) {\n    unordered_map&lt;char, int&gt; charIndexMap;  // \u54c8\u5e0c\u8868\uff0c\u8bb0\u5f55\u5b57\u7b26\u548c\u5b83\u4eec\u7684\u4e0b\u6807\n    int maxLength = 0;  // \u8bb0\u5f55\u6700\u957f\u5b50\u4e32\u957f\u5ea6\n    int left = 0;  // \u6ed1\u52a8\u7a97\u53e3\u7684\u5de6\u8fb9\u754c\n\n    // \u904d\u5386\u5b57\u7b26\u4e32\uff0cright \u662f\u6ed1\u52a8\u7a97\u53e3\u7684\u53f3\u8fb9\u754c\n    for (int right = 0; right &lt; s.size(); ++right) {\n        char currentChar = s[right];\n\n        // \u5982\u679c\u5f53\u524d\u5b57\u7b26\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u5e76\u4e14\u5b83\u7684\u4e0b\u6807\u5927\u4e8e\u7b49\u4e8eleft\uff0c\u66f4\u65b0left\u6307\u9488\n        if (charIndexMap.find(currentChar) != charIndexMap.end() &amp;&amp; charIndexMap[currentChar] &gt;= left) {\n            left = charIndexMap[currentChar] + 1;  // \u5de6\u8fb9\u754c\u53f3\u79fb\uff0c\u8df3\u8fc7\u91cd\u590d\u5b57\u7b26\n        }\n\n        // \u66f4\u65b0\u5f53\u524d\u5b57\u7b26\u7684\u4e0b\u6807\n        charIndexMap[currentChar] = right;\n\n        // \u8ba1\u7b97\u7a97\u53e3\u957f\u5ea6\u5e76\u66f4\u65b0\u6700\u5927\u957f\u5ea6\n        maxLength = max(maxLength, right - left + 1);\n    }\n\n    return maxLength;\n}\n</code></pre> <p>\u539f\u672c\u5728\u6ed1\u52a8\u7a97\u53e3\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u4e4b\u540e\uff0c\u53ef\u80fd\u9700\u8981\u904d\u5386\u5f53\u524d\u5b50\u4e32\u4ee5\u5224\u65ad\u65b0\u6765\u7684\u5143\u7d20\u662f\u5426\u5728\u5148\u524d\u51fa\u73b0\u8fc7\u3002\u4f46\u662f\u73b0\u5728\u80fd\u591f\u50a8\u5b58\u5373&lt;\u5b57\u7b26\uff0c\u4e0b\u6807&gt;\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u5728\u65b0\u5143\u7d20\u8fdb\u6765\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4ee5\u5b83\u4e3a\u952e\u67e5\u770b\u8fd9\u4e2a\u5143\u7d20\u662f\u5426\u51fa\u73b0\u8fc7\u5e76\u4e14\u5982\u679c\u51fa\u73b0\u8fc7\u80fd\u591f\u8fd4\u56de\u4e0a\u4e00\u4e2a\u8be5\u5b57\u7b26\u7684\u4e0b\u6807\uff0c\u65b9\u4fbf\u6ed1\u52a8\u7a97\u53e3left\u8fb9\u754c\u7684\u8c03\u6574\u3002"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html","title":"\u641c\u7d22\u4e0e\u6392\u5e8f","text":""},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#_2","title":"\u4e8c\u5206\u641c\u7d22","text":""},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#_3","title":"\u539f\u7406\u4e0e\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5e0c\u671b\u5728\u4e00\u4e2a\u6ca1\u6709\u987a\u5e8f\u7684\u6570\u7ec4\u91cc\u9762\uff0c\u5e0c\u671b\u627e\u5230val\u5143\u7d20\uff0c\u5982\u679c\u662f\u7ebf\u6027\u641c\u7d22\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f<code>O(n)</code>\u3002\u90a3\u4e48\u5982\u679c\u5728\u6709\u5e8f\u7684\u5e8f\u5217\uff08\u524d\u63d0!\uff09\u4e2d\uff0c\u80fd\u4e0d\u80fd\u66f4\u5feb\u5730\u627e\u5230\u6211\u5e0c\u671b\u7684\u5143\u7d20\u5462\uff1f\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u3002</p> <p>\u4e8c\u5206\u641c\u7d22\u4e2d\uff0c\u6709\u4e24\u4e2a\u4e0b\u6807\uff0c\u4e00\u4e2afirst\u4e00\u4e2alast\uff0c\u4e00\u5934\u4e00\u5c3e\u3002\u7136\u540e\u9996\u5148\u8ba1\u7b97\u5e8f\u5217\u4e2d\u95f4\u7684\u5143\u7d20\uff1a<code>int middle = (first + last)/2</code>\uff0c\u7136\u540e\u5224\u65ad<code>arr[middle] &lt;=&gt; val</code>\u3002\u5982\u679cval\u66f4\u5927\uff0c\u8bf4\u660e\u5728middle\u53f3\u8fb9\uff0c\u53cd\u4e4b\u5219\u5728\u5de6\u8fb9\u3002\u540c\u65f6\uff0c\u8981\u5bf9first last\u8fd9\u4e24\u4e2a\u53c2\u6570\u8fdb\u884c\u66f4\u65b0\uff0c\u628a\u53bb\u9664\u6389\u4e00\u534a\u90e8\u5206\u4e4b\u540e\u5269\u4e0b\u7684\u5e8f\u5217\u4f5c\u4e3a\u65b0\u7684\u64cd\u4f5c\u5bf9\u8c61\u3002\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u505c\u4e0b\u6765\u5462\uff1f\u5047\u5982\u8bf4val\u4e0d\u5b58\u5728\u5e8f\u5217\u91cc\u9762\uff0c\u90a3\u4e48\u6700\u540elast\u4e00\u5b9a\u4f1a\u5728first\u4e4b\u524d\u3002\u8fd9\u5c31\u662f\u5faa\u73af\u505c\u6b62\u7684\u6807\u5fd7\u3002</p> <pre><code>while (first &lt;= last){    \n    int middle = (first + last)/2;\n    if (arr[middle] &gt; val):{last = middle-1;}\n    if (arr[middle] &lt; val):{last = middle+1;}\n}\n</code></pre> <pre><code>// binarysearch.cpp\n#include &lt;iostream&gt;\nusing namespace std;\nint BinarySearch(int arr[], int size, int val){\n    int first = 0;\n    int last = size - 1;\n    while (first &lt;= last){\n        int mid = (first + last) / 2;\n        if (arr[mid] == val){\n            return mid;\n        }\n        else if (arr[mid] &gt; val){\n            last = mid - 1;\n        }\n        else {\n            first = mid + 1;\n        }\n    }\n    return -1;\n}\n</code></pre> <p>\u4e8c\u5206\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(logn)\\)\uff0c\u5bf9\u6570\u65f6\u95f4\u6bd4\u7ebf\u6027\u65f6\u95f4\u597d\u5f88\u591a\u3002\u4f46\u662f\u5982\u4f55\u4e25\u8c28\u5730\u8bf4\uff1a\u4e3a\u4ec0\u4e48\u4e8c\u5206\u641c\u7d22\u662f\u5bf9\u6570\u65f6\u95f4\uff1f\u5176\u5b9e\u4e8c\u5206\u641c\u7d22\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u4e00\u9897BST\u6811\uff08\u4e8c\u53c9\u67e5\u627e\u6811\uff09\u4eceroot\u6839\u8282\u70b9\u5f00\u59cb\u641c\u7d22\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e00\u6b21\u641c\u7d22\u53ea\u4f1a\u6cbf\u7740\u4e00\u6761\u8def\u5f84\u641c\u7d22\u4e0b\u53bb\u3002\u5728\u8fd9\u9897\u6811\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6709\u5b69\u5b50\u7684\u8282\u70b9\u6765\u8bf4\uff0c\u5982\u679c\u6709\u53f3\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5927\u4e8e\u7236\u8282\u70b9\uff1b\u5982\u679c\u6709\u5de6\u5b50\u8282\u70b9\uff0c\u5b83\u4e00\u5b9a\u5c0f\u4e8e\u7236\u8282\u70b9\u3002\u53ef\u4ee5\u8bf4\uff0c\u4e8c\u5206\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u5c42\u6570\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#_4","title":"\u4e8c\u5206\u641c\u7d22\u9012\u5f52\u5b9e\u73b0","text":"<p>\u9012\u5f52\u7684\u5f62\u5f0f\u662f\u51fd\u6570\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u3002\u5728\u4e0a\u9762\u4e2d\uff0c\u63d0\u5230\u8fc7\u201c\u628a\u53bb\u9664\u6389\u4e00\u534a\u90e8\u5206\u4e4b\u540e\u5269\u4e0b\u7684\u5e8f\u5217\u4f5c\u4e3a\u65b0\u7684\u64cd\u4f5c\u5bf9\u8c61\u201d\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u201c\u5bf9\u4e8e\u4e00\u4e2afirst \u4e0e last\u4e4b\u95f4\u7684\u6570\u7ec4\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u8981\u4e48\u66f4\u65b0first\u6216\u8005last\u4e0b\u6807\uff0c\u5bf9\u539f\u6570\u7ec4\u518d\u4e00\u6b21\u8fdb\u884c\u4e8c\u5206\uff1b\u8981\u4e48\u53d1\u73b0\u4e86val\u51fd\u6570\u201d\u8fd9\u79cd\u64cd\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\uff1b\u9012\u5f52\u7ed3\u675f\u7684\u6761\u4ef6\u662f<code>first &lt; last</code>\u3002</p> <pre><code>// binarysearch_recursion.cpp\n#include &lt;iostream&gt;\nusing namespace std;\n\nint BinarySearch(int arr[], int i, int j, int val){\n    // \u9012\u5f52\u7ed3\u675f\u7684\u6761\u4ef6\u4e00\u5b9a\u8981\u6ce8\u610f\uff01\n    if (i &gt; j){return -1;}\n    int mid = (i+j)/2;\n    if (arr[mid] == val){\n        return mid;\n    }\n    else if (arr[mid] &gt; val){\n        return BinarySearch(arr, i, mid - 1, val);\n    }\n    else{\n        return BinarySearch(arr, mid + 1, j, val);\n    }\n}\n</code></pre> <p>\u4f46\u662f\u9012\u5f52\u770b\u4f3c\u4f18\u96c5\u7f8e\u4e3d\uff0c\u7136\u800c\u5b83\u4e5f\u6709\u4e00\u4e9b\u5934\u75bc\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u90fd\u4f1a\u5728\u8c03\u7528\u6808\u4e0a\u5206\u914d\u65b0\u7684\u6808\u5e27\uff08stack frame\uff09\uff0c\u8fd9\u4f1a\u5360\u7528\u5185\u5b58\u3002\u5982\u679c\u9012\u5f52\u8fc7\u6df1\uff0c\u4f1a\u8d85\u51fa\u6808\u7684\u6700\u5927\u6df1\u5ea6\uff08Python \u9ed8\u8ba4\u9650\u5236\u4e3a 1000 \u6b21\u8c03\u7528\uff09\uff0c\u5bfc\u81f4 <code>RecursionError: maximum recursion depth exceeded in comparison</code> \u9519\u8bef\uff1a</li> <li>\u5bf9\u4e8e\u67d0\u4e9b\u9012\u5f52\u7b97\u6cd5\uff0c\u5b83\u4eec\u5229\u7528\u9012\u5f52\u7684\u65f6\u5019\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5947\u9ad8\u65e0\u6bd4\uff0c\u4f8b\u5982\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u8ba1\u7b97\uff1a\\(O(n)\\)\u3002\u4e0b\u9762\u7684\u7a0b\u5e8f\u5728n\u523050\u7684\u65f6\u5019\uff0c\u8ba1\u7b97\u4e00\u8f6e\u751a\u81f3\u9700\u8981\u957f\u8fbe10\u5206\u949f\u3002</li> </ul> <pre><code>int f(n){\n\u00a0 \u00a0 if n == 1 or 0:\n\u00a0 \u00a0 \u00a0 \u00a0 return 1;\n\u00a0 \u00a0 else:\n\u00a0 \u00a0 \u00a0 \u00a0 return f(n-1) + f(n-2);\n}\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#introduction-of-sorting","title":"Introduction of Sorting","text":"<p>In these topics, we will assume that: We are sorting integers, and Arrays are to be used for both input and output. Sorting algorithms may be performed in-place, that is, with the allocation of at most Q(1) additional memory (e.g., fixed number of local variables). Other sorting algorithms require the allocation of second array of equal size. We will prefer in-place sorting algorithms.</p> <p>The run time of the sorting algorithms we will look at fall into one of three categories: \\(\\Theta(n)\\ \\Theta(nln(n)) \\  O(n^2)\\).  (Run-time classification) We will examine average- and worst-case scenarios for each algorithm. The run-time may change significantly based on the scenario.</p> <p>About the Lower-bound Run-time of any algorithm: Any sorting algorithm must examine each entry in the array at least once. Consequently, all sorting algorithms must be \\(\\Omega(n)\\). We will not be able to achieve \\(\\Theta(n)\\) behaviour without additional assumptions. </p> <p>Five sorting techniques are illustrated as follows:</p> <p></p> <p>At the same time, The general worst-case run time is \\(\\Omega(nlg(n))\\). The proof can be presented as follows:</p> <ul> <li>Any comparison-based sorting algorithm can be represented by a comparison tree</li> <li>Worst-case running time cannot be less than the height of the tree</li> <li>How many leaves does the tree have? The number of permutations of n objects, which is n!</li> <li>What\u2019s the shallowest tree with n! leaves? A complete tree, whose height is lg(n!), and it can be shown that \\(lg(n!) = \\Theta(n lg(n))\\)</li> </ul> <p>The illustration of a comparison tree can be presented as follows: </p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#inversions","title":"Inversions","text":"<p>Given a permutation of n elements, \\(a_o, \\dots, a_{n-1}\\), an inversion is defined as a pair of entries which are reversed. That it, for \\((a_j, a_k)\\), \\(a_j &gt; a_k,if\\ j&lt;k\\).  \u53ef\u60f3\u800c\u77e5\uff0c\u5047\u5982\u8bf4\u6211\u4eec\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u53ef\u80fd\u5f15\u5165\u4e00\u4e2ainversion\uff08\u5012\u7f6e\uff09\uff0c\u6216\u8005\u8bf4\u6d88\u9664\u4e00\u4e2a\u5012\u7f6e\u3002\u5bf9\u4e8en\u4e2a\u6570\uff0c\u4e00\u5171\u6709\\(\\binom{n}{2}=\\frac{n(n-1)}{2}\\)\u4e2apair\uff0c\u800c\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u7ec4\u6210\u7684pair\u8981\u4e48\u662f\u5012\u7f6einversion\uff0c\u8981\u4e48\u662fordered pair\u3002</p> <p>\\(Theorem:\\) \u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u968f\u673a\u6392\u5217\u7684n\u4e2a\u5143\u7d20\u7684array\uff0cinversion pairs\u7684\u4e2a\u6570\u7684\u671f\u671b\u662f\\(\\frac{n(n-1)}{2}\\)\u3002\u8fd9\u4e2a\u6709\u4ec0\u4e48\u7528\u5462\uff1f \u6570\u5217\u7684inversion\u7684\u6570\u91cf\u5360pairs\u7684\u6bd4\u91cd\u53ef\u4ee5\u53cd\u6620\u4e00\u4e2a\u6570\u7ec4\u7684\u6392\u5217\u662f\u6709\u201c\u591a\u4e71\u201d\u3002\u4f8b\u5b50\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#insertion-sort","title":"Insertion Sort \u63d2\u5165\u6392\u5e8f","text":""},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#algorithm","title":"algorithm","text":"<p>In general, if we have a sorted list of k items, we can insert a new item to create a sorted list of size k + 1\u3002\u8003\u8651\u4e0b\u9762\u8fd9\u4e00\u4e2a\u6570\u7ec4\uff0c\u524d\u97625-40\u7684\u5143\u7d20\u90fd\u662f\u6309\u7167\u987a\u5e8f\u6392\u5217\u597d\u7684\uff0c\u90a3\u4e48\u6211\u5e0c\u671b\u5c06\u540e\u9762\u7684\u5143\u7d20\u4e5f\u6392\u5217\u597d\u3002\u73b0\u5728\uff0c\u5c31\u8bbe\u60f3\u6211\u5e0c\u671b\u5c06\u5143\u7d2014\u63d2\u5165\u5230\u524d\u9762\u6b63\u786e\u7684\u4f4d\u7f6e\uff1a</p> 5 7 12 19 21 26 33 40 14 9 18 21 2 <p></p> <p>14\u4ece\u524d\u9762\u6709\u5e8f\u6570\u5217\u7684\u672b\u5c3e\u5f00\u59cb\u4e00\u4e2a\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u5de6\u8fb9\u7684\u6570\u5b57\u6bd4\u5b83\u5927\uff0c\u90a3\u4e48\u5c31\u548c\u5de6\u8fb9\u7684\u5143\u7d20\u4ea4\u6362\u4f4d\u7f6e\uff0c\u4e00\u76f4\u4ea4\u6362\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u5373\u5de6\u8fb9\u7684\u6570\u5b57\u6bd4\u4ed6\u5c0f\u3002For any unsorted list\uff0cTreat the first element as a sorted list of size 1\u3002Then, given a sorted list of size k \u2013 1\uff0cinsert the k-th item into the sorted list. The sorted list is now of size k. \u5f88\u660e\u663e\uff0c\u63d2\u5165\u6392\u5e8f\u4f7f\u7528\u7684\u662f\u4e94\u5927\u6392\u5e8f\u6280\u5de7\u4e2d\u7684insertion\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#implementation","title":"Implementation","text":"<p>\u9996\u5148\u662f\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u4ea4\u6362\u5143\u7d20\u7684\u64cd\u4f5c\u5176\u5b9e\u8fd8\u591a\u4e86\u4e00\u6b65\u201c\u53f3\u8fb9\u5143\u7d20\u653e\u5728\u5de6\u8fb9\u7684\u64cd\u4f5c\u201d\uff0c\u5728\u8fde\u7eed\u4ea4\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u662f\u5197\u4f59\u7684\u3002\u56e0\u6b64\uff1awe could just temporarily assign the new entry\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#analysis","title":"Analysis","text":"<p>\u53ef\u4ee5\u8bbe\u60f3\u5230\u7684\u662f\uff1a\u5728worst-cases\u4e2d\uff0c\u5b8c\u5168\u5012\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(\\Theta(n^2)\\)\uff0c\u56e0\u4e3a\uff1athe outer for-loop will be executed a total of n \u2013 1 times and the inner for-loop is executed k times, when in the worst case\u3002</p> <p>\u5728best-case\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(\\Theta(n)\\)\uff0c\u56e0\u4e3a\u6700\u597d\u7684\u60c5\u51b5\u662f\u5b8c\u5168\u6392\u597d\u5e8f\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ea\u9700\u8981\u8fdb\u884cn\uff08\u66f4\u7ec6\u8282\u5730\uff1an-1\uff09\u6b21\u5224\u65ad\u8be5\u5143\u7d20\u548c\u5de6\u8fb9\u7684\u5143\u7d20\u6709\u591a\u5927\u3002\u8bdd\u662f\u5982\u6b64\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff1aInsertion sort, however, will run in \\(\\Theta (n)\\) time whenever d = O(n), \u5176\u4e2dd\u4ee3\u8868inversions\u7684\u6570\u91cf\u3002\u90a3\u4e48\u5728\u521a\u521a\u63cf\u8ff0\u7684\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u5b9ed\u4e5f\u662f\\(O(n)\\)\uff0c\u56e0\u4e3a\\(0 &lt;= 0*n\\)\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u5b9e\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\u56e0\u4e3an\u662f\u81f3\u5c11\u8fdb\u884c\u5224\u65ad\u7684\u6b21\u6570\uff0c\u6216\u8005\u8bf4\uff0c\u4ece\u4e00\u6b21\u5904\u7406\u9006\u5e8f\u5bf9\u7684\u64cd\u4f5c\u5f00\u59cb\u7684\u7ed3\u675f\u65f6\u523b\uff0c\u4f34\u968f\u7740\u4e00\u6b21\u5224\u65ad\u53d1\u73b0\u8fd9\u4e2a\u76ee\u6807\u5143\u7d20\u5de6\u8fb9\u7684\u5143\u7d20\u5c0f\u4e8e\u76ee\u6807\u5143\u7d20\u4ece\u800c\u505c\u6b62\u64cd\u4f5c\uff0c\u8fd9\u4e00\u6b21\u5224\u65ad\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u800c\u8fd9\u79cd\u5224\u65ad\u4e00\u5171\u6709n\u6b21\u3002\u800cd\u662f\u54ea\u91cc\u6765\u7684\u5462\uff1f\u6bcf\u4e00\u6b21\u4ea4\u6362\u5143\u7d20\u7684\u6570\u636e\u90fd\u662f\u5728\u5904\u7406\u4e00\u5bf9\u9006\u5e8f\u5bf9\uff0c\u4e0d\u4f1a\u5f15\u5165\u9006\u5e8f\u5bf9\uff0c\u800c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u4e00\u6b21\u4ea4\u6362\u5143\u7d20\u6765\u8bf4\uff0c\u8981\u4e48\u6d88\u9664\u9006\u5e8f\u5bf9\uff0c\u8981\u4e48\u5f15\u5165\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u8bf4run time is \\(\\Theta(n+d)\\). \u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\uff1aInsertion sort, however, will run in \\(\\Theta (n)\\) time whenever d = O(n)</p> <p></p> <p>\u6700\u540e\uff0cMemory requirements\u662f\\(\\Theta(1)\\)\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#bubble-sort","title":"Bubble Sort","text":""},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#algorithm_1","title":"algorithm","text":"<p>Suppose we have an array of data which is unsorted: Starting at the front, traverse the array, find the largest item, and move (or bubble) it to the top. With each subsequent iteration, find the next largest item and bubble it up towards the top of the array. </p> <p>\u7b80\u5355\u800c\u8a00\uff1a\u5728\u4e00\u8f6e\u4ece\u5934\u64cd\u4f5c\u4e2d\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\u5f15\u7d22\uff08\u800c\u4e0d\u662f\u5143\u7d20\uff09\uff0c\u5982\u679c\u5f15\u7d22\u5bf9\u5e94\u7684\u5143\u7d20\u7684\u53f3\u8fb9\u5143\u7d20\u6bd4\u5f15\u7d22\u5143\u7d20\u5927\uff0c\u90a3\u4e48\u5c31\u4e0d\u52a8\uff0c\u904d\u5386\u4e0b\u4e00\u4e2a\u5f15\u7d22\uff0c\u53cd\u4e4b\u5219\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u601d\u8003\u5c31\u80fd\u53d1\u73b0\uff1a\u4e00\u8f6e\u64cd\u4f5c\u4e2d\uff0c\u603b\u662f\u80fd\u628a\u6700\u5927\u7684\u5143\u7d20\u653e\u5728\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\u90a3\u4e48\u8fdb\u5165\u7b2ci\u8f6e\u64cd\u4f5c\uff0c\u5c31\u662f\u628a\u7b2ci\u5927\u7684\u5143\u7d20\u653e\u5728\u5012\u6570\u7b2ci\u4e2a\u4f4d\u7f6e\u3002\u8fd9\u79cd\u64cd\u4f5c\u5c06\u91cd\u590dn(\u6216\u8005\u8bf4n-1)\u6b21\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#implementation_1","title":"Implementation","text":""},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#analysis_1","title":"analysis","text":"<p>Here we have two nested loops, and therefore calculating the run time is straight-forward:  \u8fd9\u4e2a\u5192\u6ce1\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u4e3a\u5224\u65ad\u7684\u6b21\u6570\u662f\u56fa\u5b9a\uff0c\u800c\u8fd9\u53c8\u662f\u56e0\u4e3a\u7b97\u6cd5\u7684\u8bbe\u8ba1\u5f88Numb\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#improvements","title":"Improvements","text":"<p>\u4e0a\u9762\u4e5f\u63d0\u5230\u4e86\uff0c\u8fd9\u79cd\u7b97\u6cd5\u7684\u6d41\u7a0b\u56fe\u5f88\u56fa\u5b9a\uff0c\u800c\u4e14\u5f88numb\u3002\u90a3\u4e48\u6211\u4eec\u80fd\u4e0d\u80fd\u5f15\u5165\u4e00\u4e9b\u4f18\u5316\u5462\uff1f\u6bd4\u5982\u8bf4\uff1areduce the number of swaps, halting if the list is sorted, limiting the range on which we must bubble,  alternating between bubbling up and sinking down\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#flagged-bubble-sort","title":"Flagged Bubble Sort","text":"<p>\u5728\u539f\u6765\u7684\u7b97\u6cd5\u4e2d\uff0c\u5047\u5982\u8bf4\u5728\u7b2ci\u8f6e\u64cd\u4f5c\u7ed3\u675f\u4e4b\u540e\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u6392\u5217\u6574\u9f50\u4e86\uff0c\u4f46\u4f9d\u7136\u9700\u8981\u8fdb\u884c\u63a5\u4e0b\u6765\u7684n-i\u8f6e\u64cd\u4f5c\u3002\u6240\u4ee5\u8bf4\u8003\u8651\uff1a\u5728\u4e00\u8f6e\u64cd\u4f5c\u4e2d\u8bb0\u5f55\u662f\u5426\u6709\u8fdb\u884c\u4ea4\u6362\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u8bf4\u660e\u5df2\u7ecf\u662f\u5b8c\u5168\u6392\u5217\u597d\u7684\u72b6\u6001\uff0c\u5c31\u4e0d\u7528\u518d\u7ee7\u7eed\u6392\u5e8f\u4e86\uff01\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4ee3\u7801\u4e2d\u7684flag\u6280\u5de7\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>    template &lt;typename Type&gt;\n    void bubble( Type *const array, int const n ) {\n        for ( int i = n - 1; i &gt; 0; --i ) {\n            Type max = array[0];\n            bool sorted = true; // FLAG!\n            for ( int j = 1; j &lt;= i; ++j ) {\n                if ( array[j] &lt; max ) {\n                    array[j - 1] = array[j];\n                    sorted = false;\n                } else {\n                    array[j \u2013 1] = max;\n                    max = array[j];\n                }\n            }\n            array[i] = max;\n            if ( sorted ) {\n                break;\n            }\n        }\n    }\n</code></pre>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#range-limiting-bubble-sort","title":"Range-Limiting Bubble Sort","text":"<p>Intuitively, one may believe that limiting the loops based on the location of the last swap may significantly speed up the algorithm. \u6bd4\u5982\u8bf4\u5728\u4e00\u8f6e\u64cd\u4f5c\u4e2d\uff0c\u6700\u540e\u4e00\u6b21\u8fdb\u884c\u4ea4\u6362\u7684\u4f4d\u7f6e\u975e\u5e38\u9760\u524d\uff0c\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\u8fd9\u8bf4\u660e\u6700\u540e\u4e00\u6b21\u4ea4\u6362\u540e\u9762\u7684\u5143\u7d20\u5176\u5b9e\u90fd\u662f\u5df2\u7ecf\u6392\u5217\u597d\u4e86\u7684\uff01\u5f88\u53ef\u60dc\u7684\u662f\uff0cin practice\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5e26\u6765\u7684\u5f71\u54cd\u5e76\u4e0d\u662f\u5f88\u5927\u3002\u867d\u7136\u4f46\u662f\uff0c\u4e0b\u9762\u662f\u5b9e\u73b0\u7684\u4ee3\u7801\uff1a</p> <pre><code>    template &lt;typename Type&gt;\n    void bubble( Type *const array, int const n ) {\n        for ( int i = n - 1; i &gt; 0; ) {\n            Type max = array[0];\n            int ii = 0;\n            for ( int j = 1; j &lt;= i; ++j ) {\n                if ( array[j] &lt; max ) {\n                array[j - 1] = array[j];\n                    ii = j - 1;\n                } else {\n                    array[j \u2013 1] = max;\n                    max = array[j];\n                }\n            }\n            array[i] = max;\n            i = ii;\n        }\n    }\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cci\u7684\u66f4\u65b0\u4e0d\u518d\u662f\u6728\u8bb7\u7684i++\u4e86\uff0c\u800c\u662f\u6839\u636e\u6700\u540e\u4e00\u6b21\u4ea4\u6362\u7684\u4f4d\u7f6e\u800c\u66f4\u65b0i\u53c2\u6570\uff0c\u4e3a\u7684\u5c31\u662f\u8df3\u8fc7\u4e0d\u5fc5\u8981\u7684epoch operation\u3002</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#alternating-bubble-sort","title":"Alternating Bubble Sort","text":"<p>One operation which does significantly improve the run time is to alternate between bubbling the largest entry to the top, ands inking the smallest entry to the bottom. </p> <p>\u4ee5\u4e0b\u662f\u4ea4\u66ff\u5192\u6ce1\u6392\u5e8f\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li>\u4ece\u6570\u7ec4\u7684\u5f00\u59cb\u5230\u7ed3\u675f\u904d\u5386\u6570\u7ec4\uff0c\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5982\u679c\u524d\u4e00\u4e2a\u5143\u7d20\u6bd4\u540e\u4e00\u4e2a\u5143\u7d20\u5927\uff08\u5347\u5e8f\u6392\u5e8f\uff09\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\u3002</li> <li>\u5b8c\u6210\u7b2c\u4e00\u8f6e\u904d\u5386\u540e\uff0c\u6700\u5927\u7684\u5143\u7d20\u4f1a\u88ab\u653e\u7f6e\u5728\u6570\u7ec4\u7684\u672b\u5c3e\u3002</li> <li>\u7136\u540e\u4ece\u6570\u7ec4\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u91cd\u590d\u6b65\u9aa41\uff0c\u76f4\u5230\u904d\u5386\u5230\u6570\u7ec4\u7684\u5f00\u59cb\u3002</li> <li>\u7ee7\u7eed\u4ea4\u66ff\u904d\u5386\u65b9\u5411\uff0c\u76f4\u5230\u6ca1\u6709\u5143\u7d20\u9700\u8981\u4ea4\u6362\uff0c\u8fd9\u610f\u5473\u7740\u6570\u7ec4\u5df2\u7ecf\u5b8c\u5168\u6709\u5e8f\u3002</li> </ol> <p>reference: kimi.moonshot.cn</p> <p>Because the bubble sort simply swaps adjacent entries, it cannot be any better than insertion sort which does n + d comparisons where d is the number of inversions</p> <p></p> <p>The following table summarizes the run-times of our modified  bubble sorting algorithms; however, they are all worse than insertion sort in practice:</p> <p>## Merge Sort</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#algorithm_2","title":"algorithm","text":"<p>The merge sort algorithm is defined recursively: If the list is of size 1, it is sorted\u2014we are done; Otherwise:</p> <ul> <li> <p>Divide an unsorted list into two sub-lists,</p> </li> <li> <p>Sort each sub-list recursively using merge sort, and</p> </li> <li> <p>Merge the two sorted sub-lists into a single sorted list</p> </li> </ul> <p>In practice: If the list size is less than a threshold, use an algorithm like insertion sort.</p> <p>This strategy is called divide-and-conquer. Merging Sort\u660e\u663e\u4f7f\u7528\u7684\u662f\u4e94\u5927\u6392\u5e8f\u6280\u5de7\u4e2d\u7684Merging\u3002\u90a3\u4e48\u5982\u4f55merging\u5462\uff1f\u5047\u8bbe\u6709\u4e24\u4e2aordered array\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u65b0array\uff0c\u7136\u540e\u7528\u4e24\u5957\u5f15\u7d22\uff1a\u54ea\u4e2aarray \u5f15\u7d22\u7684\u5143\u7d20\u66f4\u5c0f\uff0c\u90a3\u4e48\u5143\u7d20\u5c31\u653e\u8fdbarray\uff0c\u7136\u540e\u8fd9\u4e2a\u5f15\u7d22++\u3002\u5f53\u6709\u4e00\u4e2a\u6570\u7ec4\u904d\u5386\u5b8c\u4e4b\u540e\uff0c\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u5269\u4f59\u7684\u5143\u7d20\u5168\u90e8\u6309\u7167\u987a\u5e8f\u653e\u8fdb\u53bb\u3002\u5c31\u8fd9\u4e00\u70b9\u662f\u5f88\u597d\u7406\u89e3\u7684\uff0c\u4f46\u662f\u8fd9\u79cd\u64cd\u4f5c\u7684\u6838\u5fc3\u5173\u952e\u5c31\u662ftwo ordered array\u3002</p> <p>Time: we have to copy n1 + n2 elements. Hence, merging may be performed in Q(n1 + n2) time. If the arrays are approximately the same size, n = n1 \u2248 n2, we can say that the run time is Q(n). Space: we cannot merge two arrays in-place. This algorithm always required the allocation of a new array. Therefore, the memory requirements are also Q(n).</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#implementation_2","title":"Implementation","text":"<p>/</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#run-time-analysis","title":"Run-Time Analysis","text":"<p>\u90a3\u4e48\u53ef\u80fd\u4f1a\u5f88\u597d\u5947\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u662f\\(O(n^2)\\)\u3002\u6362\u800c\u8a00\u4e4b\uff1a\u662f\u4ec0\u4e48\u7279\u6b8a\u7684\u64cd\u4f5c\u5e2e\u52a9\u6211\u4eec\u51cf\u5c11\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u4e0b\u9762\u8fd9\u5f20\u56fe\u751f\u52a8\u5730\u5c55\u793a\u4e86\u539f\u56e0\uff1a</p> <p></p> <p>In practice, merge sort is faster than heap sort, though they both have the same asymptotic run times. Merge sort requires an additional array, and Heap sort does not require.</p>"},{"location":"Data_Structure_and_Algorithm/%E6%90%9C%E7%B4%A2%E4%B8%8E%E6%8E%92%E5%BA%8F.html#divide-and-conquer","title":"Divide and Conquer\uff08\u5206\u6cbb\uff09","text":"<p>Reference: kimi.moonshot.cn</p> <p>\u5206\u6cbb\uff08Divide and Conquer\uff09\u601d\u60f3\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684\u7b56\u7565\uff0c\u5b83\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u89e3\uff08Divide\uff09\u6210\u82e5\u5e72\u4e2a\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u9012\u5f52\u5730\u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898\uff08Conquer\uff09\uff0c\u7136\u540e\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\uff08Combine\uff09\u8d77\u6765\u4ee5\u89e3\u51b3\u539f\u59cb\u95ee\u9898\u3002\u5206\u6cbb\u6cd5\u662f\u7b97\u6cd5\u8bbe\u8ba1\u4e2d\u7684\u4e00\u79cd\u91cd\u8981\u65b9\u6cd5\uff0c\u5c24\u5176\u5728\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u6216\u590d\u6742\u8ba1\u7b97\u65f6\u975e\u5e38\u6709\u6548\u3002</p> <p>\u5206\u6cbb\u601d\u60f3\u7684\u57fa\u672c\u6b65\u9aa4\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>\u5206\u89e3\uff08Divide\uff09\uff1a</li> <li>\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u76f8\u540c\u95ee\u9898\u3002\u5206\u89e3\u7684\u76ee\u7684\u662f\u7b80\u5316\u95ee\u9898\uff0c\u4f7f\u5176\u66f4\u5bb9\u6613\u89e3\u51b3\u3002\u5206\u89e3\u7684\u7c92\u5ea6\u53d6\u51b3\u4e8e\u95ee\u9898\u7684\u6027\u8d28\u548c\u89e3\u51b3\u7b56\u7565\u3002</li> <li>\u89e3\u51b3\uff08Conquer\uff09\uff1a</li> <li>\u5206\u522b\u89e3\u51b3\u8fd9\u4e9b\u5206\u89e3\u51fa\u6765\u7684\u5b50\u95ee\u9898\u3002\u5982\u679c\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u89e3\u51b3\uff1b\u5982\u679c\u5b50\u95ee\u9898\u4ecd\u7136\u590d\u6742\uff0c\u5219\u53ef\u4ee5\u9012\u5f52\u5730\u5e94\u7528\u5206\u6cbb\u7b56\u7565\u3002</li> <li>\u5408\u5e76\uff08Combine\uff09\uff1a</li> <li>\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\uff0c\u6784\u5efa\u51fa\u539f\u95ee\u9898\u7684\u89e3\u3002\u5408\u5e76\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u5b50\u95ee\u9898\u89e3\u51b3\u7684\u590d\u6742\u5ea6\u8981\u4f4e\uff0c\u8fd9\u662f\u5206\u6cbb\u6cd5\u6709\u6548\u6027\u7684\u5173\u952e\u3002</li> </ol> <p>\u5206\u6cbb\u6cd5\u5728\u7b97\u6cd5\u8bbe\u8ba1\u4e2d\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5178\u578b\u7684\u5206\u6cbb\u7b97\u6cd5\u793a\u4f8b\uff1a</p> <ul> <li>\u5f52\u5e76\u6392\u5e8f\uff08Merge Sort\uff09\uff1a</li> <li>\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u534a\uff0c\u9012\u5f52\u5730\u5bf9\u6bcf\u4e00\u534a\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u6392\u5e8f\u597d\u7684\u4e24\u534a\u5408\u5e76\u3002</li> <li>\u5feb\u901f\u6392\u5e8f\uff08Quick Sort\uff09\uff1a</li> <li>\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5305\u542b\u6240\u6709\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\uff0c\u53e6\u4e00\u90e8\u5206\u5305\u542b\u6240\u6709\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\uff0c\u7136\u540e\u9012\u5f52\u5730\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u3002</li> <li>\u4e8c\u5206\u641c\u7d22\uff08Binary Search\uff09\uff1a</li> <li>\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\uff0c\u901a\u8fc7\u6bcf\u6b21\u6bd4\u8f83\u4e2d\u95f4\u5143\u7d20\u5c06\u641c\u7d22\u8303\u56f4\u7f29\u5c0f\u4e00\u534a\u3002</li> </ul> <p>\u5206\u6cbb\u6cd5\u7684\u4f18\u70b9\u5728\u4e8e\u5b83\u80fd\u591f\u5c06\u590d\u6742\u95ee\u9898\u7b80\u5316\uff0c\u4f7f\u5f97\u95ee\u9898\u66f4\u5bb9\u6613\u89e3\u51b3\uff0c\u5e76\u4e14\u53ef\u4ee5\u5229\u7528\u5b50\u95ee\u9898\u7684\u89e3\u6765\u6784\u5efa\u539f\u95ee\u9898\u7684\u89e3\u3002\u7136\u800c\uff0c\u5206\u6cbb\u6cd5\u4e5f\u6709\u5176\u5c40\u9650\u6027\uff0c\u6bd4\u5982\u9012\u5f52\u53ef\u80fd\u5bfc\u81f4\u6808\u6ea2\u51fa\uff0c\u5408\u5e76\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u7b49\u3002\u56e0\u6b64\uff0c\u5728\u5e94\u7528\u5206\u6cbb\u6cd5\u65f6\uff0c\u9700\u8981\u4ed4\u7ec6\u5206\u6790\u95ee\u9898\u7684\u6027\u8d28\u548c\u7b97\u6cd5\u7684\u6548\u7387\u3002</p>"},{"location":"GAMES101/note.html","title":"GAMES101 Note","text":""},{"location":"GAMES101/note.html#overview-of-computer-graphics","title":"Overview of Computer Graphics","text":"<p>Computer Graphic\uff0c\u7b80\u79f0CG\uff0c\u5b83\u7684\u5b9a\u4e49\u662f\uff1aThe use of computers to synthesize and manipulate visual information\u3002\u201c\u5408\u6210\u4e0e\u64cd\u7eb5\u201d\u3002</p> <p>\u73b0\u5728\u5f88\u591a\u6e38\u620f\u90fd\u5229\u7528CG\u6280\u672f\uff0c\u90a3\u4e48\u5982\u4f55\u8bc4\u4ef7\u753b\u9762\u7684\u597d\u574f\u5462\uff1f\u4e00\u79cd\u7b80\u5355\u7684\u65ad\u8a00\uff1a\u770b\u753b\u9762\u591f\u4e0d\u591f\u4eae\u3002\u56e0\u4e3a\u8fd9\u6d89\u53ca\u5230CG\u7684\u5168\u5c40\u5149\u7167\u6982\u5ff5\uff0c\u56e0\u6b64\u5c06\u5149\u7167\u662f\u5426\u5145\u8db3\u4f5c\u4e3a\u8bc4\u4ef7\u6807\u51c6\u662f\u53ef\u4ee5\u7684\u3002</p> <p>\u4ee5\u53ca\uff0c\u4e0d\u540c\u7684\u6e38\u620f\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u753b\u8d28\uff0c\u4f8b\u5982\u6709\u7684\u662f\u5361\u901a\u753b\u8d28\uff0c\u6709\u7684\u662f\u66f4\u8d34\u5207\u663e\u793a\u7684\u753b\u8d28\uff0c\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u4e0d\u540c\u7684\u753b\u8d28\u5462\uff1f\u8fd9\u4e9b\u4e5f\u90fd\u9700\u8981\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u6765\u89e3\u51b3\u3002\u9664\u5f00\u6e38\u620f\uff0c\u7535\u5f71\u91cc\u9762\u4e5f\u5e7f\u6cdb\u5e94\u7528CG\uff0c\u5982\u7279\u6548\uff08special effect)\uff0c\u4eba\u7269\u9762\u90e8\u6355\u6349\uff08\u963f\u51e1\u8fbe\uff09\u7b49\u3002\u9664\u4e86\u7535\u5f71\u6e38\u620f\uff0c\u5f88\u591a\u5176\u4ed6\u9886\u57df\u4e5f\u5e94\u7528CG\uff0c\u4f8b\u5982Computer-Aided Design\uff08\u5982\u6570\u5b57\u5b6a\u751f photo-&gt;CG\uff09\uff0c\u52a8\u753b\uff08animation\uff09\uff0c\u53ef\u89c6\u5316\uff08Visualization for Science, engineering, medicine, and journalism, etc)\uff0c\u865a\u62df\u73b0\u5b9e\uff08Virtual Reality\uff09\u7b49\u3002</p> <p>\u56fe\u5f62\u5b66\u5177\u4f53\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9\u5462\uff1f</p> <ul> <li>Math of (perspective) projections, curves, surfaces</li> <li>Physics of lighting and shading</li> <li>Representing / operating shapes in 3D </li> <li>Animation / simulation</li> </ul> <p>\u8bfe\u7a0b\u4e3b\u8981\u5305\u62ec\u56db\u4e2a\u65b9\u9762\u5185\u5bb9\uff1a</p> <ul> <li>Rasterization \uff08\u5149\u6805\u5316\uff09</li> <li>Curves and Meshes \uff08\u66f2\u7ebf\u548c\u66f2\u9762\uff09</li> <li>Ray Tracing \uff08\u5149\u7ebf\u8ffd\u8e2a\uff09</li> <li>Animation / Simulation \uff08\u52a8\u753b\u4e0e\u6a21\u62df\uff09</li> </ul> <p>\u4ec0\u4e48\u662f\u5149\u6805\u5316\uff1f\u628a\u7a7a\u95f4\u4e2d\u7684\u4e09\u7ef4\u5f62\u4f53\u6295\u5c04\u5230\u5c4f\u5e55\u4e0a\uff0c\u5c31\u662f\u5149\u6805\u5316\uff1aProject geometry primitives (3D triangles / polygons) onto the screen\u3002\u8fd9\u662f\u5b9e\u65f6\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u5e94\u7528\u3002CG\u4e2d\u5b9a\u4e49\u5230\uff1a\u4e00\u79d2\u949f\u80fd\u751f\u621030\u5f20\u753b\u9762\uff0830 frames per second\uff09\u5c31\u8ba4\u4e3a\u662f\u5b9e\u65f6\uff0c\u5426\u5219\u5c31\u662f\u79bb\u7ebf\uff08off-line\uff09\u3002</p> <p>\u800c\u5728\u66f2\u7ebf\u548c\u66f2\u9762\u4e2d\uff0c\u5c06\u4e86\u89e3\u5982\u4f55\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u8868\u793a\u51e0\u4f55\uff1aHow to present geometry in Computer Graphics\u3002\u4f8b\u5982\u7a7a\u95f4\u4e2d\u5982\u4f55\u8868\u793a\u8f83\u4e3a\u5149\u6ed1\u7684\u66f2\u9762\uff1f\u5982\u4f55\u7528\u7b80\u5355\u7684\u9762\u7247\u53bb\u7ec6\u7c92\u5ea6\u5730\u62df\u5408\u8f83\u4e3a\u5149\u6ed1\u7684\u66f2\u9762\uff1f\u5f53\u7269\u4f53\u6539\u53d8\u65f6\uff0c\u66f2\u9762\u5e94\u8be5\u5982\u4f55\u6539\u53d8\uff1f\u7269\u4f53\u6539\u53d8\u65f6\uff0c\u5982\u4f55\u4fdd\u6301\u539f\u6709\u7684\u62d3\u6251\u7ed3\u6784\uff1f</p> <p>\u5149\u7ebf\u8ffd\u8e2a\u88ab\u7535\u5f71\u5e7f\u6cdb\u4f7f\u7528\uff0c\u7528\u6765\u751f\u6210\u66f4\u9ad8\u8d28\u91cf\u7684\u753b\u9762\u3002CG\u4e2d\u4e5f\u6709\u4e00\u79cdtrade-off: \u751f\u6210\u901f\u5ea6\u5feb or \u751f\u6210\u8d28\u91cf\u9ad8\uff1f\u90a3\u4e48\u5149\u7ebf\u8ffd\u8e2a\u5c31\u662f\u9009\u62e9\u4e86\u8d28\u91cf\u9ad8\uff0c\u4f46\u662f\u751f\u6210\u65f6\u95f4\u5f88\u957f\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4e24\u5168\u5176\u7f8e\u7684\u65b9\u6cd5\u5462\uff1f\u6700\u8fd1\u6709\u201c\u5b9e\u65f6\u5149\u7ebf\u8ffd\u8e2a\u201d\u6280\u672f\u3002</p> <p>\u52a8\u753b\u4e0e\u6a21\u62df\u52aa\u529b\u5c06\u753b\u9762\u4e2d\u7269\u4f53\u7684\u79fb\u52a8\u3001\u53d8\u5316\u7b49\u5c3d\u53ef\u80fd\u5730\u8d34\u5207\u73b0\u5b9e\u751f\u6d3b\u3002\u4f8b\u5982rubber ball\u7684\u5f39\u8df3\uff0c\u60ac\u6302\u6bdb\u5dfe\u7684\u4e0b\u5782\u7b49\u7b49\u3002</p> <p>GAMES101\u4e0d\u63d0\u5230\u7684\uff1a</p> <ul> <li>Using OpenGL / DirectX / Vulkan</li> <li>The syntax of Shaders</li> <li>We learn CG,  not Graphics APIs</li> <li>3D modeling using Maya / 3DS MAX / Blender, or Unity / Unreal Engine</li> <li>CV</li> </ul> <p>\u90a3\u4e48\u5982\u4f55\u7406\u89e3CV\u548cCG\u7684\u533a\u522b\uff1f</p> <p></p> <p>\u5f53\u7136\uff0c\u73b0\u5728\u4e24\u8005\u7684\u8fb9\u754c\u539f\u6765\u8d8a\u6a21\u7cca\u3002\u81ea\u4eceNeRF(Neural Radiance Field\uff0c\u795e\u7ecf\u8f90\u5c04\u573a)\u7684\u8bde\u751f\uff0cModel and Image\u7684\u4ea4\u878d\u7814\u7a76\u8d8a\u6765\u8d8a\u591a\u3002</p> <p>\u8bfe\u7a0b\u4f7f\u7528\u8bed\u8a00\uff1a C++</p>"},{"location":"GAMES101/note.html#review-of-linear-algebra","title":"Review of Linear Algebra","text":"<p>CG\u5176\u5b9e\u4ea4\u53c9\u4e86\u5f88\u591a\u7684\u5b66\u79d1\uff1a\u6570\u5b66\u4e2d\u6d89\u53ca\u5230\u7ebf\u6027\u4ee3\u6570\uff0c\u5fae\u79ef\u5206\u548c\u6982\u7387\u7edf\u8ba1\uff1b\u7269\u7406\u5b66\u4e2d\u6d89\u53ca\u5230\u5149\u5b66\u548c\u8fd0\u52a8\u5b66\uff1b\u4ee5\u53ca\u5176\u5b83\u4e00\u4e9b\u9886\u57df\uff0c\u5982\u4fe1\u53f7\u5904\u7406\uff0c\u6570\u503c\u5206\u6790\uff0c\u7f8e\u5b66\u7b49\u3002\u52a0\u4e0b\u6765\u5c06\u4f1a\u5149\u901f\u56de\u987e\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u4e2d\u7684\u57fa\u7840\uff1a</p> <p>\u5411\u91cfvector\u662f\u57fa\u672c\uff08\\(\\vec{a}\\)\uff09\uff0c\u5b83\u7684\u8303\u6570\uff08magnitude\uff09\u662f\\(\\lvert\\lvert\\vec{a}\\rvert\\rvert\\)\uff0c\u800c\u5355\u4f4d\u5411\u91cf\u7684\u8303\u6570\u81ea\u7136\u662f1\u3002\u5982\u679c\u5e0c\u671b\u5bf9\u4e8e\u5411\u91cf\\(\\vec{a}\\)\uff0c\u5f97\u5230\u5bf9\u5e94\u7684\u5355\u4f4d\u5411\u91cf\uff0c\u76f4\u63a5\\(\\hat{a} = \\vec{a} / \\lvert\\lvert\\vec{a}\\rvert\\rvert\\)\u5373\u53ef\u3002\u4e00\u822c\u5355\u4f4d\u5411\u91cf\u7528\u6765\u8868\u793a\u65b9\u5411\u3002\u5411\u91cf\u76f8\u52a0\u6ee1\u8db3\u4e09\u89d2\u5f62\u6cd5\u5219\u3002</p> <p>\u9664\u4e86\u52a0\u51cf\uff0c\u8fd8\u6709\u70b9\u4e58\uff08dot / scalar product\uff09\uff0c\u5f97\u5230\u7684\u5c31\u662f\u5185\u79ef\u3002\u70b9\u4e58\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\\(cos\\theta\\)\uff0c\u5c24\u5176\u662f\u5f53\u4e24\u4e2a\u5411\u91cf\u90fd\u662f\u65b9\u5411\u5411\u91cf\u7684\u65f6\u5019\u3002\u540c\u65f6\uff0c\u70b9\u4e58\u8fd8\u80fd\u5e2e\u52a9\u627e\u5230\u4e00\u4e2a\u5411\u91cf\u6295\u5c04\u5230\u53e6\u4e00\u4e2a\u5411\u91cf\u4e0a\u7684\u7ed3\u679c\u3002\u6700\u540e\uff0c\u70b9\u4e58\u7ed3\u679c\u80fd\u5e2e\u52a9\u5224\u65ad\u5411\u91cf\u4e4b\u95f4\u5939\u89d2\u4e0e\u76f4\u89d2\u7684\u5173\u7cfb\u3002</p> <p>\u70b9\u4e58\u7684\u57fa\u672c\u6027\u8d28\uff1a\u4ea4\u6362\u5f8b\uff0c\u7ed3\u5408\u5f8b\uff0c\u7b49\u7b49\u3002\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0b\uff0c\u70b9\u4e58\u7684\u8ba1\u7b97\u4f1a\u975e\u5e38\u65b9\u4fbf\uff1a  \u70b9\u4e58\u4e4b\u5916\uff0c\u8fd8\u6709\u53c9\u4e58\u3002\u4e24\u4e2a\u5411\u91cf\u53c9\u4e58\uff08cross product\uff09\u5f97\u5230\u7684\u7ed3\u679c\u662f\u53e6\u4e00\u4e2a\u5411\u91cf\uff0c\u8fd9\u4e2a\u5411\u91cf\u4e0e\u4e24\u4e2a\u5411\u91cf\u90fd\u5782\u76f4\uff083D\u4e2d\uff09\uff0c\u65b9\u5411\u7531\u53f3\u624b\u5b9a\u5219\u51b3\u5b9a\u3002\u53c9\u4e58\u6ca1\u6709\u4ea4\u6362\u5f8b\u3002\u53c9\u4e58\u5728\u5efa\u7acb\u4e09\u7ef4\u7a7a\u95f4\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d\u975e\u5e38\u6709\u7528\u3002\u6709\u65f6\u5019\u8fd8\u80fd\u5e2e\u52a9\u5224\u65ad\u4e24\u4e2a\u5411\u91cf\u8c01\u5728\u8c01\u7684\u5de6\u8fb9/\u53f3\u8fb9\u3002  The Cartesian Formula of Cross Pruduct in 3D Euclidean Space:  \u90a3\u4e48\u6709\u53e6\u4e00\u79cd\u8868\u73b0\u5f62\u5f0f\uff08A\u4e3aa\u5411\u91cf\u7684dual matrix\uff09  \u53c9\u4e58\u5728CG\u7684Rasterization\u5149\u6805\u5316\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5e94\u7528\uff0c\u5c31\u662f\u5224\u65ad\u4e00\u4e2a\u70b9\u5728\u4e0d\u5728\u4e00\u4e2apolygon\u91cc\u9762\uff0c\u5982\u5224\u65ad\u662f\u4e0d\u662f\u5728\u4e09\u89d2\u5f62\u4e2d\u3002\u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u53ea\u9700\u8981\u5224\u65ad<code>AP * AB  BP * BC  CP * CA</code>\uff0c\u8fd9\u4e09\u4e2a\u53c9\u4e58\u7684\u7ed3\u679c\uff0c\u5c31\u80fd\u77e5\u9053P\u70b9\u5728\u4e0d\u5728\u4e09\u89d2\u5f62\u91cc\u9762\uff0c\u56e0\u4e3a\u53c9\u4e58\u80fd\u5e2e\u5fd9\u5224\u65adP\u5728AB BC CA\u4e09\u4e2a\u5411\u91cf\u7684\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u5224\u65ad\u65b9\u5f0f\u548c\u4e09\u89d2\u5f62\u4e09\u6761\u8fb9\u9876\u70b9\u7684\u7ed5\u5411\u65e0\u5173(AB BC CA or BA AC CB)\uff0c\u56e0\u4e3a\u6700\u7ec8\u5224\u65ad\u7684\u662fP\u70b9\u5728\u4e0d\u5728\u4e09\u6761\u5411\u91cf\u7684\u540c\u4fa7\uff08\u5f53\u7136\uff0c\u4e09\u6761\u5411\u91cf\u9996\u5c3e\u76f8\u63a5\u662f\u9700\u8981\u4fdd\u8bc1\u7684\uff09\u3002\u5f53\u7136\uff0c\u5982\u679c\u70b9\u843d\u5728\u4e86\u8fb9\u4e0a\uff0c\u90a3\u4e48\u5c31\u5c5e\u4e8ecorner case, \u53ef\u4ee5\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u5728\u4e09\u89d2\u5f62\u91cc\u9762\u3002</p> <p></p> <p>\u77e9\u9635\u4e4b\u95f4\u7684\u4e58\u6cd5\u7565\u3002\u77e9\u9635\u7684\u8f6c\u7f6e\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a\\((AB)^T=B^TA^T\\)\u3002\u90a3\u4e48\u70b9\u4e58\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\\(\\vec{a}\\cdot\\vec{b} = \\vec{a}^T\\vec{b}\\)</p>"},{"location":"GAMES101/note.html#eigen-and-opencv","title":"Eigen and OpenCV\u5e93","text":"<p>Eigen\u662f\u4e00\u4e2a\u9ad8\u5c42\u6b21\u7684C ++\u5e93\uff0c\u6709\u6548\u652f\u6301\u7ebf\u6027\u4ee3\u6570\uff0c\u77e9\u9635\u548c\u77e2\u91cf\u8fd0\u7b97\uff0c\u6570\u503c\u5206\u6790\u53ca\u5176\u76f8\u5173\u7684\u7b97\u6cd5\u3002</p> <p>\u5173\u4e8eEigen\u5e93\u7684\u5b89\u88c5\uff0c\u4e4b\u524d\u4e00\u76f4\u5c1d\u8bd5\u7528cMake\u65b9\u5f0f\u628a\u5e93\u7f16\u8fdbMinGW\u91cc\u9762\uff0c\u4f46\u662f\u603b\u662f\u5931\u8d25\u3002\u4e8e\u662f\u6700\u540e\u9605\u8bfb\u4e86\u5b98\u65b9\u7f51\u7ad9\uff0c\u53d1\u73b0\u4e86\u5982\u4e0b\u7684\u5185\u5bb9\uff1a In order to use Eigen, you just need to download and extract Eigen's source code (see the wiki for download instructions). In fact, the header files in the <code>Eigen</code> subdirectory are the only files required to compile programs using Eigen. The header files are the same for all platforms. It is not necessary to use CMake or install anything.</p> <p>There is no library to link to. The only thing that you need to keep in mind when compiling the above program is that the compiler must be able to find the Eigen header files. The directory in which you placed Eigen's source code must be in the include path. With GCC you use the <code>-I</code> option to achieve this:</p> <p><code>g++ -I /path/to/eigen/ my_program.cpp -o my_program</code></p> <p>\u4e8e\u662f\u547d\u4ee4\u884c\u8fd0\u884ccpp\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u7ec8\u7aef\u8fd0\u884c\u4e0a\u9762\u6307\u4ee4\uff0c\u7136\u540e\u7ec8\u7aef\u547d\u4ee4\u884c\u8fd0\u884cexe\u6587\u4ef6\uff1a<code>./my_program.exe</code></p> <p>OpenCV\u540c\u7406\uff1a\u5f53\u7136\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5e93\u7f16\u8fdb\u73af\u5883\u91cc\u9762\uff0c\u4f46\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>-I /path/to/opencv2/</code>\u6765\u5b9e\u73b0\u3002</p>"},{"location":"GAMES101/note.html#transformation","title":"Transformation","text":"<p>2D transformation\uff1a\u51e0\u79cd\u5e38\u89c1\u76842D\u56fe\u5f62\u7684\u53d8\u6362\uff1a  </p> \\[ \\begin{bmatrix} x' \\\\ y' \\end{bmatrix} = \\begin{bmatrix} -1 &amp; 0 \\\\  0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\tag{Reflection} \\] \\[ \\begin{bmatrix} x' \\\\ y' \\end{bmatrix} = \\begin{bmatrix} 1 &amp; a \\\\  0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\tag{Shear} \\] \\[ R_\\theta =  \\begin{bmatrix} cos\\theta &amp; -sin\\theta \\\\ sin\\theta &amp; con\\theta \\end{bmatrix} \\tag{rotation*} \\] \\[ \\begin{bmatrix} x' \\\\ y' \\end{bmatrix} = \\begin{bmatrix} a &amp; b \\\\  c &amp; d \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\tag{Linear Transform} \\] \\[ \\begin{bmatrix} x' \\\\ y' \\end{bmatrix} = \\begin{bmatrix} 1 &amp; a \\\\  0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\end{bmatrix} \\tag{Shear} \\] <p>rotation\u57282D\u4e2d\u90fd\u662f\u9ed8\u8ba4\u7ed5\u8fdc\u70b9\u9006\u65f6\u9488\u65cb\u8f6c\u7684\u3002\u800c\u4e14\u65cb\u8f6c\u77e9\u9635\u6709\u7740\u7279\u6b8a\u6027\u8d28(\u5982\u4e0b)\uff0c\u9006\u4e0e\u8f6c\u7f6e\u76f8\u540c\u7684\u77e9\u9635\u5c31\u6210\u4e3a\u6b63\u4ea4\u77e9\u9635\u3002  </p> <p>\u90a3\u4e48\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u8fd9\u4e9b\u60c5\u51b5\u6ca1\u6709\u6d89\u53ca\u5230\u5e73\u79fb\uff0c\u56e0\u4e3a\u5176\u5b83\u7684\u53d8\u6362\u90fd\u662f\u7ebf\u6027\u53d8\u6362\uff0c\u4f46\u662f\u552f\u72ec\u5e73\u79fb\u4e0d\u662f\u3002\u56e0\u6b64\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u91c7\u7528\u4e86Homogenous Coordinates Solution\u3002</p> \\[ \\begin{bmatrix} x' \\\\ y' \\\\ z' \\end{bmatrix} = \\begin{bmatrix} 1 &amp; 0 &amp; t_x \\\\ 0 &amp; 1 &amp; t_y \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix} \\cdot \\begin{bmatrix} x \\\\ y \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} x+t_x \\\\ y+y_t \\\\ 1 \\end{bmatrix} \\tag{Tran} \\] <p>Homogeneous Coordinates(\u9f50\u6b21\u5750\u6807)\u4e2d\uff0c\u5c062D point\u8868\u793a\u4e3a\\((x,y,1)^T\\)\uff0c\u800c\u5c062D vector\u8868\u793a\u4e3a\\((x,y,0)^T\\)\uff0c\u8fd9\u5f88\u5999\u7684\u662f\u6ee1\u8db3\u4e86\uff1a</p> <p>\u5411\u91cf\u76f8\u52a0\u4ecd\u4e3a\u5411\u91cf\uff08\u7b2c\u4e09\u7ef4\u5ea6\u662f0\uff09\uff0c\u70b9\u5750\u6807\u76f8\u51cf\u4e3a\u5411\u91cf\uff08\u7b2c\u4e09\u7ef4\u5ea6\u4e0a1-1 = 0\uff09\uff0c\u70b9\u52a0\u4e0a\u5411\u91cf\u4ecd\u4e3a\u70b9\uff08\u7b2c\u4e09\u7ef4\u5ea6\u662f1+0 = 1\uff09\u3002\u8fd9\u4e5f\u89e3\u7b54\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u70b9\u5750\u6807\u76f8\u52a0\u662f\u4ec0\u4e48\u5462\uff1f \u9996\u5148\u6211\u4eec\u9700\u8981\u6269\u5145\u4e00\u4e0b\u5b9a\u4e49\uff1a  \u4e4b\u540e\uff0c\u5c31\u80fd\u8f7b\u677e\u77e5\u9053\u70b9\u76f8\u52a0\u4ee3\u8868\u4ec0\u4e48\u4e86\uff1a\u4e24\u70b9\u7684\u4e2d\u70b9\u3002</p> <p>\u4ee5\u4e0a\u5c31\u662f\u4eff\u5c04\u53d8\u6362\uff08affine transformation\uff09\uff0c\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a  \\(Affine\\ map = linear\\ map + translation\\)\uff0c\u5b9e\u8d28\u662f\u5148\u7ebf\u6027\u53d8\u6362\uff0c\u518d\u8fdb\u884c\u5e73\u79fb</p> <p>\u90a3\u4e482D transformation\u91cd\u65b0\u7528\u77e9\u9635\u8868\u793a\uff1a  \u5728\u591a\u6b65\u9aa4\u53d8\u6362\u4e2d\uff0c\u4ea4\u6362\u5f8b\u662f\u4e0d\u6ee1\u8db3\u7684\uff01\u4f8b\u5982\uff1a\u5148\u65cb\u8f6c\u540e\u5e73\u79fb\u548c\u5148\u5e73\u79fb\u540e\u65cb\u8f6c\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4e00\u7cfb\u5217\u7684\u4eff\u5c04\u53d8\u6362\u77e9\u9635\u6700\u540e\u4e0d\u65ad\u4f5c\u7528\u5728\\((x,y,1)^T\\)\u4e0a\u9762\uff0c\u90a3\u4e48\u6700\u540e\u5c31\u80fd\u770b\u6210\u662f\u4e00\u4e2a\u77e9\u9635\u4f5c\u7528\u5728\u8fd9\u4e2a\u70b9\u4e0a\u9762\u3002</p> <p>\u540c\u65f6\u6709\u4e86Homogenous Coordinates\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u7684\u5206\u89e3\u590d\u6742\u7684\u53d8\u6362\u3002\u4f8b\u59822D\u70b9\u7ed5\u7740\u67d0\u4e00\u7279\u5b9a\u70b9\u8fdb\u884c\u65cb\u8f6c\uff0c\u5c31\u53ef\u4ee5\u628a\u4e24\u4e2a\u70b9\u540c\u65f6\u8fdb\u884c\u5e73\u79fb\uff0c\u4f7f\u5f97\u88ab\u7ed5\u7684\u70b9\u79fb\u52a8\u5230\u8fdc\u70b9\uff0c\u7136\u540e\u4e58\u4e0a\u65cb\u8f6c\u77e9\u9635\uff0c\u6700\u540e\u5e73\u79fb\u56de\u53bb\uff1a  3D Transformation\u5982\u6cd5\u70ae\u5236\u30023D point \\((x,y,z,1)^T\\)\uff0c3D vector \\((x,y,z,0)^T\\)\uff0c\u5e76\u4e14\u6269\u5145\u5b9a\u4e49\u6709\uff1a   </p>"},{"location":"GAMES101/note.html#transformation-cont","title":"Transformation Cont.","text":"<p>Transformation\u5206\u4e3a\uff1aView(\u89c6\u56fe)\u548cProjection(\u6295\u5f71)\u3002\u5176\u4e2d\uff0cProjection transformation\u53c8\u5206\u4e3aOrthographic(\u6b63\u4ea4\u6295\u5f71)\u548cPerspective(\u900f\u89c6\u6295\u5f71) projection\u3002</p>"},{"location":"GAMES101/note.html#3d-transformation","title":"3D Transformation","text":"<p>3D Transformation\u7684\u77e9\u9635\u8868\u8fbe\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p>\u501f\u52a9\u4e09\u4e2a\u65cb\u8f6c\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u8868\u793a\u4efb\u4f55\u4e00\u79cd3D-Rotation\uff1a  \u90a3\u4e48\u5982\u4f55\u8868\u793a\u7ed5\u7740\u65cb\u8f6c\u8f74\u5411\u91cfn\uff08\u9ed8\u8ba4\u5411\u91cf\u662f\u4ece\u8fdc\u70b9\u51fa\u53d1\u7684\uff09\u65cb\u8f6c\u03b1\u89d2\u7684\u65cb\u8f6c\u77e9\u9635\u5462\uff1f \u8fd9\u5c31\u662f\u7f57\u5fb7\u91cc\u683c\u65af\u516c\u5f0f\uff08Rodrigues' Rotation Formula\uff09  \u5176\u4e2d\u7684\u77e9\u9635\u975e\u5e38\u773c\u719f\uff0c\u662fn\u5411\u91cf\u7684dual matrix. \u53e6\u5916\uff0c\u65cb\u8f6c\u77e9\u9635\u4e0d\u662f\u56db\u5143\u6570\uff0c\u56db\u5143\u6570\u662f\u4e3a\u4e86\u89e3\u51b3\u65cb\u8f6c\u77e9\u9635\u63d2\u503c\u95ee\u9898\u800c\u63d0\u51fa\u7684\u30022D\u4e2d\u4e00\u4e2a\u65cb\u8f6c15\u5ea6\u7684\u65cb\u8f6c\u77e9\u9635\u548c\u4e00\u4e2a\u65cb\u8f6c25\u5ea6\u7684\u76f8\u52a0\u5e76\u96642\uff0c\u5f97\u5230\u7684\u77e9\u9635\u5e76\u4e0d\u662f\u65cb\u8f6c20\u5ea6\u7684\u3002\u56db\u5143\u6570\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u3002</p>"},{"location":"GAMES101/note.html#view-camera-transformation","title":"View / Camera Transformation","text":"<p>\u73b0\u5b9e\u4e2d\u6211\u4eec\u662f\u5982\u4f55\u62cd\u7167\u7684\u5462\uff1f\u9996\u5148\u4e1c\u897f\u90fd\u6446\u597d\uff0c\u7136\u540e\u62ff\u51fa\u76f8\u673a\uff0c\u627e\u5230\u597d\u7684\u89d2\u5ea6\uff0c\u6700\u540e\u6441\u4e0b\u5feb\u95e8\u3002\u90a3\u4e48\u201c\u627e\u5230\u597d\u7684\u89d2\u5ea6\u201d\u5c31\u662f\u5728\u8fdb\u884cview transformation\uff0c\u201c\u6441\u4e0b\u5feb\u95e8\u201d\u5c31\u662f\u5728\u8fdb\u884cprojection transformation\u3002</p> <p>\u5982\u4f55perform view transformation\uff1f\u9996\u5148\u6211\u4eec\u8981\u5b9a\u4e49\u4e00\u4e0b\u76f8\u673a\uff1a</p> <ul> <li>Position   \\(\\vec{e}\\)</li> <li>Gaze direction  \\(\\hat{g}\\)</li> <li>Up direction  \\(\\hat{t}\\)    (assuming perpendicular(\u6b63\u4ea4) to \\(\\hat{g}\\))</li> </ul> <p>\u6240\u4ee5\u8bf4\uff0c\u5b9a\u4e0b\u76f8\u673a\u4f4d\u7f6e\uff0c\u7136\u540e\u955c\u5934\u671d\u5411\u76ee\u6807\uff0c\u6700\u540e\u65cb\u8f6c\u76f8\u673a\uff08\u6539\u53d8\u76f8\u673aup direction\uff09\u5c31\u53ef\u4ee5\u5b9a\u4e49\u76f8\u673a\u7684\u53d6\u7ecf\u884c\u4e3a\u4e86\u3002\u90a3\u4e48\u73b0\u5b9e\u4e2d\uff0c\u76f8\u673a\u548c\u7269\u4f53\u90fd\u53ef\u4ee5\u79fb\u52a8\uff0c\u90a3\u4e48\u6839\u636e\u76f8\u5bf9\u8fd0\u52a8\u7ea6\u5b9a\u4fd7\u6210\uff1aWe always transform the camera to:</p> <ul> <li>The origin, up at Y axis, look at -Z axis.</li> <li>And transform the objects along with the camera.</li> </ul> <p>\u90a3\u4e48\u5982\u4f55transform\u5462\uff1f\u9996\u5148\u76f8\u673a\u5728\\(\\vec{e}\\)\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5c31\u8fdb\u884c\u5e73\u79fb\u3002\u79fb\u52a8\u5230\u539f\u70b9\u4e4b\u540e\uff0c\u65cb\u8f6c\\(\\hat{g}\\)\u5230-Z\u8f74\uff0c\\(\\hat{t}\\)\u5230Y\u8f74\uff0c\uff08g\u00d7t\uff09\u5230X\u8f74\u3002</p> <p></p> <p>\u201c\u65cb\u8f6c\\(\\hat{g}\\)\u5230-Z\u8f74\uff0c\\(\\hat{t}\\)\u5230Y\u8f74\uff0c\uff08g\u00d7t\uff09\u5230X\u8f74\u201d\u7edd\u975e\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u77e9\u9635\u8ba1\u7b97\u4f1a\u5f88\u9ebb\u70e6\u3002\u4f46\u662f\u6211\u4eec\u5f88\u5bb9\u6613\u5b9e\u73b0\u7684\u662f\uff1aY\u8f74\u5355\u4f4d\u5411\u91cf\u8f6c\u5230t\uff0c-Z\u8f74\u5355\u4f4d\u5411\u91cf\u8f6c\u5230g\uff0c\u8fd9\u6837\u901a\u8fc7\u6c42\u9006\u5c31\u80fd\u77e5\u9053\u539f\u6765\u9700\u8981\u7684\\(R_{view}\\)\u662f\u4ec0\u4e48\u4e86(\u8fd9\u4e2a\u77e9\u9635\u5f88\u5bb9\u6613\u7528$(1,0,0,0)^T\\ (0,1,0,0)^T\\ (0,0,-1,0)^T\\ $\u548c\u5b83\u76f8\u4e58\u8fdb\u884c\u9a8c\u8bc1)\uff1a  </p>"},{"location":"GAMES101/note.html#projection-transformation","title":"Projection Transformation","text":"<p>Orthographic and Prespective Projection\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f \u5982\u4e0b\u56fe(\u5de6\u4e3a\u6b63\u4ea4\uff0c\u53f3\u4e3a\u900f\u89c6)\uff0c\u540c\u6837\u662f\u7acb\u65b9\u4f53\uff0c\u5de6\u8fb9\u7684\u5e73\u884c\u7ebf\u4f9d\u7136\u5e73\u884c\uff0c\u4f46\u662f\u53f3\u8fb9\u4e0d\u662f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4eba\u773c\u66f4\u7c7b\u4f3c\u53f3\u8fb9\u7684\u900f\u89c6\u6295\u5f71\uff1b\u6362\u800c\u8a00\u4e4b\uff0c\u900f\u89c6\u6709\u8fd1\u5927\u8fdc\u5c0f\u7684\u6548\u5e94\uff1b\u6216\u8005\u8bf4\uff0c\u6b63\u4ea4\u6295\u5f71\u662f\u900f\u89c6\u6295\u5f71\u6444\u50cf\u5934\u653e\u7684\u65e0\u9650\u8fdc\u7684\u60c5\u51b5\uff1a</p> <p></p> <p>\u4e0b\u56fe\u66f4\u80fd\u76f4\u89c2\u5730\u4f53\u73b0\u4e24\u8005\u7684\u533a\u522b\uff1a </p> <p></p> <p>Orthographic Projection\u662f\u8f83\u5bb9\u6613\u5b9e\u73b0\u7684\uff0c\u76f8\u673a\u56fa\u5b9a\u5728\u539f\u70b9\uff0c\u9762\u5411-Z\u8f74\uff0c\u5934\u6307\u5411Y\u8f74\uff0c\u7136\u540e\u5bf9\u7269\u4f53\u8fdb\u884c\u201cDrop Z Coordinate\u201d\uff0c\u6700\u540e\u7ea6\u5b9a\u4fd7\u6210\u5730\u201cTranslate and scale the resulting rectangle to \\([-1,1]^2\\)\u201d\u3002</p> <p></p> <p>\u4f46\u662f\u5728\u5b9e\u9645\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u662f\u5c06\\([l,r]\u00d7[b,t]\u00d7[f,n]\\)\u7684\u7acb\u65b9\u533a\u57df\uff08cuboid\uff09\u6620\u5c04\u5230\\([-1,1]^3\\)\u7684canonical(\u6b63\u5219)\u7acb\u65b9\u4f53\u3002\u7136\u540e\u8fd9\u4e2a\u533a\u57df\u518dDrop Z Coordinate\u3002\u524d\u9762\u8fd9\u4e00\u6b65\u6620\u5c04\u7684\u77e9\u9635\u5982\u4e0b\uff1a </p> <p></p> <p>\u5728\u53f3\u624b\u7cfb\u4e0b\uff0c\u9762\u671d-Z\u8f74\u8ba9\u8fdb\u8fdc\u6982\u5ff5\u6df7\u6dc6\uff08-1 &gt; -2, \u4f46\u662f-1\u70b9\u8ddd\u79bb\u6444\u50cf\u673a\u8fd1\uff09\u3002\u56e0\u6b64\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u5de6\u624b\u7cfb\uff08\u5982OpenGL, a Graphics API\uff09\u3002\u90a3\u4e48\u7ecf\u8fc7\u4e86\u5e73\u884c\u53d8\u6362\u4e4b\u540e\uff0c\u7406\u5e94\u4e0a\u6765\u8bf4\uff0c\u6b63\u5219\u7acb\u65b9\u4f53\u91cc\u9762\u7684\u7269\u4f53\u90fd\u6709\u6240\u62c9\u4f38\u3002\u662f\u8fd9\u6837\u7684\uff0c\u56e0\u4e3a\u4e4b\u540e\u8fd8\u4f1a\u6709\u201c\u89c6\u53e3\u62c9\u4f38\u201d\u5bf9\u7269\u4f53\u518d\u6b21\u8fdb\u884c\u62c9\u4f38\u3002</p> <p>Perspective Projection\u662f\u8f83\u4e3a\u590d\u6742\u7684\uff0c\u4f46\u662f\u786e\u5b9e\u5e94\u7528\u6700\u5e7f\u7684\u3002\u56de\u987e\u4e00\u4e0b\u5176\u6b21\u5750\u6807\u4e2d\u7684\u5b9a\u4e49\uff1a  \u56e0\u6b64\uff0c\uff081,0,0,1\uff09\u548c\uff082,0,0,2\uff09\u90fd\u8868\u793a\uff081,0,0\uff09\u3002\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u900f\u89c6\u6295\u5f71\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u62c6\u6210\u4e24\u6b65\uff1aFrustum\uff08\u89c6\u9525\uff09 -&gt; Cuboid(\u4e00\u4e2a\u77e9\u9635)\uff1b\u6b63\u4ea4\u6295\u5f71\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff08\u5de6\u7acb\u4f53\u56fe\u5f62\u4e3aFrustum\uff0c\u53f3\u7acb\u4f53\u4e3aCuboid\uff09</p> <p></p> <p>\u90a3\u4e48\u201c\u6324\u538b\u201d\uff08squish\uff09\u77e9\u9635\u600e\u4e48\u6c42\uff1f\u89c1\u4e0b\u56fe\uff1a\u7531\u4e8e\u5148\u6709translation\uff0c\u6444\u50cf\u673a\u5df2\u7ecf\u4f4d\u4e8e\u539f\u4f4d\u4e86\uff0c\u56e0\u6b64Frustum\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u201c\u53f0\u578b\u7acb\u65b9\u4f53\u201d\u3002\u90a3\u4e48\u5256\u6790\u4e00\u6761\u5149\u7ebf\uff0c\u5c31\u4f1a\u53d1\u73b0\u53ef\u4ee5\u5229\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u53bb\u6c42\u51fa\u65b0\u7684x and y\uff08\u6211\u4eec\u89c4\u5b9a\uff0csquish\u4e4b\u540e\uff0cnear far\u4e24\u4e2a\u5e73\u9762\u7684z\u90fd\u662f\u4e0d\u53d8\u7684\uff09</p> <p></p> <p>\u90a3\u4e48\u5176\u5b9e\u8fd9\u4e2a\u77e9\u9635\u5f88\u591a\u4fe1\u606f\u5df2\u7ecf\u547c\u4e4b\u6b32\u51fa\u4e86\uff1a  \u6211\u4eec\u53c8\u77e5\u9053\uff08\u5176\u5b9e\u662f\u4eba\u4e3a\u89c4\u5b9a\u7684\uff09\uff0c\u81f3\u5c11\uff0cnera\u5e73\u9762\u4e0a\u7684z\u503c\u548cfar\u5e73\u9762\u4e0a\u7684z\u503c\u5728\u7ecf\u8fc7\u4e86\u77e9\u9635\u53d8\u6362\u4e4b\u540e\u4e0d\u4f1a\u53d8\u5316\u3002\u90a3\u4e48\u7b2c\u4e09\u884c\u81f3\u5c11\u662f\uff1a(0,0,A,B)\u3002\u5219\u5bf9\u4e8en\u5e73\u9762\u4e0a\u7684\uff08x,y,n,1\uff09\u548cf\u5e73\u9762\u4e0a\u7684\uff08x,y,f,1\uff09\u6709\uff1a  \u8fd9\u6837\\(A = n +f;B = -nf\\)\uff0c\u6211\u4eec\u7684\\(M_{persp\\rightarrow{ortho}}\\)\u5c31\u5b8c\u5168\u7b97\u51fa\u6765\u4e86\u3002\u6700\u540e\u5c31\u6709\uff1a  \u597d\u7684\uff0c</p> <p>\u6295\u5f71\u77e9\u9635\u7ec8\u4e8e\u6c42\u51fa\u6765\u4e86\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u89c4\u5b9a\u4e86near and far\u5e73\u9762\u8ddd\u79bbXOY\u5e73\u9762\u7684\u8ddd\u79bb\u4e0d\u53d8\uff0c\u90a3\u4e48\u8fd9\u4e2aFrustum\u7ecf\u8fc7\u4e86Squishing\u4e4b\u540e\uff0c\u4e2d\u95f4\u7684\u70b9\u7684z\u503c\u662f\u53d8\u5927\u4e86\u8fd8\u662f\u53d8\u5c0f\u4e86\u5462\uff1f\u5047\u8bbe\u70b9\u4e3a\\((x,y,t,1)\\)\u5176\u4e2d\\(n&lt;t&lt;f\\)\uff0c\u90a3\u4e48\u7ecf\u8fc7\u4e86\u77e9\u9635\u76f8\u4e58\u4e4b\u540e\uff1a\\(\\hat{z} = ((n+f)z - nf)/z\\)\uff0c\u800c\u5b83\u8981\u548cz\u8fdb\u884c\u6bd4\u8f83\uff1a  \u6240\u4ee5\u8bf4\uff0c\u4e8b\u5b9e\u4e0a\u7ecf\u8fc7\u4e86squish\u4e4b\u540e\uff0c\u867d\u7136\u8bf4near far\u4e24\u4e2a\u5e73\u9762\u7684z\u503c\u662f\u4e0d\u6539\u53d8\u7684\uff0c\u4f46\u662f\u4e2d\u95f4\u7684\u70b9\u7684z\u503c\u662f\u4f1a\u53d8\u5927\u7684\uff0ci.e.\uff0c\u66f4\u9760\u8fd1far\u5e73\u9762\u3002</p>"},{"location":"GAMES101/note.html#rasterization","title":"Rasterization","text":""},{"location":"GAMES101/note.html#triangles","title":"Triangles","text":"<p>\u5b9a\u4e49\uff1aAspect ratio = width / height(\u5bbd\u9ad8\u6bd4)\u3001vertical field-of-view(fovY)(\u5782\u76f4\u53ef\u89c6\u89d2)\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u80fd\u89c4\u8303\u5730\u7528\u5bbd\u9ad8\u6bd4\u548c\u5782\u76f4\u53ef\u89c6\u89d2\u6765\u5b9a\u4e49\u6211\u4eec\u53d6\u51fa\u6765\u7684Frustum\u4e86\uff0c\u793a\u610f\u56fe\u5982\u4e0b\uff1a </p> <p></p> <p></p> <p>pre-difine\u4e00\u4e9b\u6982\u5ff5\u4e4b\u540e\uff1aMVP\u4e4b\u540e\u5e72\u4ec0\u4e48\uff08MVP\uff1amodel, view, project\uff09\uff1f\u81ea\u7136\u9700\u8981\u60f3\uff1a\u5982\u4f55\u628a\u6b63\u5219\u7acb\u65b9\u4f53\u8f6c\u5230\u5c4f\u5e55\u4e0a\u3002\u90a3\u4e48\u4ec0\u4e48\u4e8b\u5c4f\u5e55screen\u5462\uff1f \u5c4f\u5e55\u5176\u5b9e\u662f\u4e00\u5806\u50cf\u7d20\uff0c\u50cf\u7d20\u77e9\u9635\u7684\u5927\u5c0f\u5c31\u79f0\u4e3a\u5206\u8fa8\u7387\u3002\u5f53\u524d\u9636\u6bb5\uff0c\u5bf9\u4e8e\u4e00\u4e2apixel\uff0c\u6211\u4eec\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5c0f\u6b63\u65b9\u5f62\uff0c\u800c\u4e14\u989c\u8272\u4e0d\u4f1a\u53d8\u5316\uff08For now: A pixel is a little square with uniform color\uff09\u3002Raster\u662f\u5fb7\u8bed\u4e2dScreen\u7684\u610f\u601d\uff0c\u90a3\u4e48\u5149\u6805\u5316\u5176\u5b9e\u5c31\u662f\u5e0c\u671b\u628acanonical cube\u8f6c\u5316\u4e3ascreen\u3002\u5149\u6805\u5316\u8fd9\u4e2a\u540d\u5b57\u5176\u5b9e\u4e5f\u5f88\u4fe1\u8fbe\u96c5\uff1a\u628a\u5149 ray \u5212\u5206\u4e3a\u4e00\u4e2a\u4e00\u4e2a\u5c0f\u6805\uff08\u5c0f\u683c\u5b50\uff09\u3002</p> <p>\u5982\u4f55\u5b9a\u4e49screen space\uff1f\u7ea6\u5b9a\u4fd7\u6210\uff1a\u8d77\u70b9\u4e3a\u539f\u70b9\uff0c\u7136\u540e\u50cf\u7d20\u7684\u5f15\u7d22\u662f(x, y)\u5f62\u5f0f\uff0c\u800c\u4e14x y\u90fd\u662f\u6b63\u6574\u6570\u3002\u90a3\u4e48\uff0c\"Pixel's indices are from (0, 0) to (width-1, height-1)\"\u3002\u4f46\u662f\u6ce8\u610f\uff1a\u50cf\u7d20\u7684\u4e2d\u5fc3\u70b9\u5176\u5b9e\u5e76\u4e0d\u662f\u5f15\u7d22\uff01</p> <p></p> <p>\u90a3\u4e48\u76f8\u5f53\u4e8e\u5e0c\u671b\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\uff0c\u5b9e\u73b0\uff1a\\([-1,1]^2\\rightarrow[0,width]\u00d7[0,height]\\), \u4e14\u8ddfz\u8f74\u65e0\u5173\u3002\u8fd9\u4e2a\u77e9\u9635\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\uff1a  \u8fd9\u5c31\u662f\u89c6\u53e3\u62c9\u4f38\uff08viewport\uff09\u3002\u7ecf\u8fc7\u4e86\u8fd9\u4e00\u6b65\u4e4b\u540e\uff0c\u7ec8\u4e8e\u56fe\u50cf\u5448\u73b0\u5230\u4e86\u50cf\u7d20\u533a\u57df\u5185\u4e86\u3002\u90a3\u4e48\u7a76\u7adf\u5982\u4f55\u628a\u8fd92D Polygon\u8f6c\u5316\u4e3a\u50cf\u7d20\u5462\uff1f\u6362\u800c\u8a00\u4e4b\uff0c\u7528\u4e00\u4e2a\u4e00\u4e2a\u7684\u5c0f\u683c\u5b50\uff08\u6805\uff09\u8fdb\u884c\u5212\u5206\u5462\uff1f\u5173\u4e8e\u591a\u8fb9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8ba8\u8bba\uff1aTriangle Meshes\u5e94\u8be5\u5982\u4f55\u64cd\u4f5c\uff1f</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u5148\u8ba8\u8bbaTriangle Mesh\u5462\uff1f\u539f\u56e0\u6709\u5f88\u591a\uff1a</p> <ol> <li>\u4e09\u89d2\u5f62\u662f\u591a\u8fb9\u5f62\u7684\u57fa\u7840\u3002\u591a\u8fb9\u5f62\u53ef\u4ee5\u62c6\u5206\u4e3a\u591a\u4e2a\u4e09\u89d2\u5f62</li> <li>\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u70b9\u4e00\u5b9a\u5728\u4e00\u4e2a\u9762\u4e0a\uff08planar\uff09</li> <li>\u4e09\u89d2\u5f62\u5185\u5916\u5b9a\u4e49\u5341\u5206\u6e05\u6670\uff08well-defined interior\uff09</li> <li>\u5bf9\u4e8e\u4e09\u89d2\u5f62\u5185\u90e8\u7684\u70b9\uff0c\u5f88\u5bb9\u6613\u7528\u4e09\u70b9\u5750\u6807\u8fdb\u884c\u5dee\u503c\uff08interpolation\uff09\u8868\u793a\uff0c\u4f8b\u5982\u91cd\u5fc3\u7684\u5dee\u503c\uff08barycentric interpolation\uff09</li> </ol> <p></p> <p>\u5206\u6790\u4e86\u4f18\u52bf\u4e4b\u540e\uff0c\u5982\u4f55\u7528pixel\u53bb\u903c\u8fd1triangle\u5462\uff1f\u5982\u4f55\u5b9e\u73b0\u8fd9\u6837\u7684\u4e00\u4e2aalgorithm\uff0c\u505a\u5230\uff1aUse the input of the position of triangle vertices projected on screen to output the set of pixel values approximating traingle\u3002(\u793a\u610f\u56fe\u5982\u4e0b)</p> <p></p> <p>\u4e4b\u524d\u63d0\u5230\u53c9\u4e58\u5999\u7528\u7684\u65f6\u5019\u6709\u8fc7\u6309\u6697\u793a\uff1a\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5224\u65ad\u6807\u51c6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u91c7\u6837(sampling)\u6240\u6709\u7684\u50cf\u7d20\u683c\u5b50\u4e2d\u5fc3\u70b9\uff0c\u5224\u65ad\u4e2d\u5fc3\u70b9\u5728\u4e0d\u5728trangle\u7684\u5185\u90e8\u3002</p> <p></p> <p>\u90a3\u4e48\u76f8\u5f53\u4e8e\u662f\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a<code>inside(tri, x+0.5, y+0,5);</code>\u51fd\u6570\uff0c\u4ece\u800c\u5224\u65ad\u5f15\u7d22\u4e3ax y\u7684\u50cf\u7d20\u7684\u4e2d\u5fc3\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff08\u4e3a\u4ec0\u4e48\u662f+0.5\uff1f\u56e0\u4e3aviewport\u5df2\u7ecf\u5c06canonical cube map\u5230\u4e86pixel resolution matrix\uff0c\u6240\u4ee50.5\u8fd9\u4e2a\u6570\u5b57\u662f\u6b63\u786e\u7684\uff09\u3002\u90a3\u4e48\u5229\u7528\u4e09\u4e2across product\u5c31\u80fd\u5e2e\u52a9\u5224\u65ad\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u91cc\u9762\u3002\u90a3\u4e48\u5bf9\u4e8e\u70b9\u5728\u4e09\u89d2\u5f62\u4e0a\u7684corner case\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u884c\u89c4\u5b9a\uff0c\u53ea\u9700\u8981\u4e25\u683c\u9075\u5b88\u5c31\u884c\u4e86\uff1b\u5f53\u7136\u4e0d\u540c\u7684API\u7684\u89c4\u5219\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u4e09\u89d2\u5f62\u6765\u8bf4\uff0c\u6211\u6709\u5fc5\u8981\u626b\u8fc7\u5168\u90e8\u7684\u50cf\u7d20\u6765\u8fdb\u884c\u5149\u6805\u5316\u5417\uff1f\u4e00\u4e2a\u4e09\u89d2\u5f62\u5355\u5143\u5b9e\u9645\u4e0a\u662f\u4e0d\u5927\u7684\uff0c\u56e0\u6b64\u5982\u679c\u7a0b\u5e8f\u4e0a\u904d\u5386x y\u8ba1\u7b97\u5f00\u9500\u4f1a\u8d77\u98de\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aBounding Box! (\u4e13\u4e1a\u540d\u5b57\u53eb\u505aAxis Aligned Bounding Box, AABB)\u3002\u800c\u6709\u7684\u65f6\u5019\uff0c\u4e09\u89d2\u5f62\u5b9e\u9645\u4e0a\u8986\u76d6\u9762\u79ef\u975e\u5e38\u5c0f\uff0c\u4f46\u662fAABB\u4f1a\u663e\u793a\u90fd\u975e\u5e38\u5927\uff0c\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u90a3\u5c31\u662f\u4e09\u89d2\u5f62\u975e\u5e38\u82d7\u6761\uff0c\u800c\u4e14\u6709\u65cb\u8f6c\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u79cd\u4e09\u89d2\u5f62\u7684\u5149\u6805\u5316\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528Incremental Triangle Traversal Strategy\u3002</p> <p></p> <p></p> <p>\u6700\u540e\uff0c\u6211\u4eec\u5224\u65ad\u4e86\u6240\u6709\u7684\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u4fe1\u606f\u586b\u5145\u5bf9\u5e94\u7684\u50cf\u7d20\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u79cd\u5f88\u7cdf\u7cd5\u7684\u73b0\u8c61\uff1a\u952f\u9f7f\u6548\u5e94\uff08Aliasing / Jaggies\uff09\u3002\u6ca1\u9519\uff1a\u6297\u952f\u9f7f\uff08Antialiasing\uff09\u662f\u540e\u7eed\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5de5\u4f5c\u3002</p> <p></p>"},{"location":"GAMES101/note.html#antialiasing-and-z-buffering","title":"Antialiasing and Z-Buffering","text":"<p>\u5982\u4f55\u6297\u952f\u9f7f\uff08\u4e5f\u79f0\u4e3a\u53cd\u8d70\u6837\uff09\u5462\uff1f\u91c7\u6837\u80fd\u4e0d\u80fd\u6539\u8fdb\u4e00\u4e0b\u5462\uff1f\u56e0\u6b64\u9700\u8981\u4e86\u89e3\u4e00\u4e0bSampling Artifacts(\u7455\u75b5)(Errors/Mistakes/Inaccuracies) in Computer Graphics\u3002\u91c7\u6837\u5e26\u6765\u7684\u8bef\u5dee\u6709\u5f88\u591a\u4f8b\u5b50\uff0c\u5982\u6469\u5c14\u7eb9\uff0c\u952f\u9f7f\u6548\u5e94\uff0cWagon wheel effect\u7b49\u7b49\uff0c\u5b83\u4eec\u7684\u91c7\u6837artifact\u5206\u522b\u662f\uff1asampling in space; undersampling images; sampling in time\u3002\u4f46\u662f\u5728\u8fd9\u4e9bartifacts\u80cc\u540e\uff0c\u6709\u4e00\u53e5\u8bdd\u53ef\u4ee5\u63cf\u8ff0\u73b0\u8c61\u4ea7\u751f\u7684\u539f\u56e0\uff1aSignals are changing too fast (high frequency), but sampled too slowly\u3002 </p> <p>\u90a3\u4e48Antialiasing\u7684core idea\u662f\u4ec0\u4e48\u5462\uff1f\u8fd9\u91cc\u76f4\u63a5\u6446\u51fa\u7ed3\u8bba\uff1aBlurring (Pre-Filtering) Before Sampling\u3002</p> <p></p> <p>\u8fb9\u7f18\u9ad8\u9891\u7684\u4fe1\u606f\u5728\u6a21\u7cca\u5316\uff08\u6ee4\u6ce2\uff09\u540e\u53ef\u4ee5\u964d\u9891\uff0c\u56e0\u6b64\u5728\u8f83\u4e3a\u4f4e\u9891\u7684\u50cf\u7d20\u4e2d\u5fc3\u70b9\u91c7\u6837\u4e0b\u80fd\u591f\u6709\u66f4\u597d\u7684\u6548\u679c\uff08\u611f\u6027\u7406\u89e3\uff09\u3002Note antialiased edges in rasterized triangle where pixel values take intermediate values\u3002\u540c\u65f6\uff1a\u5148\u91c7\u6837\u540e\u6a21\u7cca\u7684\u65b9\u6cd5\u6548\u679c\u5e76\u4e0d\u597d\uff01 \u60f3\u8981\u6297\u952f\u9f7f\uff0c\u5fc5\u987b\u5148\u6a21\u7cca\u540e\u91c7\u6837\uff01</p> <p>\u6b64\u65f6\u5fc3\u4e2d\u4e00\u5b9a\u6709\u4e24\u4e2a\u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48undersampling\u4f1a\u9020\u6210\u952f\u9f7f\u6548\u5e94\uff1f\u4ee5\u53ca\uff0c\u4e3a\u4ec0\u4e48\u5148\u6ee4\u6ce2\uff08\u5148\u6a21\u7cca\uff09\uff08pre-filtering\uff09\u518d\u91c7\u6837\u53ef\u4ee5\u6297\u952f\u9f7f\uff1f\u90a3\u4e48\u6211\u4eec\u9700\u8981\u9891\u7387\u65b9\u9762\u7684\u77e5\u8bc6\u3002 </p> <p>\\(cos2\\pi fx\\)\u51fd\u6570\u4e2d\uff0c\\(f = 1/T\\)\uff0c\u4ee3\u8868\u4e86\u9891\u7387\u3002f\u8d8a\u5927\uff0c\u56fe\u50cf\u632f\u52a8\u9891\u7387\u8d8a\u9ad8\uff0c\u5468\u671f\u8d8a\u5c0f\u3002\u6839\u636e\u5085\u91cc\u53f6\u53d8\u6362\uff0cFourier Transform\uff0c\u4efb\u4f55\u4e00\u4e2a\u5468\u671f\u51fd\u6570\u6211\u90fd\u80fd\u5199\u6210\u6b63\u5f26\u51fd\u6570\u548c\u4f59\u5f26\u51fd\u6570\u7684\u548c\uff1aRepresent a function as a weighted sum of sines and cosines\u3002Essentially, \u5085\u91cc\u53f6\u53d8\u6362\u5c31\u662f\u65f6\u57df-&gt;\u9891\u57df\u3002</p> <p></p> <p>\u800c\u66f4\u9ad8\u9891\u7387\u7684\u51fd\u6570\u9700\u8981\u66f4\u5feb\u7684\u91c7\u6837\u7b56\u7565(Higher Ferequencies Need Faster Sampling)(\u5982\u4e0b\u56fe)\u3002</p> <p></p> <p>\u540c\u65f6\uff0cundersampling\u4e5f\u4f1a\u9020\u6210Frequenciy Aliases\u3002\u5728\u4e0b\u56fe\u80fd\u591f\u6e05\u6670\u770b\u51fa\uff1a\u5728\u4e00\u4e2a\u91c7\u6837\u9891\u7387\u4e0b\uff0c\u5373\u4f7f\u662f\u4e24\u4e2a\u9891\u7387\u622a\u7136\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u518d\u8fd9\u4e2asampling\u4e0b\u4f9d\u7136\u91c7\u6837\u5904\u4e86\u76f8\u540c\u7684\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u73b0\u8c61\u4e5f\u79f0\u4e3a\u201c\u8d70\u6837\u201d\u3002</p> <p></p> <p>\u800c\u6ee4\u6ce2\uff0cfiltering\uff0c\u4ece\u9891\u7387\u7684\u89d2\u5ea6\u4e0a\u5c31\u662f\uff1aGet rid of certain frequency contents\u3002filtering\u5206\u4e3aHigh-Pass and Low-Pass Filtering\uff0c\u8fd9\u4e9b\u5728SI100B signal processing\u90e8\u5206\u6709\u6240\u8bbe\u8ba1\u3002</p> <p>\u53c8\u4e00\u4e2a\u7ed3\u8bba\uff1aFiltering = Convolution = Averaging\u3002Averaging\u8fd8\u53ef\u80fd\u7406\u89e3\uff0c\u4f46\u4e3a\u4ec0\u4e48\u662f\u5377\u79ef\uff1f\u5728CNN\u4e2d\uff0c\u5377\u79ef\u7684\u5b9a\u4e49\u662f\u5b66\u4e60\u8fc7\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e5f\u662f\u5982\u6cd5\u70ae\u5236\uff1a\u5bf9signal\u51fd\u6570\u7684\u503c\u7528\u4e00\u4e2apoint-wise averaging sliding window\u3002</p> <p>Convolution Theorem: Convolution in the spatial domain is equal to multiplication in the frequenct domain, and vice versa. </p> <ul> <li>Option 1: Filter by convolution in the spatial domain</li> <li>Option 2 : First, transform to frequency domain (Fourier transform). Secondly, mutiply by Fourier transform of convolution kernel. Lastly, transform back to spatial domain (inverse Fourier).</li> </ul> <p>\u4e0a\u8ff0\u5185\u5bb9\u4e3b\u8981\u8bb2\u8ff0\u4e86\u5b9e\u65bd\u5377\u79ef\u7684\u4e24\u79cd\u65b9\u6cd5\uff1a\u8981\u4e48\u76f4\u63a5\u65f6\u57df\u4e0a\u5377\u79ef\uff0c\u8981\u4e48\u5085\u91cc\u53f6\u53d8\u6362\u5230\u9891\u57df\uff0c\u548c\u5377\u79ef\u6838\u76f8\u4e58\uff0c\u6700\u540e\u5408\u6210\u56de\u53bb\u3002\u89c1\u4e0b\u793a\u610f\u56fe\uff1a</p> <p></p> <p>\u8fd9\u79cd\u5377\u79efsliding window box\u79f0\u4e3afilter kernel\u3002\u8fd9\u4e2abox\u8d8a\u5927\uff0c\u6a21\u7cca\u5316\u7684\u80fd\u529b\u8d8a\u5f3a\uff0c\u56e0\u6b64wider filter kernel = lower frequency\uff08\u8fd9\u5f88\u5bb9\u6613\u7406\u89e3\uff09\u3002</p> <p>\u90a3\u4e48\u91c7\u6837\uff0csampling\uff0c\u4ece\u9891\u7387\u7684\u89d2\u5ea6\u4e0a\uff1aRepeating Frequency Contents\u3002\u89c1\u4e0b\u56fe\uff0c\u5728\u65f6\u57df\u4e0a\u7684\u51fd\u6570\uff0c\u901a\u8fc7c\u51b2\u6fc0\u51fd\u6570\u8fdb\u884c\u91c7\u6837\u3002\u90a3\u4e48a\u51fd\u6570\u8f6c\u5316\u5230\u4e86\u9891\u57df\u4e0a\uff0c\u800c\u51b2\u6fc0\u51fd\u6570\u7ecf\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u4e4b\u540e\u4f9d\u7136\u662f\u51b2\u6fc0\u51fd\u6570\uff0c\u90a3\u4e48\u65f6\u57df\u4e0a\u7684\u91c7\u6837\u662f\u9891\u57df\u4e0a\u7684\u5377\u79ef\uff0c\u5c31\u4f1a\u53d1\u73b0\u7ed3\u679c\u662f\u5728\u9891\u57df\u4e0a\u4e0d\u65ad\u91cd\u590d\u7684\u590d\u5236\u7c98\u8d34\uff01</p> <p>\u91c7\u6837\u5b9a\u7406\u6307\u51fa\uff0c\u5982\u679c\u4e00\u4e2a\u8fde\u7eed\u4fe1\u53f7\u7684\u9891\u8c31\u5185\u5bb9\u5b8c\u5168\u4f4d\u4e8e\u67d0\u4e2a\u9891\u7387 fmax\u4ee5\u4e0b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4fe1\u53f7\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u91c7\u6837\u7387 fs\u6765\u5b8c\u7f8e\u5730\u91cd\u5efa\uff0c\u53ea\u8981 fs \u5927\u4e8e 2fmax\u3002\u8fd9\u4e2a\u6761\u4ef6\u786e\u4fdd\u4e86\u91c7\u6837\u540e\u7684\u4fe1\u53f7\u4e0d\u4f1a\u53d1\u751f\u6df7\u6dc6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u539f\u59cb\u4fe1\u53f7\u53ef\u4ee5\u4ece\u5176\u6837\u672c\u4e2d\u552f\u4e00\u5730\u91cd\u5efa\u51fa\u6765\u3002\u5f53\u91c7\u6837\u7387 fs \u7b49\u4e8e\u6216\u5c0f\u4e8e 2fmax \u65f6\uff0c\u4f1a\u53d1\u751f\u6240\u8c13\u7684\u201c\u6df7\u53e0\u201d\u73b0\u8c61\u3002\u6df7\u53e0\u662f\u6307\u9ad8\u9891\u4fe1\u53f7\u7684\u6837\u672c\u4e0e\u4f4e\u9891\u4fe1\u53f7\u7684\u6837\u672c\u6df7\u5408\u5728\u4e00\u8d77\uff0c\u5bfc\u81f4\u65e0\u6cd5\u4ece\u91c7\u6837\u4fe1\u53f7\u4e2d\u6062\u590d\u539f\u59cb\u4fe1\u53f7\u3002\u5728\u9891\u57df\u4e2d\uff0c\u8fd9\u8868\u73b0\u4e3a\u9ad8\u9891\u4fe1\u53f7\u7684\u9891\u8c31\u201c\u6298\u53e0\u201d\u5230\u4f4e\u9891\u533a\u57df\uff0c\u4ece\u800c\u4e0e\u539f\u59cb\u4fe1\u53f7\u7684\u9891\u8c31\u91cd\u53e0\uff0c\u8fd9\u5c31\u662f\u201c\u91cd\u590d\u9891\u8c31\u5185\u5bb9\u201d\u7684\u542b\u4e49\u3002</p> <p></p> <p>\u56e0\u6b64\u5982\u679c\u91c7\u6837\u8d8asparse\uff0c\u5377\u79ef\u9891\u7387\u8d8a\u9ad8\uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751faliasing : Mixed Frequency Contents\u3002\u89c1\u4e0b\u56fe\uff1a</p> <p></p> <p>\u6709\u4e86\u4ee5\u4e0a\u7684\u5206\u6790\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u77e5\u9053\u5982\u4f55\u53cd\u8d70\u6837\uff1a</p> <ul> <li>Option1\uff1a\u63d0\u9ad8\u91c7\u6837\u7387\uff08\u5982\u63d0\u9ad8\u5206\u8fa8\u7387\uff1b\u4f46\u662f\u4e0d\u73b0\u5b9e\uff09</li> <li>Option2\uff1a\u53bb\u6389\u9ad8\u9891\u3002\u5982\u4e0b\u65b9\u7684\u6f14\u793a\u56fe\u3002\u800c\u73b0\u5b9e\u4e2d\uff0c\u5982\u4f55\u6ee4\u6ce2\u5462\uff1f\u53ef\u4ee5\u8003\u8651\uff1a\u4f4e\u901a\u6ee4\u6ce2\u5668\u5bf9\u56fe\u50cf\u8fdb\u884c\u5e73\u5747\u3002</li> </ul> <p></p> <p>\u5177\u4f53\u64cd\u4f5c\u6765\u8bf4\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u8fdb\u884caveraging\uff1a\u6709\u591a\u5c11\u90e8\u5206\u88ab\u4e09\u89d2\u5f62\u8986\u76d6\uff0c\u989c\u8272\u4e0a\u5c31\u5448\u73b0\u591a\u5c11\u7a0b\u5ea6\u3002\u793a\u610f\u56fe\u5982\u4e0b(\u6b63\u65b9\u5f62\u4e3a1-pixel-wide)\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u8bf4\u7740\u5bb9\u6613\uff0c\u505a\u7740\u96be\uff1a\u5982\u4f55\u8ba1\u7b97\u4e09\u89d2\u5f62\u5728\u8fd9\u4e2a\u50cf\u7d20\u683c\u5b50\u4e2d\u8986\u76d6\u7684\u9762\u79ef\u5462\uff1f\u56e0\u6b64\u6709\u4e00\u79cd\u8fd1\u4f3c\u7684\u8ba1\u7b97\u65b9\u6cd5\uff1aMSAA, Multi-Sampling Anti-Aliasing\u3002\u4e00\u4e2a\u50cf\u7d20\u91cc\u9762\u53ef\u4ee5\u518d\u5212\u5206\u4e3a4\u4e2a\u5c0f\u6b63\u65b9\u5f62\uff0c\u6709\u56db\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u7136\u540e\u53bb\u611f\u77e5\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u3002\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p></p> <p></p> <p>MSAA\u5176\u5b9e\u5e76\u6ca1\u6709\u63d0\u9ad8\u5206\u8fa8\u7387\uff0c2*2\u7684supersampling\u770b\u4f3c\u662f\u4e00\u4e2a\u50cf\u7d20\u5212\u5206\u4e3a\u4e86\u201c\u56db\u4e2a\u5c0f\u50cf\u7d20\u201d\uff0c\u5176\u5b9e\u53ea\u662f\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u66f4\u5408\u7406\u7684\u50cf\u7d20\u533a\u57df\u7684\u8986\u76d6\u6bd4\u4f8b\uff0c\u4ece\u800c\u5b9e\u73b0\u6a21\u7cca\u5316\u3002\u8fd9\u5f53\u7136\u53ea\u662f\u4e00\u79cd\u6297\u952f\u9f7f\u65b9\u6cd5\uff0c\u8fd8\u6709\u5f88\u591aMilestones\uff0c\u5982FXAA(Fast Approximate A), TAA(Temporal AA)\u3002\u540c\u65f6\uff0csuper resolution\u4e5f\u662f\u4e00\u79cd\u6297\u952f\u9f7f\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u539f\u7406\u548c\u573a\u666f\u90fd\u4e0d\u4e00\u6837\uff1a\u4e00\u4e2a512\u00d7512\u7684\u7167\u7247\u62c9\u62101024\u00d71024\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u952f\u9f7f\u6548\u5e94\uff0c\u56e0\u4e3a\u6709\u4fe1\u606f\u786e\u5b9e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u6df1\u5ea6\u5b66\u4e60\u6765\u201c\u731c\u51fa\u2019\u4fe1\u606f\uff0c\u4ece\u800cAntialiasing\u5e76\u63d0\u9ad8\u5206\u8fa8\u7387\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u628a\u8fdc\u5904\u7269\u4f53\u7528\u89c6\u9525\u6846\u8d77\u6765\uff0c\u8f6c\u5316\u4e3a\u6b63\u5219\u7acb\u65b9\u4f53\uff0c\u6700\u540edrop Z coordinates\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6b63\u786e\u5730\u8868\u8fbe\u906e\u6321\u5173\u7cfb\u5462\uff1f\u6bd5\u7adf\u4eba\u773c\u6216\u8005\u662f\u6444\u50cf\u673a\uff0c\u53ea\u80fd\u770b\u5230\u7269\u4f53\u7684\u4e00\u9762\u3002\u8fd9\u5c31\u662f\u8fd9\u91cc\u8981\u63d0\u5230\u7684\u7b2c\u4e00\u70b9\uff1aVisibility / Occlusion, i.e., Z-buffering\u3002</p> <p>\u53d7\u753b\u5bb6\u753b\u753b\u7684\u6d41\u7a0b\u7684\u542f\u53d1\uff0c\u53d1\u660e\u4e86Painter's Algorithm\uff1aPaint from back to front, overwrite in the framebaffer\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5047\u5982\u8bf4\u6211\u60f3\u753b\u4e00\u5ea7\u5c71\u7684\u98ce\u666f\u56fe\u6cb9\u753b\uff0c\u6700\u8fdc\u7684\u662f\u5c71\uff0c\u4e8e\u662f\u6211\u5148\u753b\u51fa\u5c71\u7684\u5168\u8c8c\uff0c\u7136\u540e\u518d\u8fdb\u4e00\u6b65\u753b\u773c\u524d\u7684\u8349\u5730\uff0c\u6700\u540e\u753b\u6811\u7b49\u7ec6\u8282\u3002\u56e0\u4e3a\u6cb9\u753b\u5141\u8bb8\u8986\u76d6\uff0c\u5373overwrite\uff0c\u6240\u4ee5\u8bf4\u6211\u53ea\u8981\u9075\u5faa\u4ece\u8fdc\u5230\u8fd1\u7684\u4f5c\u753b\u65b9\u5f0f\uff0c\u753b\u51fa\u6765\u7684\u5c31\u662f\u5408\u4e4e\u903b\u8f91\u7684\u3002</p> <p>\u6211\u4eec\u79f0\u7269\u4f53\u8ddd\u79bb\u89c2\u6d4b\u70b9\u7684\u8ddd\u79bb\u4e3a\u6df1\u5ea6depth\u3002\u5bf9\u4e8e\u753b\u5bb6\u7b97\u6cd5\u6765\u8bf4\uff0c\u5bf9\u4e8en\u4e2a\u4e09\u89d2\u5f62\u6765\u8bf4\uff0c\u9700\u8981\u590d\u6742\u5ea6<code>O(nlogn)</code>\u3002\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u662f\u9996\u5148\u5c06\u573a\u666f\u4e2d\u7684\u591a\u8fb9\u5f62\u6839\u636e\u6df1\u5ea6\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u6df1\u5ea6\u4ece\u5927\u5230\u5c0f\u987a\u5e8f\u8fdb\u884c\u63cf\u7ed8\uff1b\u753b\u5bb6\u7b97\u6cd5\u901a\u5e38\u4f1a\u5c06\u4e0d\u53ef\u89c1\u7684\u90e8\u5206\u8986\u76d6\uff0c\u53ef\u4ee5\u89e3\u51b3\u53ef\u89c1\u6027\u95ee\u9898\u3002\u5bf9\u4f46\u662f\u6709\u4e00\u4e9b\u65f6\u5019\uff1aCan have unresolvable depth order\u3002\u5373\uff1a\u4e0d\u80fd\u89e3\u51b3\u6709\u906e\u6321\u7684\u7269\u4f53\uff0c\u6216\u8005\u8bf4\u4e0d\u80fd\u89e3\u51b3\u6df1\u5ea6\u4e0d\u597d\u786e\u5b9a\u7684\u7269\u4f53\u3002\u5982\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\u4e09\u4e2a\u4e09\u89d2\u5f62\u4e92\u76f8\u906e\u6321\uff0c\u8fd9\u6837\u6df1\u5ea6\u5c31\u5206\u4e0d\u6e05\u5148\u540e\u987a\u5e8f\u4e86\uff1a</p> <p></p> <p>\u56e0\u6b64\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cdcorner case\uff0c\u4eba\u4eec\u7814\u53d1\u4e86\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5\uff1aZ-Buffer\u3002\u4e0e\u5176\u5bf9\u4e09\u89d2\u5f62\uff08\u591a\u8fb9\u5f62\uff09\u8fdb\u884c\u6df1\u5ea6\u6392\u5e8f\uff0c\u4e0d\u5982\u76f4\u63a5\u4ee3\u5165\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7684\u89c6\u89d2\uff1a\u6211\u5e0c\u671b\u627e\u5230\u6bcf\u4e00\u4e2a\u50cf\u7d20\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\u89c4\u8303\u8868\u8ff0\u5982\u4e0b\uff1a</p> <ul> <li>Store current min. z-value for each sample (pixel)</li> <li>Needs an additional buffer for depth values: A frame buffer that stores color values, and a depth buffer (z-buffer) that stores depth.</li> </ul> <p>\u540c\u65f6\uff0c\u4e3a\u4e86\u7b80\u5316\u8ba1\u7b97\uff0c\u539f\u672c\u6444\u50cf\u5934\u662f\u9762\u5411-Z\u8f74\u65b9\u5411\u7684\uff0c\u5373\u6444\u50cf\u5934\u770b\u5230\u7684\u7269\u4f53\u7684Z\u8f74\u503c\u90fd\u662f\u8d1f\u6570\u3002\u4f46\u662f\u6211\u4eec\u89c4\u5b9a\uff1az value is always positive, i.e., smaller z means closer and larger z means further\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6211\u4eec\u5b9e\u65bdZ-buffer\u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u540c\u65f6\u5f97\u5230\u4e24\u4e2a\u6570\u636e\uff1a\u989c\u8272\u7684buffer\u4ee5\u53ca\u6df1\u5ea6\u7684buffer\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u6d41\u7a0b\uff1a\u5bf9\u6bcf\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e2d\u8986\u76d6\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u8fdb\u884c\u904d\u5386\uff0c\u5bf9\u6bd4\u6bcf\u4e00\u4e2a\u50cf\u7d20Z buffer\u4e2d\u50a8\u5b58\u7684\u6df1\u5ea6\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u8986\u76d6\u4f4f\u5b83\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\u7684depth\u6bd4\u8bb0\u5f55\u7684depth\u5c0f\uff0c\u90a3\u4e48\u4e24\u4e2abuffer\u540c\u65f6\u66f4\u65b0\u6570\u636e\uff0c\u76f4\u5230\u6240\u6709\u7684\u4e09\u89d2\u5f62\u88ab\u904d\u5386\u5b8c\u6bd5\u3002Pseudo-code\u5982\u4e0b\uff1a</p> <pre><code>// Initialize depth buffer to infinite\n// During Rasterization:\nfor (each triangle T)\n    for (each sample (x,y,z) in T)\n         if (z &lt; zbuffer[x,y])\n             frambuffer[x,y] = rgb;\n            zbuffer[x,y] = z;\n        else;\n</code></pre> <p>\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u7b54\u6848\u662f<code>O(n)</code>\uff0c\u56e0\u4e3a\u5176\u5b9e\u6211\u4eec\u6ca1\u6709\u5bf9\u4e09\u89d2\u5f62\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4fbf\u662f\u6700\u91cd\u8981\u7684visibility algorithm\uff0cimplemented in hardware for all GPUs\u3002</p>"},{"location":"GAMES101/note.html#shading","title":"Shading","text":""},{"location":"GAMES101/note.html#illumination-shading-and-graphics-pipeline","title":"Illumination, Shading and Graphics Pipeline","text":"<p>\u4ecb\u7ecd\u5b8c\u4e86Z buffer\u4e4b\u540e\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u50cf\u7d20\u4e2d\u7684\u70b9\u539f\u6765\u5bf9\u5e94\u7684\u7a7a\u95f4\u4e2d\u7684\u4e09\u89d2\u5f62\u7a76\u7adf\u662f\u54ea\u4e00\u4e2a\u4e86\uff0c\u800c\u4e14\u4e5f\u80fd\u77e5\u9053\u989c\u8272\u662f\u4ec0\u4e48\u4e86\u3002\u4f46\u662f\u73b0\u5b9e\u751f\u6d3b\u4e2d\u989c\u8272\u53ea\u662f\u4e00\u65b9\u9762\uff0c\u5149\u7ebf\u7684\u4ecb\u5165\u8ba9\u6211\u4eec\u611f\u89c9\u5230\u4ec0\u4e48\u6837\u7684\u4e16\u754c\u662f\u201c\u771f\u5b9e\u7684\u201d\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u50cf\u7d20\u8fdb\u884c\u7740\u8272\uff08shading\uff09\u3002shading\u5b57\u5178\u7684\u5b9a\u4e49\uff1aThe darkening or coloring of an illustration or diagram with parallel lines or a block of color\u3002\u800cCG\u4e2d\u7684\u5b9a\u4e49\u662f\uff1aThe process of applying a material to an object\u3002</p> <p>\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u4e00\u79cdA Simple Shading Model: Blinn-Phong Reflectance Model\u3002\u89c1\u4e0b\u56fe\uff0c\u6839\u636e\u676f\u5b50\u53f3\u8fb9\u90e8\u5206\u533a\u57df\u7684\u9ad8\u5149\uff08Specular highlights\uff09\uff0c\u6211\u4eec\u731c\u6d4b\u5149\u6e90\u5728\u53f3\u8fb9\uff1b\u800c\u676f\u5b50\u53f3\u8fb9\u80fd\u591f\u63a5\u53d7\u5149\u7167\uff0c\u4f46\u662f\u6ca1\u6709\u76f4\u63a5\u53cd\u5c04\u5230\u6444\u50cf\u5934\u91cc\u9762\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u770b\u89c1\u8fd9\u4e00\u90e8\u5206\uff0c\u8fd9\u5c31\u662f\u6f2b\u53cd\u5c04\uff08Diffuse reflection\uff09\uff1b\u4f46\u662f\u540c\u65f6\uff0c\u676f\u5b50\u7684\u5de6\u9762\u6ca1\u6709\u76f4\u63a5\u63a5\u6536\u5230\u5149\u7167\uff0c\u800c\u662f\uff0c\u6bd4\u5982\u8bf4\uff0c\u63a5\u6536\u5230\u4e86\u5899\u4f53\u53cd\u5c04\u7684\u5149\uff0c\u8fd9\u79cd\u5c31\u79f0\u4e3a\u73af\u5883\u5149\u7167\uff08Ambient lighting\uff09\u3002</p> <p></p> <p>\u518d\u5b9a\u4e49\u4e00\u4e9b\u4e8b\u60c5\uff0c\u89c1\u4e0b\u56fe(Surface parameter\u53ef\u4ee5\u662fcolors, shinisess, ...)\uff1a</p> <p></p> <p>\u4f46\u662f\uff0cShading is Local\uff0ci.e.\uff0cNo shadows will be generated!\uff08shading \u2260 shadow\uff09\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5f00\u59cb\u5c1d\u8bd5\u8868\u793a\u676f\u5b50\u56fe\u4e2d\u6240\u6f14\u793a\u7684\u4e09\u79cd\u73b0\u8c61\uff1a</p> <p>Diffuse Reflection\uff1a\u6211\u4eec\u628a\u5149\u89c6\u4e3a\u4e00\u79cd\u80fd\u91cf\uff0c\u90a3\u4e48\u6f2b\u53cd\u5c04\u4e2d\u8fdb\u5165\u773c\u775b\u7684\u5149\u4eae\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a\u8fdb\u5165\u773c\u775b\u7684\u80fd\u91cf\u6709\u591a\u5c11\u3002\u8054\u60f3\u592a\u9633\u677f\uff1a\u628a\u5b83\u6b63\u5bf9\u592a\u9633\u81ea\u7136\u662f\u80fd\u91cf\u83b7\u53d6\u6700\u5927\u7684\u60c5\u51b5\uff0c\u800c\u5982\u679c\u677f\u5b50\u6709\u6240\u503e\u659c\uff0c\u90a3\u4e48\u80fd\u91cf\u5c31\u4e0d\u662fmax\u4e86\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u4ecb\u7ecdLambert's cosine law\uff1aIn general, light per unit area is proportional to \\(cos\\theta = l\\vdot n\\)\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u540c\u65f6\uff0c\u5149\u8fd8\u6709falloff\u6548\u5e94\uff1a\u4e00\u4e2a\u70b9\u5149\u6e90\u7684\u5149\u573a\u4e2d\uff0c\u4e00\u4e2a\u5355\u4f4d\u9762\u79ef\u63a5\u6536\u5230\u7684\u80fd\u91cf\u4e0e\u8ddd\u79bb\u7684\u5e73\u65b9\u6210\u53cd\u6bd4\uff1a</p> <p></p> <p>\u6709\u4e86\u4e0a\u9762\u4e24\u4e2a\u77e5\u8bc6\u70b9\u7684\u94fa\u57ab\uff0c\u6f2b\u53cd\u5c04\uff0c\u4e5f\u79f0\u4f5cLambertian Shading\uff0c\u7684\u8868\u8fbe\u65b9\u5f0f\u7ec8\u4e8e\u51fa\u73b0\u4e86\uff0c\u89c1\u4e0b\u56fe\u3002\u8fd9\u4e2a\u5f0f\u5b50\u5c55\u793a\u4e86\u7a76\u7adf\u6709\u591a\u5c11\u7684\u5149\uff0c\u6216\u8005\u8bf4\u80fd\u91cf\uff0c\u5230\u8fbe\u4e86Shading Point (\u800c\u4e0d\u662f\u4eba\u773c)\uff0c\u5e76\u5373\u5c06\u6563\u53d1\u51fa\u53bb\u3002\u4f46\u662f\u6ce8\u610f\u5230\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5176\u5b9e\u662findependent of view direction\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u7406\u60f3\u5316\u7684\u8ba4\u4e3a\u4e2d\uff0c\u6f2b\u53cd\u5c04\u7684\u5b9e\u8d28\u5176\u5b9e\u662fshading point\u5438\u6536\u4e86\u5165\u5c04\u5149\u7ebf\u7684\u80fd\u91cf\uff0c\u7136\u540e\u5747\u5300\u7684\u6563\u53d1\u51fa\u53bb\u3002\u5f53\u7136\uff0c\u5173\u4e8e\u989c\u8272\uff0c\u7269\u4f53\u8868\u9762\u989c\u8272\u6240\u62c6\u5206\u6210\u7684RGB\u4e09\u901a\u9053\u5404\u81ea\u7684diffuse coefficient\u5c31\u8574\u542b\u4e86\u989c\u8272\u7684\u4fe1\u606f\u3002\u5f53\u7136\uff0c\u8fd9\u4e2aBlinn-Phong Reflectance Model\u53ea\u662f\u4e00\u4e2a\u7ecf\u9a8c\u6a21\u578b\uff0c\u5e76\u4e0d\u662f\u5b8c\u5168\u7684\u771f\u662f\u7684\u7269\u7406\u6a21\u578b\uff0c\u66f4\u591a\u7684accuracy detail\u5728ray tracing\u91cc\u9762\u4f1a\u518d\u6b21\u63d0\u53ca\u3002</p> <p></p>"},{"location":"GAMES101/note.html#shading-pipeline-and-texture-mapping","title":"Shading, Pipeline and Texture Mapping","text":"<p>\u5728Blinn-Phong\u4e2d\uff0c\u8ba4\u4e3a\u5982\u679c\u4ea7\u751f\u4e86\u9ad8\u5149\uff0c\u662f\u56e0\u4e3a\u5149\u7ebf\u53d1\u751f\u4e86\u955c\u9762\u53cd\u5c04\uff0c\u7136\u540e\u4eba\u773c\u6b63\u597d\u80fd\u591f\u63a5\u53d7\u3002\u4f46\u662f\uff0cBlinn-Phong\u4e5f\u505a\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u5904\u7406\uff1aV close to mirror dirction -&gt; half vector\uff08\u534a\u7a0b\u5411\u91cf\uff09near normal\u3002</p> <p></p> <p>\u9996\u5148\u662f\u6ce8\u610f\u5230\uff1a\u8fd9\u4e2a\u6a21\u578b\u8c8c\u4f3c\u662f\u6ca1\u6709\u8003\u8651l\u548cn\u7684\u5939\u89d2\u5e26\u6765\u7684\u80fd\u91cf\u635f\u5931\u95ee\u9898\uff0c\u56e0\u4e3a\u6bd5\u7adfBlinn-Phong\u53ea\u662f\u4e00\u4e2a\u7ecf\u9a8c\u6a21\u578b\uff0c\u8fd9\u91cc\u7701\u7565\u4e86\uff1b\u5176\u6b21\u662f\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528bivector\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5411\u91cf\u5f88\u597d\u7b97\uff0c\u5f0f\u5b50\u5982\u4e0a\uff0c\u8ba1\u7b97\u91cf\u4e0d\u5927\uff0c\u800c\u5982\u679c\u8ba1\u7b97\u4e86\u53cd\u5c04\u5149\u7ebf\u65b9\u5411\u5411\u91cfr\u548cv\u7684\u89d2\u5ea6\u4f59\u5f26\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6a21\u578b\u5c31\u662fPhong\u6a21\u578b\uff0ci.e.\uff0cBlinn Phong\u662fPhong\u6a21\u578b\u7684\u6539\u8fdb\u7248\uff1b\u6700\u540e\uff0c\u4e3a\u4ec0\u4e48\u6709p\u6307\u6570\u6b21\u5e42\uff1f\u56e0\u4e3a\u867d\u7136\u8bf4\u786e\u5b9e\uff0ccos\u80fd\u591f\u8868\u793a\u65b9\u5411\u9519\u5dee\u800c\u5e26\u6765\u7684\u80fd\u91cf\u635f\u5931\uff08\u8868\u73b0\u4e3a\u5149\u4e0d\u9ad8\u4eae\uff09\uff0c\u4f46\u662f\u73b0\u5b9e\u662f\uff1a\u6211\u5728bivector\u4e0e\u6cd5\u5411\u91cfn\u91cd\u5408\u7684\u65f6\u5019\u80fd\u591f\u770b\u5230\u9ad8\u4eae\uff0c\u800c\u5728\u504f\u79bb\u4e86\u4e00\u5b9a\u7684\u5c0f\u89c6\u89d2\u540e\uff0c\u5149\u4eae\u8fc5\u901f\u4e0b\u964d\uff0c\u4e00\u76f4\u5230\u504f\u5dee\u4e0d\u591a\u4e00\u5b9a\u89d2\u5ea6\u4e4b\u540e\uff0c\u5c31\u6ca1\u6709\u9ad8\u5149\u4e86\u3002\u56e0\u6b64\uff0c\u7528\\(cos^p\\alpha\\)\u7684\u51fd\u6570\u5f62\u72b6\u80fd\u591f\u66f4\u597d\u5730\u62df\u5408\u9ad8\u5149\u73b0\u8c61\u3002\u51fd\u6570\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e0b\u9762\u8fd9\u4e2a\u56fe\u5f88\u597d\u5730\u5c55\u793a\u4e86ks\u548cp\u4e24\u4e2a\u53c2\u6570\u5e26\u6765\u7684\u5f71\u54cd\uff1a</p> <p></p> <p>\u6700\u540e\u5269\u4e0b\u73af\u5883\u5149\uff1a\u5728Blinn Phong\u4e2d\u505a\u4e86\u4e00\u4e2a\u5927\u80c6\u7684\u5047\u8bbe\uff1a\u5168\u5c40\u7684\u73af\u5883\u5149\u90fd\u662f\u4e00\u6837\u7684\uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u5e38\u6570\uff08\u4f46\u73b0\u5b9e\u5e76\u4e0d\u5982\u6b64\uff0c\u800c\u771f\u6b63\u7684\u73af\u5883\u5149\u5728\u4e4b\u540e\u7684\u5168\u5c40\u5149\u7167\u4e2d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a </p> <p>\u90a3\u4e48\u6700\u540e\uff0cBlinn-Phong Reflection Model\u7ec8\u4e8e\u8bde\u751f\u4e86(\u5f53\u7136\uff0c\u8981\u6ce8\u610fn l h\u7b49\u5411\u91cf\u90fd\u662fnormalize\u540e\u7684\u5355\u4f4d\u5411\u91cf)\uff1a</p> <p></p> <p>\u63a5\u4e0b\u6765\u4ecb\u7ecd\u7740\u8272\u9891\u7387\uff0cShading Frequencies\u3002\u4e4b\u524d\u7684\u6a21\u578b\u4e00\u76f4\u5728\u63d0\u5230Shading Point\uff0c\u90a3\u4e48\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0cShading Point\u9009\u54ea\u4e9b\u70b9\u5462\uff1f\u4f9d\u6211\u4e2a\u4eba\u770b\u6cd5\uff0c\u9009Shading Point\u4e5f\u80fd\u7b97\u662f\u4e00\u79cdsampling\u3002\u90a3\u4e48Shading Frequencies\u662f\u5982\u4f55\u5f71\u54cd\u56fe\u50cf\u7684\u5462\uff1f\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e0a\u9762\u4e09\u5f20\u56fe\u5bf9\u5e94\u7684\u662f\u4e09\u79cdShading Point\u91c7\u6837\u7b56\u7565\uff1a\u7b2c\u4e00\u5f20\u56fe\u662f\u4e00\u4e2a\u9762\u7247\u91cc\u9762\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u6cd5\u5411\u91cf\uff0c\u6311\u4e00\u4e2a\u70b9\u7b97\u51fa\u7740\u8272\uff0c\u7136\u540e\u8ba4\u4e3a\u9762\u7247\u91cc\u9762\u7684\u7740\u8272\u90fd\u662f\u4e00\u6837\u7684\uff1b\u7b2c\u4e8c\u5f20\u56fe\u662f\u6bcf\u4e00\u4e2atriangle\u7684\u4e09\u4e2a\u9876\u70b9\u90fd\u7b97\u51fa\u5404\u81ea\u6cd5\u5411\u91cf\uff08\u548b\u6c42\uff1f\u9a6c\u4e0a\u4f1a\u8bf4\uff09\uff0c\u7b97\u51fa\u4e09\u4e2a\u70b9\u7684\u7740\u8272\uff0c\u7136\u540e\u901a\u8fc7\u5dee\u503c\u65b9\u6cd5\uff08\u540e\u9762\u4f1a\u8bf4\uff09\u6765\u586b\u5145\u4e09\u89d2\u5f62\u5185\u90e8\u6bcf\u4e00\u4e2a\u70b9\u7684\u7740\u8272\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u8fc7\u6e21\u6548\u679c\uff1b\u6700\u540e\u662f\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u8fdb\u884c\u7740\u8272\u7684\u8ba1\u7b97\u3002\u4e0a\u9762\u8fd9\u4e2a\u56fe\u7684\u6f14\u793a\u6548\u679c\u8fd8\u662f\u5f88\u660e\u663e\u7684\u3002</p> <p>\u7b2c\u4e00\u79cd\u5bf9\u5e94\u7684\u5c31\u662fFlat Shading\uff1aTriangle face is flat, so every point in it has the same normal vector\u3002\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u5149\u6ed1\u8868\u9762\u975e\u5e38\u4e0d\u53cb\u597d\u3002\u7b2c\u4e8c\u79cd\u5bf9\u5e94\u7684\u662fGouraud Shading\uff08\u9ad8\u6d1b\u5fb7\u7740\u8272\uff09\uff1aInterpolate colors from vertices across traingle (we can calculate the normal vector of each vertex)\u3002\u7b2c\u4e09\u79cd\u5bf9\u5e94\u7684\u662fPhong Shading\uff1aInterpolate normal vectors across each triangle and compute full shading model at each pixel\u3002</p> <p>\u90a3\u4e48\u7559\u4e0b\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e00\u4e2a\u662f\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u600e\u4e48\u6c42\uff1f\u8fd9\u4e2a\u70b9\u80af\u5b9a\u88ab\u591a\u4e2a\u4e09\u89d2\u5f62\u6240\u5171\u6709\uff0c\u90a3\u4e48\u7528\u8fd9\u4e9b\u4e09\u89d2\u5f62\u7684\u6cd5\u5411\u91cf\u6765\u6c42\u4e0d\u5c31\u53ef\u4ee5\u4e86\u5417\uff1f\u4e8b\u5b9e\u4e5f\u662f\u5982\u6b64\uff0c\u4f46\u662f\u5173\u4e8e\u662f\u5411\u91cf\u7b80\u5355\u76f8\u52a0\uff0c\u8fd8\u662f\u6309\u7167\u4e09\u89d2\u5f62\u9762\u79ef\u52a0\u6743\u76f8\u52a0\uff0c\u5b9e\u9a8c\u8bc1\u660e\u540e\u8005\u6548\u679c\u66f4\u597d\uff0c\u4f46\u662f\u524d\u8005\u66f4\u4e3a\u7b80\u5355\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u662f\u5982\u4f55\u7528\u9876\u70b9\u6cd5\u5411\u91cf\u6c42\u51fa\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7684\u6cd5\u5411\u91cf\u5462\uff1f\u8fd9\u9700\u8981\u7528\u5230\u91cd\u5fc3\u5dee\u503c(Barycentric Interpolation)\uff0c\u4e4b\u540e\u4f1a\u4ecb\u7ecd\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u4ecb\u7ecd\u6e32\u67d3\u7ba1\u7ebf\uff1aGraphic (Real-time Tendering) Pipeline\u3002\u8fd9\u91cc\u7684Pipeline\u5176\u5b9e\u662f\u4e00\u79cd\u6d41\u7a0b\uff0c\u4ecb\u7ecd\u4e86\u7a76\u7adf\u662f\u5982\u4f55\u8fdb\u884c\u6e32\u67d3\u7684\u3002\u5982\u4e0b\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0cRasterization\u5305\u542b\u4e86Z-Buffering\uff0c\u5224\u65ad\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7a76\u7adf\u662f\u7531\u54ea\u4e00\u4e2a\u4e09\u89d2\u5f62\u7ba1\uff1b\u5173\u4e8eshading\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\uff0c\u5982\u679c\u662fGouraud Shading\u90a3\u4e48\u5176\u5b9e\u5728Vertex Processing\u91cc\u9762\u5c31\u53ef\u4ee5\u8fdb\u884c\u7740\u8272\u4e86\uff0c\u800c\u5982\u679c\u662fPhong Shading\u90a3\u4e48\u5c31\u8981\u5728Fragment Processing\u91cc\u9762\u7740\u8272\u3002\u5173\u4e8e\u624b\u6413\u7740\u8272\u5668Shader\uff0c\u63a8\u8350\u7f51\u7ad9\uff1ahttp://shadertoy.com/view/ld3Gz2\u3002\u6700\u7ec8\u5e0c\u671b\u5b9e\u73b0\u7684\uff0c\u5c31\u662fHighly Complex 3D Scence in Realtime\u3002</p> <p>\u6700\u540e\u4ecb\u7ecdTexture Mapping\u3002\u4e4b\u524d\u7684Blinn Phong\u6a21\u578b\u4e2d\u63cf\u8ff0\u7684\u662f\u5149\u7684\u80fd\u91cf\uff0c\u4f46\u662f\u73b0\u5b9e\u4e2d\uff0c\u5728\u540c\u4e00\u4e2a\u5149\u6e90\u63a5\u6536\u4e0b\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u84dd\u8272\uff0c\u6216\u8005\u662f\u9ec4\u8272\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u9700\u8981\u7eb9\u7406\u5c5e\u6027\u6765\u8868\u793a\u8fd9\u4e00\u90e8\u5206\u7684\u4fe1\u606f\u4e86\uff0c\u7ecf\u5178\u7684\u6709\u6f2b\u53cd\u5c04\u4e2d\u7684k_d\u53c2\u6570\u7b49\u3002\u600e\u4e48\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684\u5c5e\u6027\uff1f\u9996\u5148\u6211\u4eec\u8981\u5b9a\u4e49\uff1a\u4e09\u7ef4\u7269\u4f53\u8868\u9762\u662f\u4e8c\u7ef4\u7684\u3002\u90a3\u4e48\u7eb9\u7406texture\u5c31\u662f\u4e00\u5f20\u56fe\uff0c\u6211\u4eec\u4f1a\u628a\u8fd9\u4e2a\u56fe\u201c\u8499\u5728\u4e09\u7ef4\u7269\u4f53\u8868\u9762\u201d\u3002</p> <p></p> <p>\u90a3\u4e48\u6211\u5c31\u5e0c\u671b\u6709\u4e00\u4e2a\u5bf9\u5e94\u5173\u7cfb\uff0c\u4f7f\u5f97\uff1aEach triangle vertex is assigned to a texture coordinate(u,v)\u3002\u901a\u5e38\uff0c\u7ea6\u5b9a\u4fd7\u6210u v\u7684\u8303\u56f4\u662f[0, 1]\u3002\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\u600e\u4e48\u6c42\u5462\uff1f\u8fd9\u91cc\u76f4\u63a5\u9ed8\u8ba4\u6211\u4eec\u5c06\u4f1a\u77e5\u9053\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\u662f\u4ec0\u4e48\uff0c\u800c\u4e4b\u540e\u4f1a\u8bb2\u3002</p> <p></p> <p>\u6700\u6700\u540e\u7684\u4e00\u4e2a\u5751\uff1a\u5982\u4f55\u4e09\u89d2\u5f62\u5dee\u503c\uff1f\u4e09\u89d2\u5f62\u4e09\u4e2a\u9876\u70b9\u6709\u5404\u81ea\u7684\u5c5e\u6027\uff0c\u5982\u4f55\u5b9a\u4e49or\u7b97\u4e09\u89d2\u5f62\u5185\u90e8\u7684\u70b9\u5c5e\u6027\uff0c\u4f7f\u5f97\u4e09\u89d2\u5f62\u770b\u8d77\u6765\u6709\u4e00\u79cd\u8fc7\u6e21\u6548\u679c\uff1f\u4e0b\u8282\u8bfe\u4f1a\u8bf4\u3002</p>"},{"location":"GAMES101/note.html#texture-mapping","title":"Texture Mapping","text":"<p>\u9996\u5148\u4ece\u91cd\u5fc3\u5750\u6807\u5f00\u59cb\u8bf4\u8d77\uff0c\u8fd9\u662f\u4e3a\u4e86\u89e3\u51b3\u5982\u4f55\u5dee\u503c\u8ba1\u7b97\u7684\u95ee\u9898\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u5e0c\u671b\u5dee\u503c\uff1f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671bObtain smoothly varying values across triangles\u3002\u90a3\u4e48\u5dee\u503c\u4ec0\u4e48\u5462\uff1f\u6709Texture coordinates, colors, normal vectors\u7b49\u7b49\u5c5e\u6027\u3002\u90a3\u4e48\u5982\u4f55\u5dee\u503c\uff1f\u91cd\u5fc3\u5750\u6807\u5c31\u662f\u5173\u952e\u3002</p> <p>\u5728\u4e00\u4e2a\u4e09\u89d2\u5f62\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u90a3\u4e48\u6ee1\u8db3\uff1a  \u5f53\u4e09\u4e2a\u53c2\u6570\u90fd\u662f1/3\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f\u91cd\u5fc3\u5750\u6807\u4e86\uff1b\u800c\u5982\u679c\u662f\u4efb\u610f\u4e00\u4e2a\u70b9\u5462\uff1f\u516c\u793a\u5982\u4e0b\uff1a</p> <p></p> <p>\u800c\u516c\u5f0f\u63a8\u5e7f\u4e00\u4e0b\uff1a\\(V=\\alpha V_A + \\beta V_B + \\gamma V_C\\)\uff0c\\(V_i\\) canbe positions, texture, coordinates, color, normal vector, depth, material attributes ...</p> <p>\u800c\u8fd9\u79cd\u64cd\u4f5c\u4e5f\u4f1a\u6709\u4e00\u5b9a\u7684\u95ee\u9898\uff1a\u6bd4\u5982\u8bf4texture magnification\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0cEasy Case\uff0c\u5982\u679c\u8bf4\u6211\u6709\u5f88\u9ad8\u5206\u8fa8\u7387\u7684\u56fe\uff0c\u4f46\u662f\u7eb9\u7406\u592a\u5c0f\u4e86\uff0c\u56e0\u6b64(x, y)\u6620\u5c04\u8fc7\u53bb\u540e\u7684(u, v)\u53ef\u80fd\u4e0d\u662f\u6574\u6570\uff0c\u56e0\u6b64\u8981round\u4e3a\u6574\u6570\uff0c\u90a3\u4e48\u8fd9\u5c31\u8868\u73b0\u4e3a\uff1a\u591a\u4e2a\u50cf\u7d20\u805a\u5728\u4e00\u8d77\u5bf9\u5e94\u7684\u662ftexture\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4ece\u800c\u9020\u6210\u4e86\u65b9\u683c\u7684\u611f\u89c9\u3002</p> <p></p> <p>\u5982\u4f55\u89e3\u51b3\u5462\uff1f\u53cc\u7ebf\u6027\u63d2\u503c\uff1aBilinear Interpolation\u3002\u89c1\u4e0b\u56fe\uff1a\u5982\u679c(x, y)\u843d\u5728\u4e86\u7ea2\u70b9\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5982\u679c\u91c7\u7528Nearest\u627e\u5230\u53f3\u4e0a\u89d2\u7684\u4e2d\u5fc3\u70b9\u6240\u5bf9\u5e94\u7684texel\uff0c\u90a3\u4e48\u5c31\u4f1a\u9020\u6210\u4e00\u4e2a\u540e\u679c\uff1a\u843d\u5728u11\u7684\u7ea2\u70b9\u7684\u5c5e\u6027\u503c\u90fd\u662f\u8fd9\u4e2atexel\u7684value\uff0cmagnification\u5c31\u51fa\u73b0\u4e86\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u770b\u8eab\u8fb9\u7684\u56db\u4e2a\u4e2d\u5fc3\u70b9\u3002\u6ce8\u610f\u5230s t\u53c2\u6570\uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u5728\u4f7f\u7528\u5f15\u7d22\u4f5c\u4e3a\u5355\u4f4d\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u662f\u90fd\u662f\u5c0f\u4e8e1\u7684\u6570\u5b57\uff0c\u56e0\u4e3au01 u11\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6570\u5b57\u90fd\u662f1\uff08\u6309\u7406\u8bf4\uff0cu v\u5750\u6807\u7cfb\u8303\u56f4\u90fd\u662f0-1\uff0c\u8fd9\u91cc\u4e3a\u4e86\u5951\u5408texel\u7684\u6982\u5ff5\uff0c\u540c\u6837\u8d4b\u4e88\u4e86\u4e00\u5957\u5f15\u7d22\uff0c\u6211\u4eec\u8fd9\u91cc\u7684s t\u90fd\u662f\u7528\u5f15\u7d22\u6765\u4f5c\u4e3a\u57fa\u51c6\u7684\uff09\u3002\u56e0\u6b64\uff0c\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5c31\u53ef\u4ee5\u8fdb\u884c\u7ebf\u6027\u5dee\u503c\u4e86\u3002\\(f(x,y)=lerp(t,u_o,u_1)\\)\u4ee3\u8868\u7ad6\u76f4\u65b9\u5411\u4e0a\u8fdb\u884c\u4e86\u4e00\u6b21\u7ebf\u6027\u63d2\u503c\uff0c\u800c\u53cc\u5411\u5dee\u503c\u5c31\u662f\u6c34\u5e73\u548c\u6570\u503c\u90fd\u8981\u5dee\u503c\u3002</p> <p></p> <p>\u90a3\u4e48\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0cHard Case\uff0c\u5982\u679c\u7eb9\u7406\u5f88\u5927\uff0c\u4f46\u662f\u6211\u7684\u56fe\u7684resolution\u8f83\u5c0f\uff0c\u90a3\u4e48texture magnification\u73b0\u8c61\u66f4\u4e25\u91cd\u3002\u5982\u4e0b\u56fe\u3002</p> <p></p> <p>\u95ee\u9898\u662f\u4ec0\u4e48\u5462\uff1f\u5df2\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u8fd1\u5904\u7684\u50cf\u7d20\u6295\u5c04\u5230\u7684Texture\u91cc\u9762\u7684\u8986\u76d6\u9762\u79ef\u8f83\u5c0f\uff0c\u5c1a\u4e14\u8bef\u5dee\u4e0d\u5927\uff0c\u4f46\u662f\u8fdc\u5904\u7684\u50cf\u7d20\u6295\u5c04\u8fc7\u53bb\uff0c\u8986\u76d6\u7684\u9762\u79ef\u5f88\u5927\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u91c7\u53d6\u5e73\u5747\u542c\u8d77\u6765\u5c31\u602a\u602a\u7684\u3002</p> <p></p> <p>\u90a3supersampling\u80fd\u4e0d\u80fd\u89e3\u51b3\u7684\uff1f\u80fd\uff0c\u5373\u964d\u4f4e\u8986\u76d6\u533a\u57df\uff0c\u4f46\u662f\u901f\u5ea6\u5f88\u6162\u3002\u6709\u6ca1\u6709\u66f4\u597d\u7684\u529e\u6cd5\uff1f\u4e4b\u524d\u6211\u4eec\u90fd\u662f\u7528texel\u4e2d\u5fc3\u70b9\u4fe1\u606f\u6765\u8fdb\u884c\u5dee\u503c\uff0c\u662fPoint Query\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u8f6c\u5316\u4e3aRange Query\u3002\u56e0\u6b64\u5f15\u5165\u4e86Mipmap\u6982\u5ff5\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8fdb\u884c\u8303\u56f4\u67e5\u8be2\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u5feb\uff0c\u4f46\u53ea\u80fd\u505a\u8fd1\u4f3c\u7684\u6b63\u65b9\u5f62\u7684\u67e5\u8be2\u3002\u6211\u4eec\u5bf9\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u56fe\u5f62\u80fd\u591f\u9010\u6b65\u964d\u4f4e\u5206\u8fa8\u7387\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fd9\u4e00\u6b65\u53ef\u4ee5\u5728\u5f97\u5230texture\u4e4b\u540e\u63d0\u524d\u8ba1\u7b97\u51fa\u6765\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u89c6\u89c9\u91d1\u5b57\u5854\uff0c\u6216\u8005\u53eb\u505aMip Hierarchy\u3002\u90a3\u4e48\u6211\u4eec\u5f15\u5165\u7684\u989d\u5916\u5b58\u50a8\u662f\u591a\u5c11\u5462\uff1f\u5982\u679cLevel 0\u7684\u56fe\u7684\u5b58\u50a8\u91cf\u4e3a1\uff0c\u90a3\u4e48\u4e4b\u540e\u5176\u5b9e\u662f4/3\u3002</p> <p></p> <p>\u90a3\u4e48\u5982\u4f55\u77e5\u9053\u4e00\u4e2a\u50cf\u7d20\u6620\u5c04\u5230\u7eb9\u7406\u4e0a\u7684\u533a\u57df\u5927\u5c0f\u5462\uff1f\u53ef\u4ee5\u501f\u52a9\u50cf\u7d20\u90bb\u5c45\u4e2d\u5fc3\u70b9\u7684\u4fe1\u606f\u3002\u5982\u4e0b\uff0c\u6211\u5e0c\u671b\u77e5\u9053\u5de6\u8fb9\u5c0f\u6b63\u65b9\u5f62\u5728\u7eb9\u7406\u4e0a\u7684\u8986\u76d6\u9762\u79ef\uff0c\u90a3\u4e48\u501f\u52a9\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u4e94\u4e2a\u90fd\u6295\u5f71\u5230\u7eb9\u7406\u4e0a\uff0c\u7136\u540e\u5229\u7528\u8fd9\u4e94\u4e2a\u70b9\u5c31\u80fd\u5927\u6982\u77e5\u9053\u8986\u76d6\u9762\u79ef\u957f\u4ec0\u4e48\u6837\u5b50\u4e86\uff0c\u5982\u53f3\u56fe\u7ea2\u8272\u533a\u57df\u3002\u6211\u4eec\u7528\u8fb9\u957f\u4e3aL\u7684\u6b63\u65b9\u5f62\u62df\u5408\u8fd9\u4e00\u7247\u533a\u57df\uff0cL\u7684\u8fb9\u957f\u516c\u5f0f\u5982\u4e0b\uff08\u5176\u5b9e\u662f\u6295\u5f71\u540e\u7684(u,v)00\u523001,10\u4e24\u4e2a\u8ddd\u79bb\u4e2d\u7684\u6700\u5927\u503c\uff09\u3002\u90a3\u4e48\u5982\u4f55\u7528Mipmap\u6c42\u8fd9\u4e2a\u6b63\u65b9\u5f62\u533a\u57df\u8986\u76d6\u7684texture\u503c\u7684\u5e73\u5747\u503c\uff1f\u90a3\u4e48\u5de7\u5999\u4e4b\u5904\u5c31\u5728\u4e8e\uff0c\u6211\u77e5\u9053\u8fd9\u4e2a\u533a\u57df\u5728\\(D=Log_2 L\\)\u5c42\u7684Mipmap\u4e2d\u4e00\u5b9a\u4f1a\u7f29\u5c0f\u6210\u8fd1\u4f3c\u4e8e1\u4e2a\u50cf\u7d20\u7684\u5927\u5c0f\u533a\u57df\uff01\uff01\uff0c\u56e0\u6b64\u5c31\u80fd\u975e\u5e38\u5feb\u7684\u77e5\u9053\u8fd9\u4e2a\u5e73\u5747\u503c\u662f\u591a\u5c11\u3002</p> <p></p> <p>\u6211\u4eec\u63d0\u5230\uff0c\u662f\u8fd1\u4f3c\u4e0e\u4e00\u4e2a\u50cf\u7d20\uff0c\u5176\u5b9e\u5982\u679c\u9762\u79ef\u771f\u7684\u662f\u4e00\u4e2a\u50cf\u7d20\u7684\u8bdd\uff0c\u53ef\u80fd\u7ed9\u662f\u7c7b\u4f3c\u4e8e1.8\u5c42\u8fd9\u79cd\u6570\u636e\u3002\u90a3\u4e48\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u6cd5\u53ef\u4ee5\u518d\u8fdb\u4e00\u6b65\uff1aTrilinear Interpolation\u3002\u5047\u5982\u8bf4\u662f1.8\u5c42\uff0c\u90a3\u4e48\u5c31\u662f1\u5c42\u7684\u4f4d\u7f6e\u8fdb\u884c\u4e00\u6b21\u53cc\u5411\u5dee\u503c\uff0c2\u5c42\u8fdb\u884c\u4e00\u6b21\u53cc\u5411\u5dee\u503c\uff0c\u4e24\u4e2a\u503c\u518d\u6839\u636eD\u503c\u8fdb\u884c\u5dee\u503c\u8ba1\u7b97\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u8fd9\u79cd\u4e09\u5dee\u503c\u542c\u8d77\u6765\u5f88\u6709\u9053\u7406\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6a21\u7cca\u5316\u3002\u56e0\u4e3a\u6bd5\u7adf\uff0cD\u8d8a\u9ad8\uff0c\u8d8a\u6a21\u7cca\uff08\u4e4b\u524d\u7684\u56fe\u4e5f\u80fd\u76f4\u89c2\u611f\u53d7\u5230\uff09\uff1b\u540c\u65f6\uff0c\u5f88\u591a\u50cf\u7d20\u6295\u5c04\u5230\u7eb9\u7406\u4e0a\u9762\uff0c\u8986\u76d6\u9762\u79ef\u7ec6\u957f\uff0c\u7528\u6b63\u65b9\u5f62\u6765\u62df\u5408\u5c31\u4f1aoverblur\u3002\u90a3\u4e48\u56e0\u6b64\u8bbe\u8ba1\u4e86Anisotropic Filtering\uff08\u5404\u5411\u5f02\u6027\u8fc7\u6ee4\uff09\u3002\u5982\u4e0b\u56fe\uff1a\u6709\u4e86Ripmap\uff0c\u539f\u6765\u7ec6\u957f\u7684\u8986\u76d6\u533a\u57df\u53ef\u4ee5\u7528\u957f\u65b9\u5f62\u5305\u4f4f\uff0c\u90a3\u4e48overblur\u4f1a\u5f97\u5230\u7f13\u89e3\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5404\u5411\u5f02\u6027\u8fc7\u6ee4\u7684\u5b58\u50a8\u91cf\u5c06\u4f1a\u662f\u539f\u6765\u7684\u4e09\u500d\u3002</p> <p></p> <p>\u540c\u65f6\uff0cTextures doesn't have to only represent colors\uff1a\u7eb9\u7406\u4e5f\u53ef\u4ee5\u8bb0\u5f55\u6cd5\u5411\u91cf\uff08normal / bump mapping\uff09\u7b49\u3002\u90a3\u4e48\u6cd5\u7ebf\u8d34\u56fe\u662f\u5728\u5e72\u4ec0\u4e48\uff1fAdding surface detail without adding more triangles\u3002\u5982\u4e0b\u56fe\uff0c\u9ed1\u7ebf\u4e3a\u539f\u6765\u7684\u7269\u4f53\u8868\u9762\uff0c\u800c\u4f7f\u7528\u4e86\u8d34\u56fe\uff0c\u9ad8\u5ea6\u4f1a\u6270\u52a8\uff0c\u4ece\u800c\u8089\u773c\u53ef\u89c1\u5730\u6cd5\u5411\u91cf\u65b9\u5411\u5c06\u4f1a\u53d1\u751f\u53d8\u5316\u3002</p> <p></p> <p>\u90a3\u4e48\u6cd5\u5411\u91cf\u7684\u6270\u52a8\u6570\u5b66\u4e0a\u5982\u4f55\u8868\u793a\uff1f\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\u7684\uff1a</p> <p></p> <p>\u62d3\u5c55\u52303D\u4e4b\u540e\uff0c\u516c\u793a\u5982\u4e0b\uff1a</p> <p></p> <p>\u6ce8\u610f\u8fd9\u4e2a\u516c\u5f0f\u662f\u9ed8\u8ba4\u771f\u5b9e\u4e16\u754c\u6cd5\u5411\u91cf\u662f(0, 0, 1)\uff01\u56e0\u6b64\u8fd9\u4e2a\u516c\u5f0f\u5728\u5b9e\u9645\u8fd0\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6cd5\u5411\u91cf\u6765\u8bf4\uff0c\u6211\u5148\u8f6c\u5316\u5b83\u5230\uff080, 0, 1\uff09\uff0c\u7136\u540e\u901a\u8fc7\u6cd5\u5411\u91cf\u8d34\u56fe\u8fdb\u884c\u6270\u52a8\uff0c\u7b97\u51fa\u4e00\u4e2a\u65b0\u7684\u6cd5\u5411\u91cf\uff0c\u7136\u540e\u8f6c\u5316\u5230\u539f\u6765\u4e16\u754c\u7684\u5750\u6807\u7cfb\u3002</p> <p>\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u7ec8\u7a76\u662f\u6539\u53d8\u51e0\u4f55\uff0c\u4ec5\u4ec5\u662f\u6539\u53d8\u4e86\u6cd5\u5411\u91cf\u6b3a\u9a97\u4eba\u773c\u3002\u56e0\u6b64\u53c8\u53d1\u660e\u4e86\u4e00\u79cdDisplacement mapping\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u79fb\u52a8\u4e86\u9876\u70b9\uff0c\u4f46\u662f\u4ee3\u4ef7\u662f\u9700\u8981supersampling\u3002</p>"},{"location":"GAMES101/note.html#geometry","title":"Geometry","text":""},{"location":"GAMES101/note.html#introduction","title":"Introduction","text":"<p>\u51e0\u4f55Geometry\u7684\u8868\u793a\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u4f46\u662f\u5927\u81f4\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e00\u7c7b\u662f\u9690\u5f0f\u8868\u8fbe\uff08Implicit\uff09\uff0c\u5982algebraic surface\uff0clevel sets\uff0cdistance functions\u7b49\uff1b\u4e00\u7c7b\u662f\u663e\u793a\u8868\u8fbe\uff08Explicit\uff09\uff0c\u5982point cloud\uff0cpolygon mesh\uff0csubdivision\uff0cNURBS\u7b49\u3002</p> <p>\u4ec0\u4e48\u662f\u9690\u5f0f\u8868\u8fbe\uff1f\u6211\u4e0d\u77e5\u9053\u70b9\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4f46\u662f\u6211\u77e5\u9053\u70b9\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u5355\u4f4d\u7403\u4e0a\u7684\u70b9\u7684\u9690\u5f0f\u8868\u8fbe\u5c31\u53ef\u4ee5\u662f\uff1a\\(x^2 + y^2 + z^2 = 1\\)\u3002\u66f4\u4e00\u822c\u5730\uff0c\\(f(x,y,z) = 0\\)\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f18\u70b9\u662f\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u51e0\u4f55\u4f53\u91cc\u9762\uff0c\u800c\u7f3a\u70b9\u662f\u5f88\u96be\u753b\u51fa\u6765\uff0c\u5f88\u62bd\u8c61</p> <p>\u90a3\u4e48\u663e\u793a\u8868\u8fbe\u5462\uff1fAll points are given directly or via parameter mapping\u3002\u4f8b\u5982\uff1a\\(f(u,v) = (cosu, cosv, sinu)\\)\uff0c\u90a3\u4e48\u8fd9\u4ee3\u8868\u7684\u4e00\u7cfb\u5217\u70b9\u5c31\u662f\u663e\u793a\u8868\u793a\u51fa\u6765\u7684\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f18\u70b9\u662f\u5f88\u5bb9\u6613\u753b\u51fa\u6765\uff0c\u4f46\u662f\u5f88\u96be\u5224\u65ad\u4e00\u4e2a\u70b9\u5728\u4e0d\u5728\u51e0\u4f55\u4f53\u91cc\u9762\u3002</p> <p>\u90a3\u4e48Best Representation\u7a76\u7adf\u662f\u4ec0\u4e48\u5462\uff1fThat depends on tasks\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u66f4\u591a\u7684\u9690\u5f0f\u8868\u8fbe\u548c\u663e\u793a\u8868\u8fbe\u3002</p> <p>\u5bf9\u4e8eimplicit\u6765\u8bf4\uff0c\u7b2c\u4e00\u79cd\u662f\u6570\u5b66\u516c\u5f0f\u7684\u8868\u793a\uff0c\u8fd9\u975e\u5e38\u4e0d\u76f4\u89c2\uff1b\u7b2c\u4e8c\u79cd\u662fConstructive Solid Geometry(CSG)\uff0c\u5c1d\u8bd5\u7528\u57fa\u672c\u51e0\u4f55\u5f62\u4f53\u4e4b\u95f4\u7684Boolean operations\u53bb\u5408\u6210\u590d\u6742\u7684\u51e0\u4f55\u4f53\uff1b\u7b2c\u4e09\u79cd\u662f\u8ddd\u79bb\u51fd\u6570\uff1aGiving minimum distance (could be signed distance) from anywhere to object\uff0c\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u8fdb\u8fd9\u4e2a\u77e5\u4e4e\u94fe\u63a5\uff1b\u7b2c\u56db\u79cd\u662fLevel Set Methods\uff0c\u601d\u60f3\u548c\u8ddd\u79bb\u51fd\u6570\u5176\u5b9e\u662f\u4e00\u6a21\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u662f\u8ddd\u79bb\u8868\u793a\u5728\u7f51\u683c\u91cc\u9762\u4e86\uff1b\u7b2c\u4e94\u79cd\u662f\u5206\u578b(Fractals)\uff0c\u4f8b\u5982\u96ea\u82b1\uff0c\u5f88\u50cf\u9012\u5f52\u3002</p> <p></p> <p></p> <p></p> <p>Implicit Representation\u7684\u4f18\u70b9\uff1a</p> <ul> <li>compact description(e.g, a function)</li> <li>certain queries easy(inside object, distance to surface)</li> <li>good for ray-to-surface intersection (more later)</li> <li>for simple shapes, exact description / no sampling error</li> <li>easy to handle changes in topology (e.g., handling fluid with distance function)</li> </ul> <p>\u540c\u65f6\u4e5f\u6709\u7f3a\u70b9\uff1adifficult to model complex shapes\u3002</p> <p>\u5bf9\u4e8eexplicit\u6765\u8bf4\uff0c\u7b2c\u4e00\u79cd\u662f\u70b9\u4e91\uff0c\u662f\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff0clist of points (x, y, z)\uff0c\u70b9\u4e91\u5bc6\u5ea6\u5f88\u5927\uff0c\u4e00\u822c\u70b9\u4e91\u4e4b\u540e\u4f1a\u8f6c\u5316\u4e3a\u591a\u8fb9\u5f62\u9762\u7247\uff1b\u7b2c\u4e8c\u79cd\u662f\u591a\u8fb9\u5f62\u9762\u7247\uff0cCG\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u5e38\u7528Wavefront Object File (.obj) Format\u8868\u793a\u3002\u4ec0\u4e48\u662fobj Format\uff1f\u5176\u5b9e\u5c31\u662f\uff1aa text file that specifies vertices, normals, texture, coordinates and their connectivities\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>v\u4ee3\u8868\u7684\u662f\u9876\u70b9\u5750\u6807\uff0cvt\u4ee3\u8868\u7684\u662f\u4e00\u7cfb\u5217\u7684\u7eb9\u7406\u5750\u6807\uff0cvn\u4ee3\u8868\u4e00\u7cfb\u5217\u7684\u6cd5\u5411\u91cf\uff0c\u6700\u540ef\u4ee3\u8868\u7684\u662fv-vt-vn\u5bf9\u5e94\u5173\u7cfb\u3002</p>"},{"location":"GAMES101/note.html#curves-and-surfaces","title":"Curves and Surfaces","text":"<p>\u66f2\u7ebf\u4e3b\u8981\u4ee5Bezier Curves\u8d1d\u585e\u5c14\u66f2\u7ebf\u5448\u73b0\uff0c\u662f\u663e\u793a\u8868\u8fbe\u7684\u4e00\u79cd\uff08\u56e0\u4e3a\u5b9e\u8d28\u662f\u7528\u53c2\u6570\u76f4\u63a5\u8868\u793a\u66f2\u7ebf\uff09\uff0c\u601d\u60f3\u662f\u7528\u4e00\u7cfb\u5217\u63a7\u5236\u70b9\u53bb\u5b9a\u4e49\u66f2\u7ebf\uff0c\u5982\u4e0b\u56fe\uff1a\u4e00\u5f00\u59cbp0 p1\u4e24\u70b9\uff0ct0\u65f6\u523b\u65b9\u5411\u5982\u56fe\uff1b\u4e4b\u540ep0-&gt;p3\uff0cp2 p3\u65b9\u5411t1\u65b9\u5411\u5982\u56fe\uff0c\u90a3\u4e48\u8fd9\u6837\u5c31\u80fd\u753b\u51fa\u4e00\u6761\u56fe\u4e2d\u7684\u66f2\u7ebf\u3002\u6240\u4ee5\u8bf4\uff0cp0-&gt;p3\u66f2\u7ebf\uff0c\u7528p1 p2\u4e24\u70b9\u63a7\u5236\u3002</p> <p></p> <p>\u66f4\u7279\u6b8a\u5730\uff0c\u6211\u4eec\u8003\u8651\u4e09\u4e2a\u70b9\u60c5\u51b5\u4e0b\u7684\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u800c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u7b97\u6cd5\u53eb\u505ade Casteljau\u7b97\u6cd5\uff0c\u800c\u753b\u51fa\u7684\u66f2\u7ebf\u4e5f\u53eb\u505aquadratic Bezier curve\u3002\u5982\u56fe\uff1a\u9760\u8003\u8651b0\u53d8\u5316\u5230b2\uff0c\u540c\u65f6\u4e00\u5f00\u59cb\u7684b0b1\u548cb1b2\u5207\u7ebf\u65b9\u5411\u5df2\u7ecf\u56fa\u5b9a\u3002\u5176\u5b9e\u8fd9\u4e2a\u65f6\u5019\uff0c\u8111\u4e2d\u80fd\u8111\u8865\u4e00\u4e2a\u753b\u9762\u3002\u90a3\u4e48\u6839\u636e\u7b97\u6cd5\uff0c\u5982\u679cb0-&gt;b2\u770b\u6210\u4e00\u4e2a0-&gt;1\u7684\u8fc7\u7a0b\uff08\u6216\u8005\u8bf4\uff0c\u6d88\u8017\u7684\u65f6\u95f4\u662f1\uff09\uff0c\u90a3\u4e48t\u65f6\u523b\u7684\u70b9\u4f4d\u4e8e\\(b_0^2\\)\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5982\u4f55\u6c42\u51fa\u6765\u7684\u5462\uff1f</p> <p>\u9996\u5148b0b1\u4e0a\u9009\u51fa\\(b_0^1\\)\uff0c\u6ee1\u8db3\uff1a\\(b_0b_0^1/b_0^1b_1=t/(1-t)\\)\uff0c\u518d\u5728b1b2\u4e0a\u9009\u51fa\\(b_1^1\\)\uff0c\u6ee1\u8db3\uff1a\\(b_1b_1^1/b_1^1b2=t/(1-t)\\)\uff0c\u6700\u540e\u8fde\u63a5\\(b_0^1b_1^1\\)\uff0c\u5728\u4e0a\u9762\u9009\u51fa\\(b_0^2\\)\uff0c\u6ee1\u8db3\\(b_0^1b_0^2/b_0^2b_1^1=t/(1-t)\\)\u3002\u56e0\u6b64\u8bf4\uff0c\u8fd9\u662f\u663e\u793a\u8868\u8fbe\uff0c\u56e0\u4e3a\u5b9e\u8d28\u662f\u53c2\u6570\u8868\u8fbe\u3002</p> <p></p> <p>\u90a3\u4e48\u56db\u4e2a\u70b9\u5462\uff1f\u4f9d\u7136\u5982\u4e0b\uff0c\u56fe\u4e2d\u6ee1\u8db3\uff1a\\(b_0b_0^1/b_0^1b_1 = b_1b_1^1/b_1^1b_2 = b_2b_2^1/b_2^1b_3 \\\\ = b_0^1b_0^2/b_0^2b_1^1 = b_1^1b_1^2/b_1^2b_2^1 = b_0^2b_0^3/b_0^3/b_0^3b_1^2 = t/(1-t)\\)</p> <p></p> <p>\u7ebf\u6027\u4ee3\u6570\u4e0a\u8868\u793a\u5982\u4e0b\u56fe:</p> <p></p> <p>\u90a3\u4e48\u4e0a\u9762\u662f\u4e00\u4e2a\u63a7\u5236\u70b9\u7684\u60c5\u51b5\uff0c\u6839\u636equadratic\u4e00\u8bcd\u4e5f\u770b\u51fa\u6765\u4e86\uff0c\u8fd9\u662f\u4e8c\u9636\u7684\u60c5\u51b5\uff0c\u800c\u5982\u679c\u662f\u4e24\u4e2a\u63a7\u5236\u70b9\uff0c\u5c31\u662f3\u9636\u3002\u90a3\u4e48n\u9636\u516c\u5f0f\u5982\u4e0b\uff1aBerstein form of a Bezier curve of order n\u3002</p> <p></p> <p>\u8d1d\u585e\u5c14\u66f2\u7ebf\u6709\u4e24\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff1a\u7b2c\u4e00\u4e2a\u662f\u5bf9\u8d1d\u585e\u5c14\u66f2\u7ebf\u8fdb\u884c\u4eff\u5c04\u53d8\u6362\uff0c\u53ea\u9700\u8981\u5bf9\u6240\u6709\u7684\u70b9\u8fdb\u884c\u4eff\u5c04\u53d8\u6362\uff0c\u7136\u540e\u518d\u8fd0\u884c\u4e00\u6b21de Casteljau\u7b97\u6cd5\u5373\u53ef\uff0c\u800c\u4e0d\u9700\u8981\u5bf9\u539f\u6765\u8fd9\u4e2a\u66f2\u7ebf\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884c\u4eff\u5c04\u53d8\u6362\uff1b\u7b2c\u4e8c\u4e2a\u662f\u8d1d\u585e\u5c14\u66f2\u7ebf\u4e00\u5b9a\u5728\u63a7\u5236\u70b9\u4eec\u6240\u5f62\u6210\u7684\u51f8\u5305\uff08Convex Hull\uff09\u4e4b\u5185\uff08\u53ef\u4ee5\u76f4\u89c2\u770b\u51fa\u6765\uff09\u3002</p> <p>\u4f46\u662f\u5982\u679c\u5f53\u8d1d\u585e\u5c14\u66f2\u7ebf\u9762\u4e34\u9ad8\u9636\u7684\u60c5\u51b5\uff0c\u5373\u63a7\u5236\u70b9\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u7684\u65f6\u5019\u66f2\u7ebf\u4e0d\u80fd\u5f88\u597d\u7684\u53cd\u6620\u63a7\u5236\u70b9\u7684\u8d70\u52bf\uff0c\u5982\u4e0b\u56fe\u3002\u56e0\u6b64\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u4e00\u822c\u56db\u4e2a\u63a7\u5236\u70b9\u63a7\u5236\u4e00\u6761\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u5373\uff1aPeicewise cubic Bezier the most common technique\u3002\u90a3\u4e48\u5982\u679cpiecewise\u64cd\u4f5c\uff0c\u90a3\u4e48\\(C^0\\)\u8fde\u7eed\u662f\u4fdd\u8bc1\u4e86\uff0c\u5373\u4e24\u4e2a\u8d1d\u585e\u5c14\u66f2\u7ebf\u5171\u7528\u4e00\u4e2a\u7aef\u70b9\uff0c\u4f46\u662f\u4f1a\u4e0d\u7981\u95ee\uff1a\u5982\u679c\u5e0c\u671b\u4e00\u9636\u5bfc\u4e5f\u8fde\u7eed\u5462\uff1f\u5373\u5207\u7ebf\u4e5f\u662f\u5171\u7528\u7684\uff1f\u90a3\u4e48\u8fd9\u5c31\u662f\\(C^1\\)\u8fde\u7eed\uff0c\u751a\u81f3\u53ef\u4ee5\u66f4\u9ad8\u9636\u8fde\u7eed\uff0c\u8fd9\u53eb\u505a\u66f2\u7387\u8fde\u7eed\u3002\u4e0d\u540c\u7c7b\u578b\u7684\u8fde\u7eed\uff0c\u6709\u5404\u81ea\u8fdb\u4e00\u6b65\u7684\u590d\u6742\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4e0d\u8fc7\u591a\u6d89\u53ca\u3002</p> <p></p> <p>\u800c\u66f2\u9762\uff08Surface\uff09\u8868\u8fbe\u660e\u663e\u66f4\u4e3a\u590d\u6742\uff0c\u5f53\u7136\u4e5f\u662f\u7528\u7684\u662f\u8d1d\u585e\u5c14\u66f2\u9762\u3002\u89c1\u4e0b\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u7406\u89e3\u8d1d\u585e\u5c14\u66f2\u9762\u662f\u600e\u4e48\u5f62\u6210\u7684\u3002\u90a3\u4e48\u6570\u5b66\u4e0a\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f</p> <p></p> <p>\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u9762\uff0c\u53ef\u4ee5\u5f97\u5230\u56db\u6761\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002\u4ece\u540c\u4e00\u7aef\u540c\u65f6\u51fa\u53d1\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u56db\u4e2a\u70b9\uff0c\u8fd9\u56db\u4e2a\u70b9\u5c06\u4f1a\u5728\u53e6\u4e00\u4e2a\u65b9\u5411\u4e0a\u5f62\u6210\u4e00\u4e2a\u4e2a\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u56e0\u6b64\u8fd9\u56db\u4e2a\u70b9\u626b\u5b8c\uff0c\u66f2\u9762\u5c31\u8bde\u751f\u4e86\u3002</p> <p></p> <p></p>"},{"location":"GAMES101/note.html#mesh-operation","title":"Mesh Operation","text":"<p>Mesh Division\u662f\u4e09\u89d2\u5f62\u7ec6\u5316\uff0c\u4ece\u800c\u63d0\u9ad8\u5206\u8fa8\u7387\uff1bMesh Simplification\u7b80\u5316\u4e09\u89d2\u5f62\uff0c\u4f46\u662f\u7b80\u5316\u8981\u6709\u4e00\u5b9a\u7684\u89c4\u5219\uff1bMesh Regularization\u4e09\u89d2\u5f62\u53ef\u80fd\u6709\u5927\u6709\u5c0f\uff0c\u6e32\u67d3\u4e0a\u5c31\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u9ebb\u70e6\u3002</p> <p>Mesh Division\u600e\u4e48\u505a\uff1f\u600e\u4e48\u5f15\u5165\u66f4\u591a\u7684\u4e09\u89d2\u5f62\uff1f\u4e09\u89d2\u5f62\u8d8a\u591a\uff0c\u8d8a\u80fd\u62df\u5408\u51fa\u8f83\u4e3a\u5149\u6ed1\u7684\u6a21\u578b\u3002\u8868\u9762\u7ec6\u5206\u4e2d\u7684\u4e00\u79cd\u4ee3\u8868\u7c7b\u578b\u2014\u2014Loop Division\uff08\u548c\u5faa\u73af\u6ca1\u6709\u5173\u7cfb\uff09\u2014\u2014\u5206\u4e3a\u4e24\u6b65\uff1a\u7b2c\u4e00\u6b65\u662f\u589e\u52a0\u4e09\u89d2\u5f62\u6570\u91cf\u3002\u5c31\u6bd4\u5982\u8bf4\u53d6\u4e09\u4e2a\u4e09\u89d2\u5f62\u7684\u4e09\u4e2a\u4e2d\u70b9\uff0c\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u5f62\u6210\u4e86\u56db\u4e2a\u4e09\u89d2\u5f62\u3002\u7b2c\u4e8c\u6b65\u662fAssign new vertex positions according to weights\u3002\u5982\u679c\u4ec5\u4ec5\u8fde\u6210\u56db\u4e2a\u4e09\u89d2\u5f62\uff0c\u90a3\u4e48\u5f88\u96be\u4ea7\u751f\u5149\u6ed1\u7684\u6548\u679c\uff0c\u8fd9\u53ef\u60f3\u800c\u77e5\uff0c\u56e0\u4e3a\u5e73\u9762\u8fd8\u662f\u90a3\u4e2a\u5e73\u9762\u3002\u56e0\u6b64\u6211\u5e0c\u671b\u65b0\u4ea7\u751f\u7684\u9876\u70b9\u4e0e\u539f\u6765\u7684\u65e7\u9876\u70b9\u90fd\u80fd\u591f\u4ea7\u751f\u4e00\u5b9a\u7684\u4f4d\u79fb\uff0c\u4ece\u800c\u4e3a\u62df\u5408\u5149\u6ed1\u5e73\u9762\u63d0\u4f9b\u53ef\u80fd\u6027\u3002</p> <p></p> <p>\u5bf9\u4e8e\u65b0\u7684\u9876\u70b9\u6765\u8bf4\uff0c\u66f4\u65b0\u89c4\u5219\u5982\u4e0b\u56fe\uff1b\u81f3\u4e8e\u6743\u91cd\u4e3a\u4ec0\u4e48\u957f\u8fd9\u4e2a\u6837\u5b50\uff0c\u4e2d\u95f4\u7684\u767d\u8272\u3001\u5c06\u8981\u66f4\u65b0\u4f4d\u7f6e\u7684\u70b9\u79bbA B\u70b9\u8f83\u8fd1\uff0c\u79bbC D\u8f83\u8fdc\uff0c\u56e0\u6b64A B\u70b9\u5728\u5750\u6807\u4e0a\u7684\u8d21\u732e\u5e94\u8be5\u662f\u8f83\u9ad8\u7684\u3002</p> <p></p> <p>\u90a3\u4e48\u65e7\u9876\u70b9\u5462\uff1f\u8fd9\u4e2a\u65e7\u9876\u70b9\u8981\u4f30\u8ba1\u5230\u81ea\u5df1\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u53c8\u8981\u8003\u8651\u5230\u5468\u56f4\u7684\u70b9\u7684\u5750\u6807\u3002\u56e0\u6b64\u89c4\u5219\u5982\u4e0b\uff1a\u5176\u4e2dvertex degree\u4ee3\u8868\u8fd9\u4e2a\u9876\u70b9\u88ab\u51e0\u4e2a\u4e09\u89d2\u5f62\u5171\u7528\u3002</p> <p></p> <p>\u4ece\u4e0b\u9762\u8fd9\u5f20\u56fe\u53ef\u4ee5\u770b\u51fa\u6765\uff1aLoop Division\u8868\u73b0\u5f88\u597d\u3002</p> <p></p> <p>\u90a3\u4e48Mesh Simplification\u7684goal\u662freduce number of mesh elements while maintaing the overall shape\u3002\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4e0d\u5e0c\u671b\u4e09\u89d2\u5f62\u90a3\u4e48\u591a\uff0c\u6bd4\u5982\u8bf4\u6e38\u620f\u91cc\u9762\uff0c\u4f1a\u6709\u7b80\u5316\u7684\u9700\u6c42\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u65b9\u6cd5\u53eb\u505a\u8fb9\u574d\u584c\uff08edge collapsing\uff09\u3002\u4f46\u662f\u8fd9\u7edd\u975e\u7b80\u5355\u7684\u4e8b\u60c5\uff1a\u54ea\u4e9b\u8fb9\u9700\u8981\u574d\u584c\uff1f\u56e0\u6b64\u9700\u8981\u5f15\u5165\u4e00\u79cdmetric: Quadric Error Metric\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p></p>"},{"location":"GAMES101/note.html#shadow-mapping","title":"Shadow Mapping","text":"<p>\u5728shading\u4e2d\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u7740\u8272\u4e2d\u65e0\u6cd5\u5c55\u793a\u5f71\u5b50\uff0c\u56e0\u4e3a\u4f20\u7edf\u5149\u6805\u5316\u5f88\u96be\u5904\u7406\u5168\u5c40\u65b9\u9762\u7684\u4e8b\u60c5\u3002Shadow Mapping\u6280\u672f\u5b9e\u65bd\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u77e5\u9053\u573a\u666f\u7684geometry\u7684\uff0c\u800c\u4e14\u5fc5\u987b\u5c3d\u53ef\u80fd\u9632\u8d70\u6837\u3002\u90a3\u4e48\u5173\u952eidea\u662f\u4ec0\u4e48\u5462\uff1fThe points NOT in shadow must be seen both by the light and by the camera.\u7528\u8fd9\u79cd\u601d\u60f3\u5904\u7406\u5f97\u5230\u7684\u70b9\u5149\u6e90\u573a\u666f\u4e0b\u7684\u9634\u5f71\u6211\u4eec\u79f0\u4e3a\u786c\u9634\u5f71\u3002</p> <p>\u7b2c\u4e00\u6b65\uff1a\u7ad9\u5728\u70b9\u5149\u6e90\u7684\u89c6\u89d2\u770b\u573a\u666f\uff0c\u5e76\u8bb0\u5f55\u770b\u5230\u7684image\u7684depth\u3002</p> <p></p> <p>\u7b2c\u4e8c\u6b65\uff1a\u4eba\u773c\u770b\u89c1\u7684image\u7684\u70b9\u91cd\u65b0\u6295\u5c04(reproject)\u7ed9\u70b9\u5149\u6e90\u7684\u89c6\u91ce\uff0c\u7136\u540e\u63a8\u7b97\u51fa\u5b83\u5e94\u8be5\u5728\u70b9\u5149\u6e90image\u4e0a\u7684\u54ea\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u6bd4\u8f83\u70b9\u5149\u6e90\u8bb0\u5f55\u7684\u6df1\u5ea6\u548c\u4eba\u773c\u770b\u5230\u7684\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u70b9\u5149\u6e90\u7684\u5b9e\u9645\u6df1\u5ea6\uff1a\u5982\u679c\u8bb0\u5f55\u6bd4\u5b9e\u9645\u5c0f\uff0c\u8bf4\u660e\u6211\u770b\u5230\u7684\u8fd9\u4e2a\u70b9\u5e94\u8be5\u662f\u88ab\u906e\u6321\u4f4f\u7684\uff1b\u53cd\u4e4b\uff0c\u8fd9\u4e2a\u70b9\u5e94\u8be5\u80fd\u88ab\u70b9\u5149\u6e90\u7167\u5230\uff0c\u8bf4\u660e\u4e0d\u5728\u9634\u5f71\u4e2d\u3002\u8fd9\u5c31\u662f\u4e00\u79cdShadow Mapping\u3002</p> <p></p> <p>\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u662f\u6709\u81ea\u5df1\u7684\u95ee\u9898\uff1a\u5047\u5982\u8bf4\u5149\u7ebf\u88ab\u70b9A\u906e\u6321\uff0c\u800c\u5b83\u88ab\u770b\u89c1\uff0c\u6295\u5f71\u56de\u53bb\uff0c\u7136\u540e\u5224\u65ad\u70b9A\u7684\u6df1\u5ea6\u548c\u70b9\u5149\u6e90\u8bb0\u5f55\u7684\u6df1\u5ea6\u8c01\u5927\u8c01\u5c0f\uff0c\u800c\u6d6e\u70b9\u6570\u7684\u8fd0\u7b97\u4e0e\u6bd4\u8f83\u5c31\u4f1a\u51fa\u73b0\u504f\u5dee\uff0c\u5c24\u5176\u662f\u5224\u65ad\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49\u3002\u56e0\u6b64shadow mapping\u4f1a\u7565\u6709\u504f\u5dee\uff0c\u5c24\u5176\u662f\u5149\u7ebf\u88ab\u906e\u6321\u7684\u90a3\u4e9b\u90e8\u5206\u3002\u800c\u4e14\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u63d0\u524d\u8fdb\u884c\u4e00\u6b21\u70b9\u5149\u6e90\u7684\u5149\u6805\u5316\u4e0eZ-buffering\u3002\u800c\u6709\u786c\u9634\u5f71\uff0c\u90a3\u4e48\u5c31\u6709\u8f6f\u9634\u5f71\u3002\u5982\u4e0b\uff1a\u5b83\u7684\u5f71\u5b50\u7684\u53d8\u5316\u662f\u6e10\u8fdb\u7684\uff0c\u800c\u4e0d\u662f\u7a81\u5140\u5730\u8f6c\u53d8\u3002\u8fd9\u79cd\u60c5\u51b5\u600e\u4e48\u4ea7\u751f\u7684\u5462\uff1f\u5b9e\u9645\u4e0a\uff0c\u662f\u56e0\u4e3a\u5149\u6e90\u4e0d\u662f\u70b9\u5149\u6e90\uff0c\u800c\u662f\u6709\u4f53\u79ef\u7684\uff08\u6ca1\u9519\uff0c\u5982\u679c\u662f\u70b9\u5149\u6e90\uff0c\u90a3\u4e48\u4e0d\u53ef\u80fd\u6709\u8f6f\u9634\u5f71\uff09\u3002</p> <p></p>"},{"location":"GAMES101/note.html#ray-tracing","title":"Ray Tracing","text":""},{"location":"GAMES101/note.html#whitted-style-ray-tracing","title":"Whitted-Style Ray Tracing","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u5149\u7ebf\u8ffd\u8e2a\uff1f\u4e00\u5b9a\u662f\u5149\u6805\u5316\u6709\u4e00\u4e9b\u7f3a\u70b9\uff1aRasterization couldn't handle global effects well\u3002\u6bd4\u5982\u8bf4\u8f6f\u9634\u5f71\uff0cglossy reflection\uff08\u6709\u955c\u9762\u53cd\u5c04\u7684\u6548\u679c\uff0c\u4f46\u662f\u4e0d\u5b8c\u5168\u662f\uff0c\u6709\u4e00\u5b9a\u7684\u7c97\u7cd9\uff09\uff0c\u4ee5\u53caIndirect illumination\uff08\u95f4\u63a5\u5149\u7167\uff0c\u5982\u5149\u7167\u53ef\u80fd\u4f1a\u53cd\u5f39\u591a\u6b21\u624d\u4f1a\u6700\u7ec8\u8fdb\u5165\u4eba\u773c\uff1b\u800c\u5149\u6805\u5316\uff0c\u5982Blinn-Phong\u6a21\u578b\u53ea\u8003\u8651\u4e00\u6b21\u7684\u53cd\u5c04\uff09\u3002\u540c\u65f6\uff1aRasterization is fast, but quality is relatively low\uff0c\u56e0\u4e3a\u5149\u6805\u5316\u53ea\u662f\u4e00\u79cd\u8fd1\u4f3c\u7684\u3001\u540c\u65f6\u5feb\u901f\u7684\u65b9\u6cd5\u3002\u5149\u7ebf\u8ffd\u8e2a\u76f8\u53cd\uff1aRay Tracing is accurate, but is very slow\uff0c\u56e0\u6b64\u7ecf\u5e38\u5728off-line\u7684\u5e94\u7528\u573a\u666f\u4e2d\u4f7f\u7528\uff0c\u5982\u5236\u4f5c\u4e00\u90e8\u7cbe\u7f8e\u7684\u7535\u5f71\u3002</p> <p>\u6700\u57fa\u7840\u7684\u5149\u7ebf\u8ffd\u8e2a\u7b97\u6cd5\uff0c\u9996\u5148\u9700\u8981\u5b9a\u4e49\u5149\u7ebf\uff0c\u6709\u4e09\u4e2a\u6838\u5fc3\u5173\u952e\uff1a</p> <ul> <li>\u5149\u7ebf\u6cbf\u76f4\u7ebf\u4f20\u64ad\uff08\u867d\u7136\u7269\u7406\u73b0\u5b9e\u5e76\u4e0d\u5982\u6b64\uff09</li> <li>\u5149\u7ebf\u4e4b\u95f4\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\uff08\u76f8\u4e92\u4e4b\u95f4\u4e0d\u5f71\u54cd\uff0c\u867d\u7136\u7269\u7406\u73b0\u5b9e\u5e76\u4e0d\u5982\u6b64\uff09</li> <li>\u5149\u7ebf\u4ece\u5149\u6e90\u51fa\u53d1\uff0c\u6700\u7ec8\u5230\u8fbe\u773c\u775b\uff08\u5f53\u7136\uff0c\u5149\u7ebf\u4f20\u64ad\u6709\u53ef\u9006\u6027reciprocity\uff0c\u201c\u4f60\u51dd\u89c6\u6df1\u6e0a\uff0c\u6df1\u6e0a\u4e5f\u5728\u51dd\u89c6\u4f60\u201d\uff09</li> </ul> <p>1968\u5e74\uff0c\u63d0\u51fa\u4e86\u5149\u7ebf\u6295\u5c04\uff08Ray Casting\uff09\u7684\u65b9\u6cd5\uff1a\u5728\u6444\u50cf\u673a\u9762\u524d\uff0c\u8ba4\u4e3a\u6709\u4e00\u4e2a\u6210\u50cf\u6846\uff0c\u6846\u91cc\u9762\u6709\u5f88\u591a\u7684\u50cf\u7d20\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u50cf\u7d20\u4e2d\u5fc3\u70b9\u548c\u6444\u50cf\u673a\u8fde\u7ebf\uff0c\u53d1\u5c04\u51fa\u4e00\u6761\u5149\u7ebf\uff08\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u4e48\u8ba4\u4e3a\uff1fReciprocity\uff01\uff09\uff0c\u8fd9\u4e2a\u5149\u7ebf\u53ef\u80fd\u4f1a\u548c\u7269\u4f53\u5728\u4e00\u4e2a\u70b9\u4e0a\u76f8\u649e\uff1b\u7136\u540e\u8fd9\u4e2a\u70b9\u548c\u5149\u6e90\u8fde\u7ebf\uff0c\u5224\u65ad\u662f\u5426\u88ab\u906e\u6321\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u906e\u6321\uff0c\u90a3\u4e48\u5c31\u5f62\u6210\u4e86\u4e00\u6761\u6709\u6548\u7684\u5149\u8def\uff0c\u4ece\u89d2\u5ea6\u548c\u8ddd\u79bb\u80fd\u591f\u8ba1\u7b97\u51fa\u5149\u7684\u80fd\u91cf\uff0c\u4ece\u800c\u8ba1\u7b97\u7740\u8272\uff1b\u540c\u65f6\uff0c\u8fd9\u6761\u5149\u7ebf\u4f1a\u5728\u649e\u70b9\u4e0a\u9762\u53d1\u751f\u955c\u9762\u53cd\u5c04\uff08\u5173\u952e\u5047\u8bbe\uff0c\u5f53\u7136\u53ef\u80fd\u4f1a\u6709\u80fd\u91cf\u635f\u5931\uff09\uff0c\u7ee7\u7eed\u8d70\u4e0b\u53bb\uff0c\u53ef\u80fd\u518d\u6b21\u548c\u4e00\u4e2a\u7269\u4f53\u76f8\u649e\uff0c\u7136\u540e\u91cd\u590d\u4e4b\u524d\u6240\u8bf4\u7684\u201c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5f62\u6210\u6709\u6548\u5149\u8def\u201d\u6b65\u9aa4\u3002\u5f53\u7136\uff0c\u5728\u5224\u65ad\u76f8\u649e\u5728\u54ea\u4e00\u4e2a\u70b9\u7684\u95ee\u9898\u4e0a\uff0c\u4e00\u5b9a\u8981\u770b\u8fd9\u6761\u5c04\u7ebf\u4e0a\u90a3\u4e2a\u7269\u4f53\u4f18\u5148\u548c\u5c04\u7ebf\u76f8\u649e\u5728\u54ea\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u4e00\u6765\u53cd\u800c\u5f88nice\uff0c\u56e0\u4e3a\u907f\u514d\u4e86\u5149\u6805\u5316\u4e2d\u7684Z-buffering\u64cd\u4f5c\u3002\u4e0b\u56fe\u751f\u52a8\u5730\u5c55\u793a\u4e86\u4e0a\u8ff0\u7684\u8fc7\u7a0b\uff0c\u4f46\u662f\u56fe\u4e2d\u5149\u7ebf\u53ea\u5f39\u5c04\u4e00\u6b21\uff1a</p> <p></p> <p>\u4e0a\u8ff0\u7684\u6a21\u578b\u4e2d\uff0c\u5149\u7ebf\u53ea\u5f39\u5c04\u4e00\u6b21\u3002\u90a3\u4e48\u5f39\u5c04\u5f88\u591a\u6b21\u5462\uff1f\u8fd9\u5c31\u662fRecursive Ray Tracing (Whitted-Style) Algorithm\u3002\u8fd9\u4e2a\u6a21\u578b\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\uff1a\u5149\u7ebf\u4e0d\u6b62\u5f39\u5c04\u4e00\u6b21\uff0c\u800c\u4e14\u4e5f\u4e0d\u6b62\u53ef\u4ee5\u955c\u9762\u53cd\u5c04\uff08\u5f53\u7136\u53ef\u80fd\u6709\u80fd\u91cf\u635f\u5931\uff09\uff0c\u751a\u81f3\u53ef\u4ee5\u6709\u6298\u5c04\uff08\u4f8b\u5982\u73bb\u7483\u6750\u8d28\uff0c\u5f53\u7136\u53ef\u80fd\u6709\u80fd\u91cf\u635f\u5931\uff09\uff1b\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u5149\u7ebf\u53ef\u4ee5\u4e00\u76f4\u5f39\u5c04\u4e0b\u53bb\u3002\u5982\u4e0b\u56fe\uff08\u540c\u65f6\u6f14\u793a\u4e86\u53cd\u5c04\u548c\u6298\u5c04\u7684\u73b0\u8c61\uff09\uff1a</p> <p></p> <p>\u4e0a\u8ff0\u7406\u8bba\u542c\u8d77\u6765\u5f88\u5b8c\u7f8e\uff0c\u4f46\u662f\u4ecd\u7136\u6709\u5f88\u591a\u7684\u6280\u672f\u7ec6\u8282\u9700\u8981\u5ba2\u670d\u3002\u9996\u5148\u7b2c\u4e00\u70b9\uff1a\u5982\u4f55\u5224\u65ad\u5149\u7ebf\u76f8\u649e\uff08Ray Intersection\uff09\uff1f\u6211\u4eec\u5e0c\u671b\u6c42\u5149\u7ebf\u4e0e\u7269\u4f53\u7684\u7b2c\u4e00\u4e2a\u76f8\u4ea4\u70b9\u3002\u5149\u7ebf\u4e00\u822c\u8ba4\u4e3a\u662f\uff1a\u4ece\u5b9a\u70b9\u6309\u7167\u4e00\u4e2a\u65b9\u5411\u51fa\u53d1\uff0c\u7528\u6570\u5b66\u516c\u5f0f\u8868\u8fbe\u5c31\u662f\uff1a  \u5bf9\u4e8e\u4e00\u4e2a\u7269\u4f53\u7684\u8868\u9762\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662f\u9690\u5f0f\u8868\u8fbe\uff1a  \u90a3\u4e48\u5229\u7528\u89e3\u51fa\u7684\u5b9e\u6570\u6b63\u6839t\u5c31\u80fd\u6c42\u51fa\u4ea4\u70b9\u7684\u5750\u6807\u3002\u90a3\u4e48\u5982\u679c\u662f\u663e\u793a\u8868\u8fbe\uff1a\u4e09\u89d2\u5f62\u9762\u7247\u5462\uff1f\u5982\u679c\u76f4\u63a5\u5224\u65ad\u4e00\u6761\u5c04\u7ebf\u548c\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\u67090\u62161\u4e2a\u4ea4\u70b9\uff0c\u660e\u663e\u6bd4\u8f83\u9ebb\u70e6\u3002\u4e8e\u662f\u4eba\u4eec\u60f3\u5230\u4e86\u4e00\u4e2a\u5de7\u5999\u7684\u65b9\u6cd5\uff1a\u8fc7\u8fd9\u4e2a\u4e09\u89d2\u5f62\u7247\u9762\u5ef6\u4f38\u51fa\u4e00\u4e2a\u5e73\u9762\uff0c\u8fd9\u4e00\u70b9\u5f88\u597d\u5b9e\u73b0\uff0c\u6709\u6cd5\u5411\u91cf\u548c\u4e09\u89d2\u5f62\u7684\u4e00\u4e2a\u9876\u70b9\u5c31\u80fd\u5b9e\u73b0\uff0c\u7136\u540e\u5c04\u7ebf\u5fc5\u5b9a\u548c\u8fd9\u4e2a\u5e73\u9762\u76f8\u4ea4\uff08\u5e73\u884c\u60c5\u51b5\u4e0d\u4e88\u4ee5\u8ba8\u8bba\uff09\uff1b\u7136\u540e\u518d\u5224\u65ad\u8fd9\u4e2a\u4ea4\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u8fd9\u4e5f\u5f88\u597d\u5b9e\u73b0\uff0c\u4e09\u4e2a\u53c9\u4e58\u5c31\u80fd\u5224\u65ad\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u5982\u4f55\u66f4\u5feb\u7684\u6c42\u51fa\u5c04\u7ebf\u4e0e\u5e73\u9762\u7684\u4ea4\u70b9\u5462\uff1f\u6709Moller Trumbore Algorithm\uff1a</p> <p></p> <p>\u867d\u7136\u4f46\u662f\uff1a\u6a21\u578b\u4e2d\u6709\u5f88\u591a\u7684\u4e09\u89d2\u5f62\u554a\uff0c\u96be\u4e0d\u6210\u6bcf\u4e00\u4e2a\u90fd\u5224\u65ad\u4e00\u6b21\uff0c\u7136\u540e\u6c42\u51fa\u8bb8\u591a\u4ea4\u70b9\uff0c\u6700\u540e\u8c03\u51fa\u6700\u8fd1\u7684\uff1f\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u662f\u5f88\u6162\u3002\u56e0\u6b64\uff0c\u5982\u4f55\u52a0\u901fRay Intersection\u7684\u8ba1\u7b97\u5462\uff1f\u4e3a\u4e86\u52a0\u901f\uff0c\u9996\u5148\u63d0\u51fa\u4e86\u4e00\u4e2aBounding Volumes\uff08\u5305\u56f4\u76d2\uff09\u7684\u529e\u6cd5\u3002\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7269\u4f53\uff0c\u90fd\u80fd\u591f\u7528\u4e00\u4e2a\u7acb\u65b9\u4f53\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u7403\u4f53\u4e4b\u7c7b\u7684\u7acb\u65b9\u4f53\u62b1\u8d77\u6765\uff0c\u56e0\u6b64\uff1a\u5982\u679c\u5149\u7ebf\u8fde\u5305\u56f4\u76d2\u90fd\u78b0\u4e0d\u5230\uff0c\u90a3\u5c31\u80af\u5b9a\u78b0\u4e0d\u5230\u7269\u4f53\u3002\u6211\u4eec\u628a\u7acb\u65b9\u4f53\u7406\u89e3\u4e3a\u201c\u4e09\u5bf9\u201d\u9762\u7684intersection\u3002\u5b9e\u6218\u4e2d\uff1aWe often use an Axis-Aligned Bounding Box(AABB\uff0c\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2)\u3002\u90a3\u4e48\u5982\u4f55\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\uff0c\u5c04\u7ebf\u548c\u76d2\u76f8\u4ea4\u4e86\u5462\uff1f\u5f53\u5149\u7ebf\u548c\u4e09\u5bf9\u5e73\u9762\u90fd\u6709\u6240\u76f8\u4ea4\u7684\u65f6\u5019\uff1b\u800c\u79bb\u5f00\u76d2\u5462\uff1f\u5149\u7ebf\u4e0e\u4efb\u610f\u4e00\u5bf9\u5e73\u9762\u90fd\u76f8\u4ea4\u7684\u65f6\u5019\u3002\uff08\u611f\u6027\u7406\u89e3\uff0c\u53ef\u4ee5\u501f\u52a9\u4e8c\u7ef4\u60c5\u51b5\u5e2e\u52a9\u7406\u89e3\uff1b\u4e3a\u4ec0\u4e48\u8981\u8fd9\u79cd\u7406\u89e3\uff1f\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\uff01\u56e0\u4e3a\u6211\u4e0d\u80fd\u8bf4\u201c\u6211\u5148\u5224\u65ad\u5149\u7ebf\u548c\u54ea\u4e00\u4e2a\u5e73\u9762\u5148\u76f8\u4ea4\u201d\uff09</p> <p></p> <p>\u5982\u679c\\(t_{enter} &lt; t_{exit}\\)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u77e5\u9053\u6709\u4ea4\u70b9\u4e86\u3002\u90a3\u4e48\u5982\u679c\u6709\u8d1f\u6570\u7684\u60c5\u51b5\u5462\uff1f\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a\u65f6\u95f4\uff0c\u5982\u679c\\(t_{exit}&lt;0\\)\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u76d2\u5b50\u5728\u5149\u7ebf\u7684\u80cc\u540e\uff0c\u4e0d\u53ef\u80fd\u76f8\u4ea4\uff1b\u800c\u5982\u679c\\(t_{exit}&gt;=0 \\ and \\ t_{enter}&lt;0\\)\u5462\uff1f\u8bf4\u660e\u5149\u7ebf\u8d77\u70b9\u5728\u76d2\u5b50\u91cc\u9762\uff0c\u8bf4\u660e\u7edd\u5bf9\u6709\u4ea4\u70b9\u3002\u7efc\u4e0a\u6240\u8ff0\uff1a\\(t_{enter}&lt;t_{exit}\\)&amp;&amp;\\(t_{exit}&gt;=0\\)\u60c5\u51b5\u4e0b\uff0c\u5149\u7ebf\u5c31\u4f1a\u548cAABB\u76f8\u4ea4\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u80fd\u7b80\u5355\u5730\u6c42\u51fat\u7684\u503c\u3002</p> <p></p>"},{"location":"GAMES101/note.html#acceleration","title":"Acceleration","text":""},{"location":"GAMES101/note.html#uniform-spatial-partitionsgrids","title":"Uniform Spatial Partitions(Grids)","text":"<p>\u5047\u5982\u8bf4\u627e\u5230\u4e86\u5927\u5305\u56f4\u76d2\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e2a\u7f51\u683c\u76d2\u5b50\uff0c\u7136\u540e\u5224\u65ad\u54ea\u4e9b\u76d2\u5b50\u91cc\u9762\u662f\u6709\u7269\u4f53\u7684\uff08Store each object in overlapping cells\uff09\u3002\u4e00\u6761\u5149\u7ebf\u8fc7\u53bb\uff0c\u4f1a\u548c\u5927\u5305\u56f4\u76d2\u4e2d\u7684\u8bb8\u591a\u7f51\u683c\u76d2\u5b50\u76f8\u4ea4\u3002\u5f53\u76f8\u4ea4\u7684\u7f51\u683c\u76d2\u5b50\u91cc\u9762\u50a8\u5b58\u4e86\u7269\u4f53\u7684\u65f6\u5019\uff0c\u518d\u4e00\u6b21\u5224\u65ad\u5728\u8fd9\u4e2a\u7f51\u683c\u76d2\u5b50\u91cc\u9762\uff0c\u5149\u7ebf\u662f\u5426\u548c\u7269\u4f53\u53d1\u751f\u4e86\u76f8\u4ea4\u3002\u90a3\u4e48\u5982\u4f55\u5212\u5206\u7f51\u683c\u76d2\u5b50\u5462\uff1f\u592a\u5927\u592a\u5c0f\u90fd\u4e0d\u597d\uff08\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff09\uff0c\u56e0\u6b64\u5b9e\u8df5\u4e2d\uff0cheuristically\uff0c\u573a\u666f\u4e2d\u5404\u81ea\u7684\u6570\u91cf\u5e94\u8be5\u662f\u7269\u4f53\u6570\u91cf\u768427\u500d\u3002\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cdgrid\u52a0\u901f\u6548\u679c\u5f88\u597d\u5462\uff1fGenerally, grids work well on large collections of objects that are distributed evenly in size and space\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u671f\u671b\u5149\u7ebf\u7ecf\u8fc7\u4e00\u4e2a\u4e2a\u7f51\u683c\u76d2\u5b50\u7684\u65f6\u5019\uff0c\u91cc\u9762\u90fd\u7ecf\u5e38\u80fd\u78b0\u89c1\u7269\u4f53\u3002</p> <p>\u6362\u800c\u8a00\u4e4b\uff1a\u5047\u5982\u8bf4\u7a7a\u95f4\u5206\u5e03\u7684\u4e0d\u5747\u5300\u7684\u65f6\u5019\uff0cgrid\u8868\u73b0\u4e0d\u4f73\uff0c\u201cTeapot in a stadium\u201d\u3002\u56e0\u4e3a\u5f88\u591a\u7684\u5404\u81ea\u90fd\u5b8c\u5168\u662f\u7a7a\u683c\u5b50\uff0c\u800c\u8981\u904d\u5386\u5f88\u591a\u7684\u7a7a\u683c\u5b50\u624d\u80fd\u627e\u5230\u5305\u542b\u8336\u58f6\u7684\u683c\u5b50</p>"},{"location":"GAMES101/note.html#spatial-partitioning","title":"Spatial Partitioning","text":"<p>\u5982\u4f55\u5141\u8bb8\u201c\u4e0d\u5747\u5300\u201d\u5730\u5212\u5206\u7a7a\u95f4\uff1f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u516b\u53c9\u6811\uff08Octree\uff09\u3002\u5728\u7a7a\u95f4\u4e2d\u9996\u5148\u5316\u4e3a8\u5757\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5757\u6765\u8bf4\uff0c\u5982\u679c\u91cc\u9762\u6709\u5f88\u591a\u7269\u4f53\u7684\u8bdd\uff0c\u6211\u5c31\u53ef\u4ee5\u518d\u5212\u5206\u4e3a8\u5757\uff1b\u5bf9\u4e8e\u65b0\u4ea7\u751f\u76848\u5757\u6765\u8bf4\uff0c\u7ee7\u7eed\u91cd\u590d\u4e0a\u8ff0\u7684\u6b65\u9aa4\u3002\u8fd9\u5c31\u662f\u4e00\u79cd\u4e0d\u5747\u5300\u7684\u5212\u5206\uff0c\u800c\u201c\u8fd9\u4e00\u5757\u91cc\u9762\u5305\u542b\u591a\u5c11\u7269\u4f53\u6211\u5c31\u518d\u5206\u4e3a8\u4efd\u201d\u8fd9\u79cd\u89c4\u5219\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u3002\u4e8e\u662f\u901a\u8fc7\u516b\u53c9\u6811\uff0c\u6211\u4eec\u80fd\u591f\u4e0d\u5747\u5300\u5730\u5212\u5206\u7a7a\u95f4\uff0c\u5e76\u4e14\u529b\u56fe\u5c06\u7ec6\u7c92\u5ea6\u7684\u76d2\u5b50\u5206\u914d\u7ed9\u90a3\u4e9b\u7269\u4f53\u96c6\u4e2d\u7684\u5730\u65b9\uff0c\u800c\u5728\u6ca1\u6709\u7269\u4f53\u7684\u5730\u65b9\u76f4\u63a5\u7528\u4e00\u4e2a\u5927\u76d2\u5b50\u8868\u793a\uff08\u5373\u4e0d\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u516b\u53c9\u6811\u5212\u5206\uff09\u3002</p> <p>\u4f46\u662f\u5b9e\u8df5\u4e2d\uff0c\u4eba\u4eec\u5e76\u4e0d\u503e\u5411\u4e8e\u9009\u62e9\u516b\u53c9\u6811\u3002\u4eba\u4eec\u53c8\u53d1\u660e\u4e86KD-Tree\uff0c\u4e0e\u516b\u53c9\u6811\u601d\u60f3\u7c7b\u4f3c\uff0c\u4f46\u662f\u5173\u952e\u5728\u4e8e\uff0c\u6bcf\u4e00\u6b21\u53ea\u5728\u4e00\u6761\u8f74\u4e0a\u5212\u4e00\u5200\uff0c\u5e76\u4e14\u8f74\u7684\u9009\u62e9\u662f\u4ea4\u66ff\u7684\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a\u5176\u4e2d\uff0c\u9996\u5148\u6a2a\u5411\u5212\u4e00\u5200\uff0c\u7136\u540e\u4e0a\u4e0b\u4e24\u90e8\u5206\u90fd\u7ad6\u76f4\u65b9\u5411\u5212\u4e00\u5200\uff0c\u7136\u540e\u4e4b\u540e\u518d\u6a2a\u5411\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1b3D\u4e2d\uff0c\u8f74\u7684\u9009\u62e9\u53ef\u4ee5\u662fx y z\u8f6e\u6d41\u6765\u3002</p> <p></p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7KD\u6811\u7684\u7ed3\u6784\u6765\u5212\u5206\u683c\u5b50\uff0c\u7136\u540e\u683c\u5b50\u4e2d\u50a8\u5b58\u7269\u4f53\u3002\u5982\u4e0b\u56fe\uff082D\u6f14\u793a\uff09\uff1a</p> <p></p> <p></p> <p>\u5f53\u5149\u7ebf\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u4ece\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\u4ece\u4e0a\u5f80\u4e0b\u904d\u5386\uff1a\u5148\u5224\u65ad\u548cA\u76f8\u4e0d\u76f8\u4ea4\uff1f\u5982\u679c\u76f8\u4ea4\uff0c\u5224\u65ad\u548c1 B\u662f\u5426\u76f8\u4ea4\u5462\uff1f\u5047\u5982\u548c1\u76f8\u4ea4\uff0c\u56e0\u4e3a1\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u56e0\u6b641\u4e2d\u50a8\u5b58\u7684\u6240\u6709\u7269\u4f53\u90fd\u548c\u5149\u7ebf\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff1b\u5982\u679c\u548cB\u76f8\u4ea4\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u5224\u65ad\u548c2\u4e0eC\u76f8\u4ea4\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8fd9\u4e2a\u6d41\u7a0b\u770b\u8d77\u6765\u68d2\u6781\u4e86\uff0c\u4f46\u662f\u5374\u4ecd\u7136\u6e10\u6e10\u4e0d\u88ab\u4f7f\u7528\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5224\u5b9aobject\u548cAABB\u662f\u5426\u76f8\u4ea4\u4e5f\u662f\u4e00\u4e2a\u5927\u95ee\u9898\u3002\u8fd9\u4e2a\u7b97\u6cd5\u4e0d\u662f\u6ca1\u6709\uff0c\u4f46\u662f\u5f88\u96be\u5b9e\u8df5\uff0c\u56e0\u6b64KD\u6811\u7684\u5efa\u7acb\u4e0d\u662f\u7b80\u5355\u7684\u4e8b\u60c5\uff1b\u540c\u65f6\uff0c\u4e00\u4e2a\u7269\u4f53\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u591a\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u6240\u5e0c\u671b\u89c1\u5230\u7684\u3002</p>"},{"location":"GAMES101/note.html#object-partitions-bounding-volume-hierarchybvh","title":"Object Partitions &amp; Bounding Volume Hierarchy(BVH)","text":"<p>\u4e4b\u524d\u90a3\u79cd\u5212\u5206\u90fd\u662f\u4ece\u7a7a\u95f4\u89d2\u5ea6\u5165\u624b\u3002\u90a3\u4e48\u80fd\u4e0d\u80fd\u4ece\u7269\u4f53\u89d2\u5ea6\u5165\u624b\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u4e8e\u662fBVH\u7b97\u6cd5\u5e94\u8fd0\u800c\u751f\uff0c\u6210\u4e3a\u4e86\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u5212\u5206\u65b9\u5f0f\u3002</p> <p></p> <p></p> <p>\u9996\u5148\u7528\u4e00\u4e2a\u5927AABB\u5305\u4f4f\u6240\u6709\u7684\u4e09\u89d2\u5f62\uff0c\u7136\u540e\u53ef\u4ee5\u53c2\u8003KD\u6811\uff0c\u5de6\u53f3\u5206\u51fa\u4e24\u90e8\u5206\uff0c\u6bcf\u4e00\u90e8\u5206\u91cc\u9762\u90fd\u5b8c\u6574\u5305\u542b\u4e86\u5f88\u591a\u4e09\u89d2\u5f62\uff08\u5f53\u7136\uff0c\u4e24\u4e2aAABB\u53ef\u4ee5\u76f8\u4ea4\uff09\uff0c\u7136\u540e\u4ee5\u6b64\u7c7b\u63a8\u3002\u6b65\u9aa4\u53ef\u4ee5\u6982\u62ec\u5982\u4e0b\uff1a</p> <p></p> <p>How to subdivide a node?</p> <ul> <li>Choose a dimension to split.</li> <li>Heuristic #1: Always choose the longest axis in node.</li> <li>Heuristic #2: Split node at location of median object.</li> </ul> <p>Termination criteria? Heuristic: stop when node contains few element. </p> <p>\u904d\u5386BVH\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p> <p>Spatial\u5212\u5206\u548cBVH\u7269\u4f53\u5212\u5206\u7684\u533a\u522b\u6982\u8ff0\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"GAMES101/note.html#basic-radiometry","title":"Basic radiometry","text":"<p>radiometry\uff0c\u8f90\u5c04\u5ea6\u91cf\u5b66\uff0c\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165\u8fd9\u4e2a\u4e1c\u897f\u5462\uff1fBlinn-Phong\u6a21\u578b\u5f88\u7c97\u7cd9\uff0c\u800cWhitted style ray tracing\u5f80\u5f80\u7ed9\u51fa\u7684\u7ed3\u679c\u603b\u662f\u8ddd\u79bb\u201c\u6b63\u786e\u201d\u6709\u4e00\u70b9\u8ddd\u79bb\u3002\u8f90\u5c04\u5ea6\u91cf\u5b66\u8868\u8ff0\u4e86\u5982\u4f55\u8868\u793a\u5149\u7167\u7684\u5c5e\u6027\uff0c\u5355\u4f4d\u7b49\u7b49\uff0c\u5b9a\u4e49\u4e86\u5149\u7167\u7684\u82e5\u5e72\u5c5e\u6027\uff1aRadiant flux, intensity, irradiance, radiance\u3002Perform lighting calculations in a physically correct manner\u3002</p>"},{"location":"GAMES101/note.html#radiant-energy-and-flux-power","title":"Radiant Energy and Flux (Power)","text":"<p>Definition: Radient energy is the energy of electromagnetic radiation. It is measured in units of joules.  \\(Q[J=Joule]\\)</p> <p>Definition: Radiant flux(power) is the energy emitted, reflected, transmitted or received, per unit time.  \\(\\phi = dQ/dt[W=Watt]\\)</p> <p>Flux\u7684\u53e6\u4e00\u4e2a\u5b9a\u4e49\uff1a photons flowing through a sensor in unit time\u3002</p> <p>\u6211\u4eec\u9700\u8981\u8be6\u7ec6\u5b9a\u4e49\u4e00\u4e00\u4e9bblinn-phong\u4e2d\u7c97\u7cd9\u5bf9\u5f85\u7684\u4e8b\u60c5\uff1a\u4f8b\u5982\u70b9\u5149\u6e90\u6563\u53d1\u5149\uff0c\u4e0d\u540c\u89d2\u5ea6\u5149\u843d\u5728\u4e00\u4e2a\u70b9\u4e0a\u7b49\uff1b\u800c\u524d\u8005\u5bf9\u5e94\u7684\u6982\u5ff5\u5c31\u662fRadiant Intensity\uff0c\u540e\u8005\u5bf9\u5e94\u7684\u662firradience\u3002</p>"},{"location":"GAMES101/note.html#radiant-intensity","title":"Radiant Intensity","text":"<p>\u7acb\u4f53\u89d2\u662f\u4ec0\u4e48\uff1f\u5b83\u63cf\u8ff0\u4e86\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u89d2\u5ea6\u6709\u591a\u5927\u3002</p> <p></p> <p>\u5728\u4e0a\u8ff0\u7684\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u7528\\((\\theta, \\phi)\\)\u8fd9\u79cd\u7403\u5750\u6807\u7cfb\u4e2d\u7684\u4e24\u4e2a\u5173\u952e\u89d2\u5ea6\u6765\u8868\u793a\uff0c\u5176\u4e2d\u524d\u8005\u662f\u5411\u91cf\u548cz\u6b63\u534a\u8f74\u7684\u5939\u89d2\uff0c\u540e\u8005\u662f\u5411\u91cf\u6295\u5f71\u5230XOY\u540e\u548cx\u6b63\u534a\u8f74\u7684\u5939\u89d2\u3002\u90a3\u4e48A\u4ee3\u8868\u9762\u79ef\uff0c\u90a3\u4e48\u6709differential solid angels formula:  \u56e0\u6b64\u70b9\u5149\u6e90\u6563\u53d1\u51fa\u6765\u7684\u5355\u4f4d\u65b9\u5411\u4e0a\u7684Intensity\u662f\uff1a\\(I = \\phi / 4\\pi\\)\u3002</p>"},{"location":"GAMES101/note.html#irradiance-radiance","title":"Irradiance &amp; Radiance","text":"<p>Irradiance \u5b9a\u4e49\u5982\u4e0b:</p> <p></p> <p>\u56e0\u6b64\u5728\u70b9\u5149\u6e90\u4e2d\u4f20\u64ad\u51fa\u6765\u7684\u5149\u7ebf\uff0c\u4e8b\u5b9e\u4e0aItensity\u5176\u5b9e\u6ca1\u6709\u8870\u51cf\uff0c\u8870\u51cf\u7684\u5176\u5b9e\u662firradiance\u3002</p> <p>Radiance \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48radiance\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5355\u4f4dsolid angle\u4e0a\u9762\u4f20\u8fc7\u6765\u7684irradiance\uff0c\u90a3\u4e48\u4e8b\u5b9e\u4e0a\u4e24\u8005\u7684\u5173\u7cfb\u5c31\u5dee\u4e86\u4e00\u4e2a\u79ef\u5206\uff1a</p> <p></p> <p>\u6982\u5ff5\u603b\u7ed3\uff1a</p> <ul> <li> <p>\u7acb\u4f53\u89d2(solid angle): \u5e73\u9762\u89d2\u5728\u4e09\u7ef4\u7a7a\u95f4\u7684\u5ef6\u4f38, \u5c31\u7406\u89e3\u4e3a\u4e09\u7ef4\u7684\u89d2\u5ea6\u5373\u53ef.</p> </li> <li> <p>\u8f90\u5c04\u901a\u91cf(radiant flux): \u5355\u4f4d\u65f6\u95f4\u5185\u8f90\u5c04\u7684\u80fd\u91cf.</p> </li> <li>\u8f90\u5c04\u5f3a\u5ea6(radiant intensity): \u5355\u4f4d\u65f6\u95f4\u5185\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u4e0a\u8f90\u5c04\u7684\u80fd\u91cf.</li> <li>\u8f90\u5c04\u5ea6\u6216\u8005\u8f90\u5c04\u4eae\u5ea6(radiance): \u5355\u4f4d\u65f6\u95f4\u5185\u5728\u5355\u4f4d\u7acb\u4f53\u89d2\u4e0a\u8f90\u5c04\u7684\u5e76\u7167\u5c04\u5230\u5355\u4f4d\u6295\u5f71\u9762\u79ef\u4e0a\u7684\u80fd\u91cf.</li> <li>\u8f90\u7167\u5ea6(irradiance): \u5355\u4f4d\u65f6\u95f4\u5185\u8f90\u5c04\u7684\u5e76\u7167\u5c04\u5230\u5355\u4f4d\u9762\u79ef\u4e0a\u7684\u80fd\u91cf, \u4e5f\u5c31\u662f\u5404\u4e2a\u89d2\u5ea6\u4e0a\u8f90\u5c04\u5ea6\u603b\u548c.</li> </ul>"},{"location":"GAMES101/note.html#bidirectional-reflectance-distribution-function-brdf","title":"Bidirectional Reflectance Distribution Function (BRDF)","text":"<p>\u4e4b\u524d\u6211\u4eec\u5c1d\u8bd5\u7528radiance\u53bb\u7406\u89e3irradiance\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c1d\u8bd5\u7528\u8fd9\u4e24\u4e2a\u6982\u5ff5\u53bb\u7406\u89e3\u53cd\u5c04\u3002\u4e00\u4e2a\u70b9\u4ece\u4e00\u4e2a\u5355\u4f4d\u89d2\u6536\u5230irradiance\u80fd\u91cf\uff0c\u7136\u540e\u518d\u6c42\u53e6\u5916\u4e00\u4e2aradiance\u3002\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fd9\u4e2a\\(f_r\\)\u53c2\u6570\u5c31\u4ee3\u8868\u4e86\u8fd9\u4e2a\u7269\u4f53\u8868\u9762\u7684\u5c5e\u6027\u3002\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2ashading point\uff0c\u90fd\u8ba4\u4e3a\u6536\u5230\u4e86\u56db\u9762\u516b\u65b9\u7684radiance\uff0c\u56e0\u6b64\u6c42\u548c\u5f97\u5230\uff1a</p> <p></p> <p>\u4f46\u662f\u6311\u6218\u5728\u4e8e\uff1a\u63a5\u53d7\u7684radiance\u4e0d\u4ec5\u4ec5\u53ef\u80fd\u6765\u81ea\u4e8e\u5149\u6e90\uff0c\u4e5f\u53ef\u80fd\u6765\u81ea\u5176\u5b83\u7269\u4f53\u53cd\u5c04\u51fa\u6765\u7684radiance\u3002\u56e0\u6b64\u8fd9\u6709\u4e00\u70b9\u9012\u5f52\u7684\u610f\u5473\u4e86\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u5148\u5b9a\u4e0b\u901a\u7528\u7684\u6e32\u67d3\u65b9\u7a0b\uff1a\u8fd9\u4e2a\u65b9\u7a0b\u8003\u8651\u4e86\u7269\u4f53\u81ea\u5df1\u53d1\u5149\u7684\u60c5\u51b5</p> <p></p> <p>\u90a3\u4e48\u8bf4\u56de\u53cd\u5c04\u3002\u63d0\u5230\uff1a\u4e0a\u9762\u8fd9\u4e2a\u65b9\u7a0b\u4e2d\u6709\u5165\u5c04radiance\u662f\u6765\u81ea\u5176\u4ed6\u7269\u4f53\uff0c\u81ea\u5df1\u53cd\u5c04\u51fa\u6765\u7684radiance\u5176\u5b9e\u4e5f\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7269\u4f53\u7684\u53cd\u5c04\u3002\u56e0\u6b64\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u7684\u53cd\u5c04\u65b9\u7a0b\u6765\u8bf4\uff0c\u5176\u5b9e\u5c31\u662f\u4e24\u4e2a\u91cf\u4e0d\u662f\u5f88\u6e05\u695a\uff1a\u5165\u5c04radiance \u51fa\u5c04radiance\u3002\u6211\u4eec\u5c1d\u8bd5\u7528\u7b80\u5355\u7684\u7b26\u53f7\u8868\u793a\u4e0a\u8ff0\u7684\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u79cd\u5165\u5c04\u5230\u51fa\u5c04\u7684\u8f6c\u5316\u89c6\u4e3a\u4e00\u79cd\u7b97\u5b50\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u5199\u6210\u7b97\u5b50\u4e4b\u540e\uff0c\u80fd\u5e2e\u52a9\u89e3\u51fa\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u7b49\u6bd4\u516c\u5f0f\uff1a</p> <p></p> <p></p> <p>\u7ec8\u4e8e\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u7ec8\u4e8e\u80fd\u591f\u975e\u5e38\u826f\u597d\u5730\u6a21\u62df\u5149\u7167\u4e86\u3002\u4e0b\u9762\u56fe\u7247\u975e\u5e38\u751f\u52a8\u5730\u5c55\u793a\u4e86\u5f15\u5165BRDF\u4e4b\u540e\uff0c\u5168\u5c40\u5149\u7167\u7684\u6548\u679c\u662f\u591a\u4e48\u7684\u660e\u663e\uff1b\u8fd9\u4e5f\u6b63\u662f\u5728\u7b2c\u4e00\u8282\u8bfe\u7684\u65f6\u5019\u4e3a\u4ec0\u4e48\u8bf4\uff1a\u5149\u7167\u8d8a\u597d\u8d8a\u4eae\uff0c\u4ee3\u8868\u6548\u679c\u8d8a\u597d\uff1a\u4e0a\u56fe\u4e2d\u6ca1\u6709\u5f15\u5165BRDF\uff0cp\u70b9\u662f\u9ed1\u7684\uff0c\u56e0\u4e3a\u4e0d\u8ba4\u4e3a\u5149\u7ebf\u80fd\u591f\u5230\u8fbe\u8fd9\u4e2a\u5730\u65b9\uff1b\u4f46\u662f\u5728\u4e0b\u9762\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u5141\u8bb8\u5149\u7ebf\u4e24\u6b21\u5f39\u5c04\uff0cp\u70b9\u5c31\u6bd4\u4e0a\u56fe\u4eae\u4e86\u3002</p> <p></p> <p></p>"},{"location":"GAMES101/note.html#monte-carlo-path-tracing","title":"Monte Carlo Path Tracing","text":"<p>\u9996\u5148\u8865\u5145\u4e00\u4e9b\u6982\u7387\u8bba\u80cc\u666f\uff1a\u5728\\(X\\sim p(x)\\)\u5206\u5e03\u4e0b\uff0c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u6052\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e14\\(\\int p(x)dx=1\\)\uff08\u6982\u7387\u4e4b\u548c\u5e94\u8be5\u4e3a1\uff09\uff0c\u800c\u5b9a\u4e49\u671f\u671b\u4e3a\uff1a\\(E[X]=\\int xp(x)dx\\)\u3002\u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e00\u79cd\u79ef\u5206\u65b9\u6cd5\uff1a\u8499\u7279\u5361\u6d1b\u79ef\u5206\u3002\u8499\u7279\u5361\u6d1b\u4e00\u5f00\u59cb\u662f\u4e3a\u4e86\u89e3\u51b3\u6c42\u5b9a\u79ef\u5206\u7684\u95ee\u9898\u7684\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <p></p> <p>\u6240\u4ee5\u8bf4\uff0c\u95ee\u9898\u4ece\u539f\u6765\u7684\u6c42\u5b9a\u79ef\u5206\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u8bbe\u5b9a\u4f18\u8d28\u7684PDF\uff08\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0cProbability Density Function\uff09\u4e86\u3002\u53ef\u60f3\u800c\u77e5\u7684\u662f\uff1a\u91c7\u6837\u8d8a\u591a\uff0c\u65b9\u5dee\u8d8a\u5c0f\uff1bSample on x, integrate on x\u3002</p> <p>\u8fd9\u5bf9\u4e8ePath Tracing\u7a76\u7adf\u6709\u4ec0\u4e48\u5173\u8054\u7684\uff1fWhitted-Style Ray Tracing\u4e2d\uff0c\u5141\u8bb8\u5149\u591a\u6b21\u5f39\u5c04\uff0c\u4e14\u6709\u4e00\u4e9b\u524d\u63d0\uff1a\u5f53\u5149\u7ebf\u5230\u8fbe\u5149\u6ed1\u7269\u4f53\uff0c\u4f1a\u53d1\u751f\u955c\u9762\u6298\u5c04\uff0c\u4e14\u5982\u679c\u662f\u73bb\u7483\uff0c\u4f1a\u6709\u6298\u5c04\uff1b\u800c\u5149\u7ebf\u5230\u8fbe\u6f2b\u53cd\u5c04\u5730\u65b9\uff0c\u5219\u8ba4\u4e3a\u4e0d\u518d\u4f20\u64ad\u3002\u4f46\u662f\u8fd9\u4e9b\u660e\u663e\u4e0d\u7b26\u5408\u7269\u7406\u73b0\u5b9e\u3002Where the ray be reflected for gloddy materials\uff1f\u80fd\u591f\u770b\u5230\u9ad8\u5149\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u90a3\u4e48\u5149\u6ed1\u3002\u8bf4\u660e\u5f53\u773c\u775b\u653e\u51fa\u4e00\u6761\u5149\u7ebf\u6253\u5230glossy\u7269\u4f53\u4e0a\uff0c\u5149\u5e94\u8be5\u56db\u6563\uff0c\u5426\u5219\u5982\u679c\u662f\u955c\u9762\u53cd\u5c04\uff0c\u90a3\u4e48\u5e94\u8be5\u80fd\u591f\u5448\u73b0\u5468\u56f4\u4e0e\u73af\u5883\u3002\u540c\u65f6\u5982\u679c\u6ca1\u6709\u6f2b\u53cd\u5c04\uff0c\u90a3\u4e48\u5168\u5c40\u5149\u7ebf\u6548\u679c\u7684\u5dee\u5f02\u4f1a\u76f8\u5f53\u660e\u663e\u3002</p> <p></p> <p></p> <p>\u4f46\u662f\u6e32\u67d3\u65b9\u7a0b\u5e94\u8be5\u662f\u5bf9\u7684\uff01\u56e0\u4e3a\u5b8c\u5168\u662f\u6309\u7167\u7269\u7406\u4e16\u754c\u7684\u89c4\u5219\u6765\u7684\uff0c\u8003\u8651\u5230\u4e86\u56db\u5468\u6765\u7684\u5149\uff01\u53ea\u4e0d\u8fc7\u662f\u89c4\u5219\u6ca1\u6709\u6b63\u786e\u5730\u8bbe\u5b9a\u3002\u4f46\u662f\u8fd9\u4e2a\u65b9\u7a0b\u6d89\u53ca\u5230\u4e86\u7403\u9762\u4e0a\u7684\u79ef\u5206\uff0c\u800c\u4e14\u6d89\u53ca\u5230\u4e86\u9012\u5f52\u6267\u884c\u3002\u5982\u4f55\u6570\u503c\u4e0a\u9ad8\u6548\u8ba1\u7b97\u79ef\u5206\u5462\uff1f\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5f15\u5165\u8499\u7279\u5361\u6d1b\u6c42\u79ef\u5206\u65b9\u6cd5\u4e86\u3002</p> <p></p> <p></p> <p></p> <p>\u4e0a\u9762\u4e09\u5f20\u56fe\u7247\u5c55\u793a\u7684algorithm\u7a76\u7adf\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u6211\u4eec\u7ec8\u4e8e\u77e5\u9053\u4e86\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u6765\u8bf4\uff0c\u5982\u4f55\u63a5\u53d7\u56db\u5904\u6765\u7684\u5149\uff0c\u5e76\u6cbf\u7740\u4e00\u4e2a\u65b9\u5411\u518d\u53d1\u5c04\u51fa\u591a\u5c11radiance\u7684\u5149\u7ebf\u4e86\u3002\u5728\u4ee5\u524dBlinn-Phong\u4e2d\uff0c\u5f3a\u884c\u5149\u5206\u4e3a\u4e09\u79cd\uff0c\u5206\u522b\u7528\u4e0d\u540c\u7684\u7cfb\u6570\u6765\u4ee3\u8868specular, diffuse and ambient; \u800c\u5982\u4eca\uff0c\u6240\u6709\u7684\u5149\u4e00\u89c6\u540c\u4ec1\uff0c\u800c\u8be5\u70b9\u67d0\u4e00\u89d2\u5ea6\u4e0b\u7684\u201cglossy\u8fd8\u662fglassy\u201d\u4e0e\u5426\uff0c\u90fd\u901a\u8fc7\\(f_{r}\\)\u8fd9\u4e2a\u53c2\u6570\u8fdb\u884c\u8868\u793a\u3002Pseudocode\u5982\u4e0b\uff1a</p> <pre><code>shade(p, wo)\n    Randomly choose N directions wi~pdf\n    L0 = 0.0\n    For each wi\n        Trace a ray r(p, wi)\n        If ray r hit the light\n            Lo += (1/N) * L_i * f_r * cosine / pdf(wi)\n    Return Lo\n</code></pre> <p>\u8fdb\u4e00\u6b65\u5730\uff1a\u5982\u4f55\u8ba1\u7b97Recursively\u5462\uff1f\u610f\u601d\u662f\u5982\u4e0b\u56fe\uff1aP\u4e2d\u63a5\u53d7\u7684\u76f4\u63a5\u5149\u7167\uff0c\u5e94\u8be5\u4e5f\u6709\u6765\u81eaQ\u70b9\u5c04\u51fa\u6765\u7684\u5149\u7ebf\uff0c\u90a3\u4e48\u8ba1\u7b97\u6d41\u7a0b\u4e2d\u5982\u4f55\u4f53\u73b0\u8fd9\u79cd\u201c\u5305\u542b\u201d\u6216\u8005\u8bf4\u201c\u9012\u5f52\u201d\u4e00\u5c42\u542b\u4e49\u5462\uff1f\u90a3\u4e48\u5176\u5b9e\u6211\u53ef\u4ee5\u89c6\u4e3a\uff1a\u6709\u4e00\u4e2a\u6444\u50cf\u673a\u5728P\uff0c\u968f\u673a\u65b9\u5411\u653e\u51fa\u5149\u7ebf\uff0c\u5982\u679c\u8bf4PG\u65b9\u5411\u7684\u5149\u7ebf\u6253\u4e2d\u4e86\u7269\u4f53\uff08\u800c\u4e0d\u662f\u6253\u4e2d\u4e86\u76f4\u63a5\u5149\u7167\u7684\u5149\u7ebf\uff09\uff0c\u90a3\u4e48\u8ba1\u7b97Q\u7684\u8499\u7279\u5361\u6d1b\u6e32\u67d3\u65b9\u7a0b\u79ef\u5206\uff0c\u52a0\u5230P\u70b9\uff1a</p> <p></p> <pre><code>shade(p, wo)\n    Randomly choose N directions wi~pdf\n    L0 = 0.0\n    For each wi\n        Trace a ray r(p, wi)\n        If ray r hit the light\n            Lo += (1/N) * L_i * f_r * cosine / pdf(wi)\n        Else is ray r hit an object at q\n            Lo += (1/N) * shade(q, -wi) * f_r * cosine / pdf(wi)\n    Return Lo\n</code></pre> <p>\u8fd9\u633a\u5bf9\u7684\u3002\u4f46\u662f\u4ecd\u7136\u95ee\u9898\u6ca1\u6709\u5b8c\u5168\u88ab\u89e3\u51b3\u3002\u7b2c\u4e00\u70b9\uff1a\u5982\u679c\u8fd9\u6837\u9012\u5f52\u8ba1\u7b97\uff0c\u5149\u7ebf\u6570\u91cf\u4f1a\u77ac\u95f4\u7206\u70b8\uff0c\u56e0\u4e3aN\u53d6\u7684\u592a\u5927\u7684\u8bdd\uff0c\u8ba1\u7b97\u5f00\u9500\u662f\u6307\u6570\u589e\u957f\u7684\u3002\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u5f88\u7c97\u66b4\uff1aN=1\uff0c\u4f46\u662f\u53ef\u60f3\u800c\u77e5\uff0c\u566a\u58f0\u95ee\u9898\u4f1a\u5b58\u5728\uff1b\u4f46\u662f\u5728Path Tracing\u4e2d\uff0c\u5c31\u662f\u89c4\u5b9aN=1\u3002\u867d\u7136\u5bf9\u4e8e\u4e00\u4e2ashading point\u6765\u8bf4\uff0c\u53ea\u5141\u8bb8\u8ffd\u8e2a\u4e00\u6761path\uff0c\u4f46\u662f\u4e3a\u4e86\u514b\u670d\u566a\u70b9\uff0c\u6211\u53ef\u4ee5\u8ba9\u4e00\u4e2apixel\u8ffd\u8e2a\u591a\u6761\u8def\u5f84\uff0c\u800c\u5bf9\u4e8e\u6bcf\u6761\u8def\u5f84\u4e0a\u53ef\u80fd\u8def\u8fc7\u7684shading point\u6765\u8bf4\uff0c\u5b83\u4eec\u5404\u81ea\u8ba1\u7b97\u6e32\u67d3\u65b9\u7a0b\u7684\u65f6\u5019\uff0cN\u90fd\u662f\u4e3a1\uff0c\u8ba1\u7b97\u4e0d\u4f1a\u7206\u70b8\uff1b\u6700\u540e\u4e00\u4e2apixel\u7684radiance\u662f\u6240\u6709path\u7684radiance\u7684\u5e73\u5747\uff08\u8fd9\u662f\u56e0\u4e3apixel reconstruction filter\u95ee\u9898\uff09\u3002Pseudocode\u5982\u4e0b\uff1a</p> <pre><code>ray_generation(camPos, pixel)\n    Uniformly choose N sample positions within the pixel\n    pixel_radiance = 0.0\n    For each sample in the pixel\n        Shoot a ray r(camPos, cam_to_sample)\n        If ray r hit the scene at P\n            pixel_radiance += 1 / N * shade(p, sample_to_cam)\n    Return pixel_radiance\n</code></pre> <p>\u7b2c\u4e8c\u70b9\uff1a\u8bf6\uff1f\u8fd9\u4e2a\u9012\u5f52\u597d\u50cf\u662f\u6ca1\u6709\u7ec8\u6b62\u6761\u4ef6\uff1f\u4e3a\u4e86\u89e3\u51b3\u5982\u4f55\u89c4\u5b9a\u8ffd\u8e2a\u5982\u4f55\u505c\u4e0b\u6765\uff0c\u4eba\u4eec\u53d1\u660e\u4e86\u4fc4\u7f57\u65af\u8f6e\u76d8\u8d4c\uff08Russian Roulette\uff09\u65b9\u6cd5\uff1a\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6700\u5999\u7684\u5730\u65b9\u5728\u4e8e\uff1a\u671f\u671b\u503c\u662f\u4e00\u6837\u7684\u3002\u56e0\u6b64\u4f2a\u4ee3\u7801\u9700\u8981\u7565\u5fae\u4fee\u6539\uff1a</p> <pre><code>shade(p, wo)\n    Manually specify a probability P_RR\n    Randomly select ksi in a uniform dist. in [0, 1]\n    if (ksi &gt; P_RR) return 0.0;\n\n    Randomly choose ONE directions wi~pdf\n    Trace a ray r(p, wi)\n    If ray r hit the light\n        Return (1/N) * L_i * f_r * cosine / pdf(wi) / P_RR\n    Else is ray r hit an object at q\n        Return (1/N) * shade(q, -wi) * f_r * cosine / pdf(wi) / P_RR\n</code></pre> <p>\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6b63\u786e\u5730\u7b97\u6cd5\u4e86\u3002\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u9ad8\u6548\uff0c\u56e0\u4e3a\u9700\u8981\u514b\u670d\u566a\u58f0\u7684\u8bdd\uff0c\u9700\u8981SPP\uff08samples per pixel\uff09\u503c\u5f88\u9ad8\u3002\u6709\u6ca1\u6709\u4ec0\u4e48\u63d0\u9ad8\u7684\u65b9\u6cd5\u5462\uff1f\u5728\u4e4b\u524d\uff0c\u5bf9\u4e8e\u4e00\u4e2ashading point\u6765\u8bf4\uff0c\u90fd\u662f\u968f\u673a\u9009\u53d6\u4e00\u6761\u5149\u7ebf\u8fdb\u884c\u8ffd\u8e2a\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u968f\u673a\u8ffd\u8e2a\u7684\u7ed3\u679c\u5c31\u662f\u78b0\u4e0d\u89c1\u7269\u4f53\u6216\u8005\u5149\u6e90\u3002\u56e0\u6b64\u6211\u80fd\u4e0d\u80fd\u91cd\u65b0\u6539\u53d8\u91c7\u6837\u7b56\u7565\u5462\uff1f\u6bd5\u7adf\u8499\u7279\u5361\u6d1b\u8ba1\u7b97\u5b9a\u79ef\u5206\u662f\u5141\u8bb8\u4e0d\u540c\u7684\u6982\u7387\u5206\u5e03\u7684\u3002 </p> <p></p> <p>\u6211\u4eec\u5e0c\u671b\u7740\u91cd\u4e8e\u5149\u6e90\u5bf9\u8be5\u70b9\u7684radiance\u5f71\u54cd\u3002\u56e0\u6b64\u5bf9\u5149\u6e90\u8fdb\u884c\u91c7\u6837\uff0c\u7b97\u51fa\u989d\u5916\u7684radiance:</p> <p></p> <p>\u56e0\u6b64\uff0c\u4e4b\u524d\u6211\u4eec\u90fd\u5047\u8bbe\uff1a light is \"accidentally\" shot by uniform hemisphere sampling\u3002\u4f46\u662f\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e24\u90e8\u5206\u7684radiance\uff1alight source(direct, no need to have RR) and other reclectors(indirect, RR)\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u5f53\u7136\uff0c\u8fd8\u6709\u6700\u540e\u6700\u540e\u4e00\u4e2a\u5c0f\u95ee\u9898\uff1a\u4e07\u4e00\u5149\u6e90\u7684\u5171\u7ebf\u662f\u88ab\u906e\u6321\u7684\u5462\uff1f\u56e0\u6b64\u8fd8\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u5149\u6e90\u7684\u8d21\u732e\u5230\u5e95\u80fd\u4e0d\u80fd\u6210\u7acb\u3002\u56e0\u6b64\u9700\u8981shading point\u548c\u5149\u6e90\u8fdb\u884c\u8fde\u7ebf\uff0c\u5224\u65ad\u662f\u5426\u548c\u7269\u4f53\u76f8\u4ea4\u3002\u56e0\u6b64\u4f2a\u4ee3\u7801\u4e2d\u8fd8\u9700\u8981\u989d\u5916\u5224\u65ad\u5149\u6e90\u8d21\u732e\u662f\u5426\u88ab\u906e\u6321\uff0c\u90a3\u4e48\u5b8c\u6574\u7684\u6d41\u7a0b\u7ec8\u4e8e\u4ecb\u7ecd\u5b8c\u6bd5\u3002\u8fd9\u79cd\u7b97\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u800c\u4e14\u80fd\u591f\u751f\u6210\u975e\u5e38\u903c\u8fd1\u4e8e\u73b0\u5b9e\u7684\u7167\u7247\uff1a</p> <p></p> <p>pixel\u6709\u4e86radiance\uff0c\u7ecf\u8fc7gamma correction, curves, color space\u7b49\u6d41\u7a0b\uff0c\u6700\u540e\u80fd\u53d8\u4e3a\u989c\u8272\u3002\u8fd9\u4e00\u90e8\u5206\u4e0d\u4f1acover\u3002</p>"},{"location":"GAMES101/note.html#materials-and-appearances","title":"Materials and Appearances","text":""},{"location":"GAMES101/note.html#material-types","title":"Material Types","text":"<p>\u56fe\u5f62\u5b66\u4e2d\uff0c\u4ec0\u4e48\u662f\u6750\u8d28\uff1fBRDF\u5c31\u53cd\u6620\u4e86\u6750\u8d28\u7684\u7279\u70b9\uff01\u6211\u4eec\u4e0d\u59a8\u6765\u770b\u770b\u5149\u7ebf\u73b0\u8c61\u4e0e\u6750\u8d28\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u5982\u4f55\u901a\u8fc7\\(f_{r}\\)\u4f53\u73b0\u7684\uff1a\u7b2c\u4e00\u79cd\uff0c\u5728\u6f2b\u53cd\u5c04\u4e2d\uff0cBlinn-Phong\u4e2d\u8fd8\u662f\u7528intensity\u7b49\u53bb\u5927\u6982\u6a21\u62df\u771f\u5b9e\u7269\u7406\u73b0\u8c61\uff0c\u4f46\u662f\u73b0\u5728\u53ef\u4ee5\u7528\u7269\u7406\u5c42\u9762\u4e0a\u6b63\u786e\u7684\u6e32\u67d3\u65b9\u7a0b\u53bb\u8ba1\u7b97\u6f2b\u53cd\u5c04\u5149\u7ebf\u7684radiance\u4e86\u3002\u6211\u4eec\u5b9a\u4e49\u53cd\u5c04\u7387albedo\uff0c\u53ef\u4ee5\u662fRGB\u4e09\u4e2a\u901a\u9053\u81ea\u5df1\u7684\u53cd\u5c04\u7387\uff0calbedo\u8303\u56f4\u4e3a0-1.</p> <p></p> <p>\u7b2c\u4e8c\u79cd\u662fglossy\uff0c\u8fd9\u79cd\u6750\u8d28\u4e00\u822c\u662f\u91d1\u5c5e\u8868\u9762\u6240\u62e5\u6709\u7684\u3002</p> <p></p> <p>\u7b2c\u4e09\u79cd\u662f\u7406\u60f3\u53cd\u5c04\u4e0e\u6298\u5c04\uff0c\u5982\u73bb\u7483\u3002</p> <p></p> <p>\u7b2c\u56db\u79cd\u662f\u53ea\u6709\u7406\u60f3\u53cd\u5c04\uff0c\u5982\u955c\u5b50\u3002</p> <p></p> <p>\u90a3\u4e48\u6298\u5c04\u7a76\u7adf\u5982\u4f55\u8ba1\u7b97\u6298\u5c04\u65b9\u5411\u5462\uff1f\u8fd9\u91cc\u4ecb\u7ecdSnell's Law\u3002\u6839\u636esnell\u5b9a\u5f8b\uff0c\u76f4\u5230\u4e86\u4e24\u4e2a\u6750\u8d28\u7684\u6298\u5c04\u7387\uff0c\u90a3\u4e48\u5c31\u80fd\u8ba1\u7b97\u51fa\u6298\u5c04\u89d2\u7684\u6b63\u5f26\u503c\uff1b\u800c\u65b9\u5411\u5411\u91cf\u4e24\u4e2a\u7ef4\u5ea6\u7684\u786e\u5b9a\u5c31\u662f\u4f9d\u8d56\u4e8e\u955c\u9762\u53cd\u5c04\u4e86\u3002</p> <p></p> <p></p> <p>\u800c\u901a\u8fc7\u8ba1\u7b97\u53d1\u73b0\uff1a\u5982\u679c\u4e0a\u56fe\u4e2d\u7684\u5f0f\u5b50\u5c0f\u4e8e\u96f6\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u53d1\u751f\u6298\u5c04\uff0c\u53ea\u4f1a\u53d1\u751f\u5168\u53cd\u5c04\u73b0\u8c61\uff08Total Internal Reflection\uff09\u3002\u5982\u4e0b\u56fe\u6240\u4ecb\u7ecd\uff1a\uff08\u56fe\u6e90\uff1a\u7ef4\u57fa\u767e\u79d1\uff09\u800c\u5bf9\u4e8e\u6298\u5c04\u6709\u4e13\u95e8\u7684BTDF\uff08\u7c7b\u4f3c\u4e8eBRDF\uff0c\u4f46\u662f\u516c\u5f0f\u9488\u5bf9\u6298\u5c04\uff09\u516c\u5f0f\u3002</p> <p></p> <p>\u90a3\u4e48\u6709\u591a\u5c11\u80fd\u91cf\u4f1a\u6298\u5c04\uff1f\u591a\u5c11\u80fd\u91cf\u4f1a\u53cd\u5c04\uff1f\u90a3\u4e48\u5c31\u5f15\u5165\u4e86\u83f2\u6d85\u5c14\u9879\uff08Fresnel Term\uff09\uff1a\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5165\u5c04\u89d2\u5f88\u5c0f\uff0c\u4e66\u7684\u5012\u5f71\u770b\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff1b\u4f46\u662f\u5e73\u7740\u770b\u8fc7\u53bb\uff0c\u5c31\u80fd\u53d1\u73b0\u5f71\u5b50\u8f83\u4e3a\u6e05\u6670\u3002</p> <p></p> <p>\u5982\u4e0b\u56fe\u662f\u7edd\u7f18\u4f53\u7684Reflectance-Angle\u56fe\uff08\u4e00\u822c\u5b9e\u9645\u6e32\u67d3\u4e2d\uff0c\u53ea\u770b\u7ea2\u7ebf\u6570\u636e\uff09</p> <p></p> <p>\u5982\u4e0b\u56fe\u662f\u5bfc\u4f53\u7684Reflectance-Angle\u56fe\uff08\u4e00\u822c\u5b9e\u9645\u6e32\u67d3\u4e2d\uff0c\u53ea\u770b\u7ea2\u7ebf\u6570\u636e\uff09</p> <p></p> <p></p>"},{"location":"GAMES101/note.html#microfacet-material","title":"Microfacet Material","text":"<p>\u5f15\u5165\u83f2\u6d85\u5c14\u9879\uff0c\u662f\u4e3a\u4e86\u6b63\u5f0f\u4ecb\u7ecdMicrofacet Material: \u5fae\u8868\u9762\u6750\u8d28\u3002\u8fd9\u4e2a\u7406\u8bba\u5047\u8bbe\uff1a\u7c97\u7cd9\u7269\u4f53\u8868\u9762\u4ece\u8fd1\u5904\u770b\u5f53\u7136\u662f\u7c97\u7cd9\u7684\uff0c\u4f46\u662f\u4ece\u8fdc\u5904\u770b\uff0c\u51e0\u4e4e\u662f\u5e73\u7684\uff0ci.e\uff0c\u6bcf\u4e00\u4e2a\u5fae\u8868\u9762\u6211\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662f\u955c\u9762\uff0c\u6709\u81ea\u5df1\u7684\u6cd5\u7ebf\uff0c\u56e0\u6b64\u4e00\u4e2a\u7c97\u7cd9\u7269\u4f53\u8868\u9762\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u6cd5\u7ebf\u8868\u9762\u5206\u5e03\u3002\u5982\u679c\u6cd5\u5411\u91cf\u65b9\u5411\u8f83\u4e3aconcentrated\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u662fglossy\uff1b\u5982\u679c\u65b9\u5411\u5341\u5206\u5206\u6563\uff0c\u90a3\u4e48\u8ba4\u4e3a\u662fdiffuse\uff08\u6f2b\u53cd\u5c04\u6750\u8d28\uff09\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u56e0\u6b64\uff0c\u7ed3\u5408\u83f2\u6d85\u5c14\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u8868\u793a\uff1a\u591a\u5c11\u5fae\u8868\u9762\u80fd\u591f\u628a\u5149\u7ebf\u53cd\u5c04\u5230\u4e00\u5b9a\u65b9\u5411\u4e0a\uff1f\u516c\u793a\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0cshadowing-masking term\u662f\u4e3a\u4e86\u4fee\u653f\u4e00\u79cd\u73b0\u8c61\uff1a\u6709\u7684\u5fae\u955c\u9762\u53cd\u5c04\u51fa\u7684\u5149\u7ebf\u539f\u672c\u662f\u7b26\u5408\u8981\u6c42\u7684\u65b9\u5411\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u5fae\u955c\u9762\u906e\u6321\u4f4f\u3002\u56e0\u6b64\u8fd9\u4e00\u9879\u5c31\u662f\u7528\u6765\u8fdb\u884c\u4e00\u5b9a\u7684\u4fee\u6b63\u7684\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u6750\u8d28\uff0c\u5b83\u5e26\u6709\u4e00\u5b9a\u7684\u65b9\u5411\u6027\u3002\u4f8b\u5982\u8bf4\u4ece\u4e00\u4e2a\u89d2\u5ea6\u770b\u8fc7\u53bb\uff0c\u6f2b\u53cd\u5c04\u7a0b\u5ea6\u9ad8\uff1b\u800c\u53e6\u4e00\u4e2a\u89d2\u5ea6\u770b\u8fc7\u53bb\uff0c\u955c\u9762\u53cd\u5c04\u7a0b\u5ea6\u9ad8\u3002\u56e0\u6b64\u6750\u8d28\u8fd8\u5206\u4e3a\u5404\u5411\u5f02\u6027(anisotropic)\u4e0e\u5404\u5411\u540c\u6027(isotropic)\u3002\u5b9a\u4e49\u6709\uff1a\u5982\u679cBRDF\u5728\u4e0d\u540c\u7684\u65b9\u4f4d\u89d2\uff08azimuthal\uff09\u4e0b\u4e0d\u540c\uff0c\u90a3\u4e48\u5c31\u662f\u5404\u5411\u5f02\u6027\u6750\u6599\uff0c\u5178\u578b\u7684\u6709Brushed Metal, Velvet\u7b49\u3002</p>"},{"location":"GAMES101/note.html#properties-of-brdf-and-measuring-brdf","title":"Properties of BRDF and Measuring BRDF","text":"<p>BRDF\u6709\u54ea\u4e9b\u6027\u8d28\uff1f\u5982\u4e0b\u56fe\u6f14\u793a\uff1a</p> <p></p> <p></p> <p></p> <p>\u90a3\u4e48\u5982\u4f55\u6d4b\u51faBRDF\uff1f\u5b9e\u8df5\u8bc1\u660e\uff0c\u7ea2\u7ebf\u7684\u83f2\u6d85\u5c14\u6570\u503c\u548c\u771f\u6b63\u5b9e\u9645\u7684\u503c\u6709\u4e00\u5b9a\u7684\u5dee\u8ddd\uff0c\u56e0\u6b64\u8ba1\u7b97\u51faBRDF\u6709\u4e0d\u5c0f\u7684\u6311\u6218\uff0c\u56e0\u6b64\u5982\u679c\u80fd\u6d4b\u91cfBRDF\u90a3\u81ea\u7136\u662f\u6700\u597d\u3002\u73b0\u5b9e\u4e2d\u6709\u4e00\u79cd\u4eea\u5668\uff0c\u53eb\u505agonioreflectometer\u3002\u901a\u8fc7\u5149\u6e90\u548c\u6444\u50cf\u673a\u7684\u4e0d\u65ad\u73af\u7ed5\u4ee5\u6a21\u62df\u4e0d\u540c\u7684\u5165\u5c04\u89d2\u548c\u5b9e\u9645\u7684\u51fa\u5c04\u89d2\u3002\u76f8\u673a\u548c\u6d4b\u91cf\u539f\u7406\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p></p>"},{"location":"GAMES101/note.html#cameras-lenses-and-light-fields","title":"Cameras, Lenses and Light Fields","text":"<p>\u5149\u6805\u5316\u4e0eray tracing\u5176\u5b9e\u90fd\u662f\u5728\u6a21\u62dfsynthesis\u56fe\u50cf\uff0c\u4f46\u662f\u73b0\u5b9e\u4e2d\u6211\u4eec\u80fd\u591f\u6355\u6349\u771f\u5b9e\u7684\u7269\u4f53\uff0c\u6bd4\u5982\u8bf4\u4f7f\u7528\u76f8\u673a\u3002\u8fd9\u79cd\u884c\u4e3a\u5c31\u662fCapture\u3002\u7167\u76f8\u7684\u53d1\u5c55\uff0c\u6700\u5f00\u59cb\u662f\u5c0f\u5b54\u6210\u50cf\uff08Pinhole\uff09\uff0c\u4e4b\u540e\u6f14\u53d8\u51fa\u5149\u7ebf\u7ecf\u8fc7\u68f1\u955c\u4ece\u800c\u6210\u50cf\u5728\u4f20\u611f\u5668\u4e0a\uff08Lenses Form Image on Sensor\uff09\u3002\u4e00\u4e2a\u76f8\u673a\u6709\u54ea\u4e9b\u90e8\u4ef6\u5462\uff1f\u9996\u5148\u662f\u5feb\u95e8\uff08shutter\uff09\uff0c\u80fd\u591f\u63a7\u5236\u5149\u8fdb\u5165\u76f8\u673a\u7684\u65f6\u95f4\uff1b\u5176\u6b21\uff0c\u5149\u8fdb\u5165\u76f8\u673a\u4e4b\u540e\uff0c\u4f1a\u88abSensor\u6240\u8bb0\u5f55\uff0c\u800c\u4f20\u611f\u5668\u771f\u6b63\u8bb0\u5f55\u7684\u662firradiance\uff1aEach sensor point would integrate light from all points on the object, so all pixel values would be similar, i.e, the sensor records irradiance\u3002</p> <p>\u5229\u7528\u5c0f\u5b54\u6210\u50cf\u5236\u4f5c\u7684Pinhole Camera\u5f88\u65e9\u5c31\u88ab\u53d1\u660e\u4e86\uff0c\u800c\u4e14\u771f\u7684\u53ef\u4ee5\u7528\u6765\u62cd\u7167\uff0c\u5e76\u4e14\u56e0\u4e3a\u6ca1\u6709\u68f1\u955c\u7684\u5b58\u5728\uff0c\u753b\u9762\u4e2d\u989c\u8272\u7684\u53d8\u5316\u90fd\u662f\u9510\u5229\u7684\uff0c\u800c\u4e0d\u50cf\u68f1\u955c\u76f8\u673a\u4e00\u6837\u4f1a\u6709\u6240\u865a\u5316\u3002</p> <p>\u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u3002\u9996\u5148\u662f\u89c6\u573a\uff1aField of View\u3002\u5982\u679cSensor\u66f4\u4e3a\u9760\u8fd1\u68f1\u955c\uff0c\u90a3\u4e48\u89c6\u573a\u4f1a\u66f4\u5927\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u4e00\u822c\u76f8\u673a\u7684\u5b9a\u4e49\u4e2d\uff0c\u80f6\u7247\u7684\u5927\u5c0f\u662f35mm\uff0c\u7136\u540e\u6839\u636e\u4e00\u4e2a\u7126\u8dddf\u4f1a\u5b9a\u4e49\u51fa\u4e00\u4e2aFOV\u89d2\u5ea6\u3002\u4f46\u662f\u624b\u673a\u4e2d\u5c31\u4f1a\u4e0d\u4e00\u6837\u4e86\uff0c\u624b\u673a\u7684\u539a\u5ea6\u5f88\u5c0f\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u624b\u673a\u7684\u80f6\u7247\u5927\u5c0f\u662f\u5f88\u5c0f\u7684\uff0c\u4ece\u800c\u5728\u7126\u8dddf\u4f18\u5148\u7684\u60c5\u51b5\u4e0b\uff0c\u4f9d\u7136\u53ef\u4ee5\u6709\u5f88\u597d\u7684FOV\u3002\u76f8\u5173\u4ecb\u7ecd\u89c1\u4e0b\u56fe\uff1b\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u8c03\u6574\u80f6\u7247\u7684\u6709\u6548\u5927\u5c0f\u9762\u79ef\uff0c\u4ece\u800c\u6539\u53d8FOV\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u662f\u66dd\u5149\uff08Exposure\uff09\u3002\u6211\u4eec\u5b9a\u4e49\uff1aExposure = time * irradiance\u3002\u66dd\u5149\u65f6\u95f4\u7531\u5feb\u95e8\u63a7\u5236\uff0c\u800cIrradiance is the power of light falling on a unit area of sensor, which is controlled by lens aperture\uff08\u5149\u5708\uff09 and focal length\u3002\u5149\u5708\u7684\u8bbe\u8ba1\u662f\u4eff\u751f\u4eba\u7c7b\u77b3\u5b54\u7684\uff0c\u53ef\u4ee5\u63a7\u5236\u5149\u7ebf\u8fdb\u5165\u7684\u591a\u5c11\u3002\u540c\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u611f\u5149\u5ea6\uff08ISO gain\uff09\u6765\u8c03\u63a7\u6210\u50cf\u4fe1\u606f\u4e0e\u91c7\u96c6\u5149\u7ebf\u4fe1\u606f\u4e4b\u95f4\u7684\u5173\u7cfb\uff1aChange the amplification (analog and/or digital) between sensor values and digital image values\u3002</p> <p></p> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u5c55\u793a\u56fe\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff1a\u5149\u5708\u8d8a\u5927\uff0c\u666f\u6df1\u8d8a\u5927\uff1b\u5feb\u95e8\u65f6\u95f4\u8d8a\u77ed\uff0c\u865a\u5316\u6548\u679c\u8d8a\u4e0d\u660e\u663e\uff1bISO\u8d8a\u5927\uff0c\u566a\u70b9\u8d8a\u5927\u3002\u63cf\u8ff0\u5149\u5708\u6709\u4e13\u95e8\u7684F\u6570\uff1aFN or F/N\uff0c\u5176\u4e2dN\u5c31\u662ff-number\u3002\u7b80\u5355\u7406\u89e3F\u6570\u5c31\u662f\u5149\u5708\u76f4\u5f84\u7684\u5012\u6570\uff0cN\u8d8a\u5927\uff0c\u8bf4\u660e\u5149\u5708\u8d8a\u5c0f\uff0c\u53d6\u666f\u8d8a\u6df1\uff0c\u5149\u91cf\u8d8a\u5c0f\uff1b\u800c\u5b9e\u9645\u4e0a\uff1aThe f-number of a lens is defined as the focal length divided by the diameter of the aperture\u3002\u540c\u65f6\uff0c\u5feb\u95e8\u901f\u5ea6\u8d8a\u5feb\uff0c\u8d8a\u4e0d\u5bb9\u6613\u6a21\u7cca\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u6709\u8d70\u6837\u73b0\u8c61\uff1b\u5feb\u95e8\u7565\u6162\u4e00\u4e9b\uff0c\u76f8\u5f53\u4e8e\u662f\u5728\u65f6\u95f4\u7ef4\u5ea6supersampling\uff0c\u56e0\u6b64\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6709\u76ca\u4e8e\u53cd\u8d70\u6837\u6297\u952f\u9f7f\u3002\u5feb\u95e8\u7684\u901f\u5ea6\u53ef\u4ee5\u5ef6\u4f38\u51faFast and Slow Photography\u3002</p> <p>\u4e4b\u524d\u4e00\u76f4\u5728\u8bf4\u76f8\u673a\u7684\u4e0d\u540c\u90e8\u4ef6\uff0c\u4f46\u662f\u6700\u6700\u91cd\u8981\u7684\u5176\u5b9e\u662f\u955c\u5934\u3002\u771f\u5b9e\u7684\u955c\u5934\u5176\u5b9e\u90fd\u662f\u7531\u68f1\u955c\u7ec4\u7ec4\u6210\u7684\uff0c\u975e\u5e38\u7684\u590d\u6742\uff1b\u540c\u65f6\u6709\u4e9b\u68f1\u955c\u957f\u7684\u4e0d\u662f\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u79cd\u68f1\u955c\uff0c\u4f8b\u5982Aberration\u73b0\u8c61\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u7b80\u5355\u7684\u3001\u7406\u60f3\u7684\u68f1\u955c\uff1aIdeal Thin Lens\uff0c\u5e73\u884c\u5149\u7ecf\u8fc7\u5b83\u4f1a\u805a\u5728\u7126\u70b9\u3002\u8fd9\u79cd\u68f1\u955c\u4f1a\u6ee1\u8db3\u4e00\u79cd\u57fa\u672c\u7684\u7269\u7406\u89c4\u5f8b\uff1a</p> <p></p> <p>\u90a3\u4e48\u5728ray tracing\u4e2d\u5982\u4f55\u5f15\u5165\u900f\u955c\uff08lens\uff09\u5462\uff1f\u4e0b\u56fe\u4ecb\u7ecd\u4e86setup\uff1a</p> <p></p> <p>\u5728\u6e32\u67d3\u7684\u65f6\u5019\uff0c\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <p></p> <p>BTW\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86Depth of Focus(\u7126\u6df1)\u662f\u5982\u4f55\u5f71\u54cdDepth of Field(\u666f\u6df1)\u7684\uff1a</p> <p></p> <p>\u6700\u540e\u4ecb\u7ecd\u5149\u573a\uff08Light Field / Lumigraph\uff09\u3002\u6211\u4eec\u751f\u6d3b\u4e2d\u770b\u5230\u73b0\u5b9e\u4e09\u7ef4\u4e16\u754c\uff0c\u4f46\u662f\u5047\u5982\u8bf4\u773c\u524d\u653e\u4e00\u5757\u5c4f\u5e55\uff0c\u7136\u540e\u7cbe\u786e\u5448\u73b0\u4f60\u4e4b\u524d\u770b\u5230\u76842D\u753b\u9762\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u4e0d\u4f1a\u53d1\u73b0\u5f02\u5e38\uff0c\u8fd9\u5c31\u662f\u865a\u62df\u73b0\u5b9e\u7684\u539f\u7406\uff08\u6211\u4eec\u53ea\u5173\u5fc3\u201c\u5e55\u5e03\u201d\uff0c\u4e0d\u5173\u5fc3\u771f\u5b9e\u76843D\u4e16\u754c\uff09\u3002\u90a3\u4e48\u5982\u4f55\u8868\u793a\u4eba\u770b\u5230\u76842D\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5168\u5149\u51fd\u6570\uff08Plenoptic Function\uff09\u6765\u8fdb\u884c\u8868\u793a\u3002\u4ee5\u773c\u775b\u4e3a\u539f\u70b9\uff0c\u53ef\u4ee5\u7528\u7403\u5750\u6807\u7cfb\u7684\u8f93\u5165\u6765\u8868\u793a\u51fd\u6570\uff1a\\(P(\\theta,\\phi) \\rightarrow Intensity\\ of\\ light\\)\u3002\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709RGB\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u884c\u6539\u8fdb\uff1a\\(P(\\theta,\\phi, \\lambda)\\)\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u65f6\u95f4\u7ef4\u5ea6\uff0c\u540c\u65f6\u5f15\u5165\u773c\u775b\u7684\u4e09\u7ef4\u5750\u6807\uff1a\\(P(\\theta,\\phi, \\lambda, t, V_{x}, V_{y}, V_{z})\\)\u3002\u8fd9\u662f\u4e00\u4e2a\u4e03\u4e2a\u7ef4\u5ea6\u7684\u51fd\u6570\u3002</p> <p>\u4e09\u7ef4\u4e2d\u7684\u5149\u7ebf\u8ba4\u4e3a\u662f5D\uff1a\u8d77\u70b9\u4e09\u7ef4\uff0c\u65b9\u5411\u7403\u5750\u6807\u8868\u793a\u4e24\u7ef4\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u5149\u573a\uff1f\u89c1\u4e0b\u56fe\u3002\u6211\u4eec\u7528\u76d2\u5b50\u6846\u4f4f\u7269\u4f53\uff0c\u7136\u540e\u7528\u4e00\u5b9a\u7684resolution\u5212\u5206\u76d2\u5b50\u4e0a\u7684\u8868\u9762\u3002\u5bf9\u4e8e\u7269\u4f53\u8868\u9762\u7684\u4efb\u4f55\u4e00\u4e2a\u70b9\u6765\u8bf4\uff0c\u5b83\u548c\u76d2\u5b50\u4e0a\u7684\u4e00\u4e2a\u5c0f\u683c\u5b50\u7684\u4e2d\u5fc3\u70b9\u8fde\u7ebf\uff0c\u5c31\u662f\u65b9\u5411\uff0c\u5982\u679c\u901a\u8fc7\u8fd9\u4e9b\u4fe1\u606f\u6211\u5c31\u80fd\u77e5\u9053intensity\u7684\u8bdd\uff0c\u8fd9\u5c31\u662f\u5149\u573a\u7684\u6982\u5ff5\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u7269\u4f53\u8868\u9762\u53ef\u4ee5\u7406\u89e3\u4e3a2D\uff08texture\uff09\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u51fd\u6570\uff08\u5168\u5149\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff09\u7684\u8f93\u5165\u7ef4\u5ea6\u5c31\u4ece\u539f\u6765\u76845D\u964d\u52304D\uff1a2D\u8868\u793a\u4f4d\u7f6e\uff082D coordinates inputted into mapping\uff09\uff0c2D\u8868\u793a\u65b9\u5411\u3002\u6709\u4e86\u5149\u573a\uff0c\u5c31\u80fd\u77e5\u9053\u4efb\u610f\u89d2\u5ea6\u770b\u5411\u7269\u4f53\u5404\u4e2a\u70b9\u6240\u5e94\u8be5\u63a5\u53d7\u5230\u7684\u5149\u3002</p> <p></p> <p>\u540c\u65f6\uff0c\u4e0e\u5176\u4e13\u95e8\u7528\u4e24\u4e2a\u89d2\u6765\u8868\u793a\u65b9\u5411\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u70b9\u3002\u5982\u4e0b\u56fe\uff1a\u5b9a\u4e49\u4e24\u4e2a\u76f8\u4e92\u5e73\u884c\u7684\u9762\uff0c\u800c\u4e14\u662fAxis-Aligned\uff0c\u90a3\u4e48\u901a\u8fc7\u56db\u4e2a\u53c2\u6570\uff0c\u5373\u4e24\u4e2a\u70b9\u5404\u81ea\u7684\u4e8c\u7ef4\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u51fd\u6570\u6c42\u51fa\u5149\u5f3a\u3002</p> <p></p> <p>\u5229\u7528\u5149\u573a\uff0c\u5c31\u80fd\u5236\u4f5c\u5149\u573a\u6444\u50cf\u673a\uff1a\u539f\u6765\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u5bf9\u5e94\u7684sensor\u90fd\u6362\u6210\u900f\u955c\uff0c\u5bf9\u4e8e3D\u4e16\u754c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u65b9\u5411\u8fc7\u6765\u7684\u70b9\uff0c\u90fd\u80fd\u7528\u5149\u573a\u51fd\u6570\u77e5\u9053\u5f3a\u5ea6\uff0c\u56e0\u6b64\u5230\u8fbe\u68f1\u955c\u65f6\u7684\u662firradiance\uff0c\u4f46\u662f\u900f\u8fc7\u900f\u955c\u53c8\u80fd\u6309\u7167\u65b9\u5411\u5206\u5f00\u50a8\u5b58radiance\uff1b\u76f8\u5f53\u4e8e\uff0c\u5982\u679c\u5206\u5f00\u50a8\u5b58\u7684\u90a3\u4e9bradiance\u90fd\u53d6\u5e73\u5747\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u539f\u672c\u7684\u666e\u901a\u76f8\u673a\u3002\u8fd9\u4e48\u505a\u6709\u4ec0\u4e48awesome\u7684\u5730\u65b9\u5417\uff1f\u90a3\u5c31\u662f\u865a\u62df\u53d8\u7126\uff01\u901a\u8fc7\u8ba1\u7b97\u67d0\u4e00\u7126\u8ddd\u4e0b\u5404\u4e2a\u50cf\u7d20\u5e94\u8be5\u9009\u51fa\u7684irradiance\u6765\u586b\u5145\u5404\u4e2a\u50cf\u7d20\uff0c\u5f97\u5230\u7684\u7167\u7247\u5c31\u662f\u6211\u5e0c\u671b\u7684\u7126\u8ddd\u4e0b\u7684\u7167\u7247\u3002\u5f53\u7136\u5206\u8fa8\u7387\u4f1a\u4e0b\u964d\uff0c\u56e0\u4e3a\u539f\u6765\u5448\u73b0\u4e00\u4e2a\u50cf\u7d20\u53ea\u9700\u8981\u80f6\u7247\u7684\u4e00\u4e2a\u5355\u4f4d\uff0c\u4f46\u662f\u73b0\u5728\u4e3a\u4e86\u8bb0\u5f55\u591a\u4e2a\u65b9\u5411\u7684radiance\uff0c\u9700\u8981\u989d\u5916\u6d88\u8017\u50a8\u5b58\u7a7a\u95f4\u3002</p> <p></p>"},{"location":"GAMES101/note.html#color-and-perception","title":"Color and Perception","text":"<p>\u4e00\u675f\u5149\u7a7f\u8fc7\u4e09\u68f1\u955c\uff0c\u80fd\u6298\u5c04\u51fa\u4e0d\u540c\u7684\u989c\u8272\uff0c\u662f\u56e0\u4e3a\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u6298\u5c04\u7387\u4e0d\u4e00\u6837\uff1b\u6362\u800c\u8a00\u4e4b\uff0c\u5149\u5176\u5b9e\u662f\u7531\u4e0d\u540c\u6ce2\u957f\u6784\u6210\u7684\uff0c\u800c\u5bf9\u5e94\u5230\u7684\u5c31\u662f\u5149\u8c31\uff08The Visible Spectrum of Light\uff09\u3002\u540c\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u666e\u529f\u7387\u5bc6\u5ea6\u6765\u63cf\u8ff0\u5149\u5728\u4e0d\u540c\u6ce2\u957f\u7684\u5206\u5e03\uff08SPD\uff09\u3002SPD\u6709\u7ebf\u6027\u6027\u8d28\uff08Linearity\uff09\u3002</p> <p>\u4f46\u662f\u6700\u7ec8\u6211\u4eec\u770b\u5230\u7684\u4e0d\u662f\u5149\u8c31\uff0c\u4e5f\u4e0d\u662fSPD\u66f2\u7ebf\uff1aColor is a phenomenon of human perception; it is not a universal property of light\u3002\u90a3\u4e48\u4eba\u7a76\u7adf\u662f\u5982\u4f55\u611f\u77e5\u5230\u989c\u8272\u7684\uff1f\u90a3\u4e48\u5c31\u8981\u95ee\u773c\u775b\u7684\u7ed3\u6784\u4e86\u3002\u89c6\u7f51\u819c\u662f\u6700\u7ec8\u5149\u7ebf\u5230\u8fbe\u7684\u5730\u65b9\uff0c\u90a3\u4e48\u989c\u8272\u7684\u5448\u73b0\u662f\u7531\u4e8e\u89c6\u7f51\u819c\u4e0a\u7684\u611f\u5149\u7ec6\u80de\uff1a\u7ec6\u80de\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u68d2\u72b6\uff0c\u53ef\u4ee5\u7528\u6765\u611f\u77e5\u5149\u7167\u7684\u5f3a\u5ea6\uff0c\u7b2c\u4e8c\u79cd\u662f\u9525\u5f62\u7ec6\u80de\uff0c\u5b83\u8fd8\u5206\u4e3a\u4e09\u7c7b\uff0c\u6bcf\u4e00\u7c7b\u5bf9\u4e0d\u540c\u7684\u6ce2\u957f\u7684\u611f\u53d7\u7a0b\u5ea6\u4e0d\u4e00\u6837\u3002</p> <p></p> <p>\u6240\u4ee5\u4eba\u773c\u7a76\u7adf\u611f\u53d7\u5230\u7684\u662f\u4ec0\u4e48\uff1f\u5176\u5b9e\u4e0a\u8ff0\u7684\u4e09\u79cd\u7ec6\u80de\u7684\u611f\u53d7\u66f2\u7ebf\u5176\u5b9e\u662f\u610f\u5473\u7740\u7684\u662f\u201c\u654f\u611f\u5ea6\u201d\uff0c\u90a3\u4e48\u901a\u8fc7\u4e09\u4e2a\u6743\u91cd\u66f2\u7ebf\u53bb\u548c\u539f\u6765\u5149\u7ebf\u7684\u6ce2\u957f\u8fdb\u884c\u79ef\u5206\u64cd\u4f5c\uff0c\u5c31\u80fd\u5f97\u5230\u4e09\u4e2a\u503c\uff1aSML\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u6700\u7ec8\uff0c\u4eba\u773c\u770b\u89c1\u7684\u5176\u5b9e\u5c31\u662f\u4e09\u79cd\u5bf9\u5e94\u7684\u503c\uff1aSML\uff0c\u8fd9\u662f\u5927\u8111\u6536\u5230\u7684\u4fe1\u606f\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e00\u79cd\u73b0\u8c61\uff1a\u540c\u8272\u5f02\u8c31\uff08Metamerism\uff09\u3002\u4e0d\u540c\u6ce2\u957f\u53ef\u80fd\u6709\u76f8\u540c\u7684\u989c\u8272\u5417\uff1f\u7b54\u6848\u5f53\u7136\u662f\u53ef\u80fd\u7684\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>Color Reproduction / Matching\u3002Additive Color is as the following figure:</p> <p></p> <p>\u8bf4\u660e\u901a\u8fc7\u4e09\u79cd\u6ce2\u957f\uff0c\u6211\u5c31\u80fd\u62df\u5408\u51fa\u5f88\u591a\u7684\u989c\u8272\u3002\u5f53\u7136\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\uff1a\u5982\u4e0b\u56fe\uff0c\u5de6\u8fb9\u7684\u989c\u8272\u53f3\u8fb9\u600e\u4e48\u4e5f\u62df\u5408\u4e0d\u51fa\u6765\uff0c\u4f46\u662f\u5982\u679c\u5de6\u8fb9\u52a0\u4e0a\u4e00\u79cd\u6ce2\u957f\u7684\u4e00\u5b9a\u5f3a\u5ea6\uff0c\u53f3\u8fb9\u5c31\u80fd\u62df\u5408\u51fa\u6765\u4e86\uff0c\u8fd9\u79cd\u60c5\u51b5\u5927\u591a\u662f\u56e0\u4e3a\u6ce2\u957f\u53ea\u80fd\u76f8\u52a0\uff0c\u4e0d\u80fd\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u5b9e\u73b0\u51cf\u6cd5\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u4eba\u4eec\u5c1d\u8bd5\u7528RGB\u53bb\u62df\u5408\u989c\u8272\u3002\u4e0b\u56fe\u5c31\u5c55\u793a\u4e86\uff1a\u4e0d\u540c\u6ce2\u957f\u4e0b\u7684\u5149\uff0c\u5e94\u8be5\u5982\u4f55\u7528\u4e09\u79cdRGB\u6ce2\u957f\u5149\u7684\u5404\u81ea\u53c2\u6570\u53bb\u62df\u5408(Standardized RGB, sRGB)\uff1a</p> <p></p> <p>\u867d\u7136sRGB\u770b\u4f3c\u5b8c\u7f8e\uff0c\u4f46\u662f\u80fd\u591f\u62df\u5408\u7684\u6ce2\u957f\u5149\u7684\u6ce2\u957f\u8303\u56f4\uff0c\u4e5f\u5c31\u662f\u8272\u57df\uff0c\u662f\u6709\u9650\u7684\u3002\u4e0a\u56fe\u4e2d\u7ea2\u8272\u8d1f\u6570\u7684\u90e8\u5206\u5728\u73b0\u5b9e\u64cd\u4f5c\u4e2d\u4e0d\u53ef\u80fd\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u80fd\u7ed9\u5149\u52a0\u4e0a\u6ce2\u957f\u5149\uff0c\u4e0d\u80fd\u62bd\u51fa\u6ce2\u957f\u5149\u3002\u56e0\u6b64\u8fd8\u6709\u5176\u4ed6\u7684Color Matching\uff0c\u5982CIE XYZ\uff0c\u5b83\u548csRGB\u7684\u533a\u522b\u4ec5\u4ec5\u662f\u5339\u914d\u51fd\u6570\u3002\u8272\u57df\uff0cGamut\uff0cis the set of chromaticties generated by a set of color primaries\u3002\u8fd8\u6709\u4e9b\u5e38\u89c1\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u5982HSV\uff08Hue-Saturation-Value\uff09\uff0cLab\uff08CIELAB Space\uff09\uff0cCMKY\uff08Cyan, Magenta, Yellow, and Key\uff09\u3002</p> <p></p> <p></p>"},{"location":"GAMES101/note_hw.html","title":"Homework","text":""},{"location":"GAMES101/note_hw.html#homework-1","title":"Homework 1","text":"<p>\u4f5c\u4e1a\u6587\u4ef6\u8be6\u89c1Assignment1\u3002\u8fd9\u91cc\u9700\u8981\u5b9e\u73b0\u7ed5Z\u8f74\u65cb\u8f6c\u7684\u65cb\u8f6c\u77e9\u9635\uff0c\u6295\u5f71\u77e9\u9635\uff0c\u548c\u4e09\u89d2\u5f62\u7ed5\u8fc7\u539f\u70b9\u7684\u4efb\u610f\u4e00\u6761\u8f74\u65cb\u8f6c\u7684\u77e9\u9635\uff0c\u5176\u5b9e\u8fd9\u4e09\u4e2a\u77e9\u9635\u8bfe\u7a0b\u4e2d\u90fd\u6709\u63d0\u53ca\u3002</p> <p>\u7b2c\u4e00\u4e2a\u77e9\u9635\uff1a\u7ed5x y z\u8f74\u65cb\u8f6c\u7684\u65cb\u8f6c\u77e9\u9635\u5982\u4e0b\uff1a</p> <p></p> <p>\u56e0\u6b64\uff0c\u4f9d\u846b\u82a6\u753b\u74e2\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f\u8f93\u5165\u7684\u662f\u89d2\u5ea6\uff0c\u8981\u8f6c\u5316\u4e3a\u5f27\u5ea6\u5236\uff1b\u5e76\u4e14\uff0c\u8fd9\u4e2a\u77e9\u9635\u5982\u4f55\u5199\u8fdb<code>Eigen::Matrix4f model</code>\u3002\u90a3\u4e48\u95ee\u4e0b\u53ef\u7231\u7684kimi\uff0c\u5c31\u4f1a\u77e5\u9053\uff08\u4ee5\u4e0b\u5185\u5bb9\u6765\u81eakimi\uff09\uff1a</p> <p>Prompt\uff1a\u77e9\u9635\u5982\u4f55\u5199\u8fdb<code>Eigen::Matrix4f model</code></p> <p>\u5728C++\u4e2d\u4f7f\u7528Eigen\u5e93\u6765\u5904\u7406\u77e9\u9635\u65f6\uff0c<code>Eigen::Matrix4f</code>\u662f\u4e00\u4e2a4x4\u6d6e\u70b9\u6570\u77e9\u9635\u7684\u7c7b\u578b\u3002\u5982\u679c\u4f60\u60f3\u5c06\u6570\u636e\u5199\u5165\u4e00\u4e2a<code>Eigen::Matrix4f</code>\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u65b9\u6cd5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u76f4\u63a5\u521d\u59cb\u5316\uff1a \u5f53\u4f60\u521b\u5efa\u4e00\u4e2a<code>Eigen::Matrix4f</code>\u53d8\u91cf\u65f6\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u521d\u59cb\u5316\u5b83\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model;    model &lt;&lt; 1, 0, 0, 0,             0, 1, 0, 0,             0, 0, 1, 0,             0, 0, 0, 1; // \u8fd9\u662f\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635</code></p> <ol> <li>\u4f7f\u7528<code>.setIdentity()</code>\uff1a \u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\uff0c\u53ef\u4ee5\u4f7f\u7528<code>.setIdentity()</code>\u65b9\u6cd5\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model;    model.setIdentity();</code></p> <ol> <li>\u4f7f\u7528<code>.setZero()</code>\uff1a \u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u6240\u6709\u5143\u7d20\u90fd\u662f\u96f6\u7684\u77e9\u9635\uff0c\u53ef\u4ee5\u4f7f\u7528<code>.setZero()</code>\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model;    model.setZero();</code></p> <ol> <li>\u4f7f\u7528<code>Eigen::Matrix4f::Zero()</code>\u6216<code>Eigen::Matrix4f::Identity()</code>\uff1a \u8fd9\u4e9b\u662f\u9759\u6001\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u7279\u5b9a\u7c7b\u578b\u7684\u77e9\u9635\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model = Eigen::Matrix4f::Zero(); // \u5168\u96f6\u77e9\u9635    Eigen::Matrix4f model2 = Eigen::Matrix4f::Identity(); // \u5355\u4f4d\u77e9\u9635</code></p> <ol> <li>\u4f7f\u7528<code>Eigen::Matrix4f</code>\u7684\u6784\u9020\u51fd\u6570\uff1a \u4f60\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5b9a\u503c\u7684\u77e9\u9635\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model(1, 2, 3, 4,                          5, 6, 7, 8,                          9, 10, 11, 12,                          13, 14, 15, 16);</code></p> <ol> <li>\u4f7f\u7528<code>Eigen::Matrix4f</code>\u7684\u8d4b\u503c\u64cd\u4f5c\u7b26\uff1a \u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u6570\u7ec4\u6216\u8005\u53e6\u4e00\u4e2a\u77e9\u9635\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8d4b\u503c\u64cd\u4f5c\u7b26\u6765\u586b\u5145<code>Eigen::Matrix4f</code>\u3002</li> </ol> <p><code>cpp    float data[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};    Eigen::Matrix4f model;    model = Eigen::Map&lt;Eigen::Matrix&lt;float, 4, 4, Eigen::RowMajor&gt;&gt;(data);</code></p> <ol> <li>\u4f7f\u7528<code>Eigen::Matrix4f</code>\u7684<code>.block()</code>\u65b9\u6cd5\uff1a \u5982\u679c\u4f60\u9700\u8981\u5c06\u4e00\u4e2a\u8f83\u5c0f\u7684\u77e9\u9635\u6216\u6570\u7ec4\u63d2\u5165\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u77e9\u9635\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>.block()</code>\u65b9\u6cd5\u3002</li> </ol> <p><code>cpp    Eigen::Matrix4f model;    Eigen::Matrix4f submatrix(1, 2, 3, 4,                              5, 6, 7, 8);    model.block&lt;2, 2&gt;(0, 0) = submatrix;</code></p> <p>\u9009\u62e9\u54ea\u79cd\u65b9\u6cd5\u53d6\u51b3\u4e8e\u4f60\u7684\u5177\u4f53\u9700\u6c42\u548c\u4f60\u60f3\u8981\u521d\u59cb\u5316\u7684\u77e9\u9635\u7c7b\u578b\u3002</p> <p>Prompt\uff1a\u8bed\u6cd5\u4f1a\u81ea\u52a8\u8bc6\u522b\u6362\u884c\u5c31\u662f\u77e9\u9635\u65b0\u7684\u4e00\u884c\u5417\uff1f</p> <p>\u5728Eigen\u5e93\u4e2d\uff0c\u4f7f\u7528<code>&lt;&lt;</code>\u8fd0\u7b97\u7b26\u6765\u521d\u59cb\u5316\u6216\u8d4b\u503c\u77e9\u9635\u65f6\uff0c\u786e\u5b9e\u53ef\u4ee5\u5229\u7528\u6362\u884c\u7b26\u6765\u8868\u793a\u77e9\u9635\u7684\u65b0\u4e00\u884c\u3002\u8fd9\u79cd\u8bed\u6cd5\u662fEigen\u63d0\u4f9b\u7684\u4fbf\u6377\u65b9\u5f0f\uff0c\u4f7f\u5f97\u77e9\u9635\u7684\u521d\u59cb\u5316\u66f4\u52a0\u76f4\u89c2\u548c\u6613\u4e8e\u9605\u8bfb\u3002</p> <p>\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u521d\u59cb\u5316\u4e00\u4e2a<code>Eigen::Matrix4f</code>\u77e9\u9635\uff1a</p> <pre><code>Eigen::Matrix4f model;\nmodel &lt;&lt; 1, 0, 0, 0,\n         0, 1, 0, 0,\n         0, 0, 1, 0,\n         0, 0, 0, 1; // \u8fd9\u662f\u4e00\u4e2a\u5355\u4f4d\u77e9\u9635\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u884c\u7684\u672b\u5c3e\u4f7f\u7528\u6362\u884c\u7b26<code>\\n</code>\u6765\u8868\u793a\u4e0b\u4e00\u884c\u7684\u5f00\u59cb\u3002Eigen\u4f1a\u81ea\u52a8\u8bc6\u522b\u6362\u884c\u7b26\uff0c\u5e76\u5c06\u5176\u89c6\u4e3a\u65b0\u884c\u7684\u5f00\u59cb\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5728\u4f7f\u7528<code>&lt;&lt;</code>\u8fd0\u7b97\u7b26\u8fdb\u884c\u77e9\u9635\u521d\u59cb\u5316\u65f6\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u6bcf\u884c\u7684\u5143\u7d20\u6570\u91cf\u4e0e\u77e9\u9635\u7684\u5217\u6570\u76f8\u5339\u914d\uff0c\u5e76\u4e14\u6240\u6709\u884c\u7684\u5143\u7d20\u6570\u91cf\u4e00\u81f4\u3002\u5982\u679c\u884c\u4e0e\u5217\u4e0d\u5339\u914d\uff0c\u7f16\u8bd1\u5668\u5c06\u4f1a\u62a5\u9519\u3002</p> <p>\u90a3\u4e48\u7ed3\u679c\u5f88\u660e\u663e\u4e86\uff0c<code>Eigen::Matrix4f get_model_matrix(float rotation_angle)</code>\u5982\u4e0b\uff1a</p> <pre><code>constexpr double MY_PI = 3.1415926;\nEigen::Matrix4f get_model_matrix(float rotation_angle)\n{\n    Eigen::Matrix4f model = Eigen::Matrix4f::Identity();\n    // \u89d2\u5ea6\u8f6c\u5316\u4e3a\u5f27\u5ea6\n    float angle = rotation_angle / 180 * MY_PI;\n    model &lt;&lt; std::cos(angle), -std::sin(angle), 0, 0,\n        std::sin(angle), std::cos(angle), 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1;\n    return model;\n}\n</code></pre> <p>\u7b2c\u4e8c\u4e2a\u6295\u5f71\u77e9\u9635\uff0c\u8f93\u5165\u7684\u53c2\u6570\u6709\u70b9\u591a\uff0c\u8be6\u89c1\u4e0b\u56fe\uff1a</p> <ul> <li>eye_fov\u4e3afield of view\uff0c\u5782\u76f4\u53ef\u89c6\u89d2\uff08\u4f46\u662f\u6ca1\u8bf4\u662ffovY\u8fd8\u662f\u4ec0\u4e48\uff0c\u6211\u8ba4\u4e3a\u662ffovY\uff09</li> <li>aspect_ratio\u4e3a\u5bbd\u9ad8\u6bd4</li> <li>zNear \u5c31\u662f\u8fd1\u5e73\u9762\u7684Z\u503c\uff0c\u800czFar\u662f\u8fdc\u5e73\u9762\u5230XOY\u7684Z\u503c\uff08\u6ce8\u610f\uff1a\u90fd\u662f\u8d1f\u6570\uff09</li> </ul> <p></p> <p>\u800c\u6295\u5f71\u77e9\u9635\u4e4b\u524d\u4e5f\u662f\u63a8\u8fc7\u7684\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\\(M_{ortho}\\)\u4e2d\uff0c\u540e\u9762\u4e00\u4e2a\u77e9\u9635\u4ee3\u8868\u5e73\u79fb\uff0c\u524d\u4e00\u4e2a\u4ee3\u8868\u7f29\u653e\uff0c\u662f\u5148\u5e73\u79fb\u540e\u7f29\u653e\uff0c\u4f7f\u5f97cuboid\u53d8\u6210canonical cube\u3002  \u4f46\u662f\u5982\u4f55\u7528\u8fd9\u4e9b\u53c2\u6570\u63a8\u51fa\uff1a\\(r-l(\u957f)\uff1bt-b(\u5bbd)\\)\u5462\uff1f\uff08\\(M_{ortho}\\)\u77e9\u9635\u4e2d\u7684\u53c2\u6570\u90fd\u662f\u8fd1\u5e73\u9762\u7684\uff0c\u56e0\u4e3a\u5728\\(persp\\rightarrow ortho\\)\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bbe\u5b9a\u662f\u8fd1\u5e73\u9762\u4e0d\u53d8\uff0c\u800c\u8fdc\u5e73\u9762\u5927\u5c0f\u53d8\u6210\u8fd1\u5e73\u9762\u5927\u5c0f\uff09\u4e0b\u9762\u8fd9\u4e2a\u56fe\u8bf4\u660e\u4e86\u4e00\u5207\uff1a</p> <p></p> <p>\u56e0\u6b64\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>Eigen::Matrix4f get_projection_matrix(float eye_fov, float aspect_ratio,\n                                      float zNear, float zFar)\n{\n    Eigen::Matrix4f projection = Eigen::Matrix4f::Identity();\n    // \u5957\u516c\u5f0f\n    float n = zNear;\n    float f = zFar;\n    Eigen::Matrix4f M_persp_to_ortho;\n    M_persp_to_ortho &lt;&lt; n, 0, 0, 0,\n        0, n, 0, 0,\n        0, 0, n + f, -n * f,\n        0, 0, 1, 0;\n    // \u4f9d\u7136\u9700\u8981\u89d2\u5ea6\u8f6c\u5316\u4e3a\u5f27\u5ea6\u5236\n    float fov = eye_fov * MY_PI / 180.0;\n    // \u5957\u516c\u5f0f\n    // \u6ce8\u610fn\u8981\u53d6\u8d1f\u6570\uff01\u56e0\u4e3a\u539f\u6765\u7684zNear\u662f\u8d1f\u6570\uff01\u9762\u671d-Z\u8f74\uff01\n    float t = -n * tan(fov / 2);\n    float b = -t;\n    float r = aspect_ratio * t;\n    float l = -r;\n\n    Eigen::Matrix4f M_ortho, translation, scale;\n    translation &lt;&lt; 1, 0,  0,  -(r+l)/2,\n             0, 1,  0,  -(t+b)/2,\n             0, 0,  1,  -(n+f)/2,\n             0, 0,  0,  1;\n    scale &lt;&lt; 2/(r-l),   0,  0,  0,\n                0,  2/(t-b),   0,  0,\n                0,  0,  2/(n-f),    0,\n                0,  0,  0,  1;\n    M_ortho =  scale * translation;           \n    projection = M_ortho * M_persp_to_ortho ;\n    return projection;\n}\n</code></pre> <p>\u8fd9\u91cc\u5c31\u80fd\u8fd0\u884c\u7ed3\u679c\u4e86\uff0c\u5982\u4e0b\uff1a\uff08\u867d\u7136\u8fd0\u884c\u8d77\u6765\u7684\u8fc7\u7a0b\u4e00\u6ce2\u4e09\u6298\uff0c\u540e\u7eed\u4f1a\u5c06\uff09</p> <p></p> <p>\u90a3\u4e48\u5173\u4e8e\u63d0\u9ad8\u9879\uff0c\u7f57\u5fb7\u91cc\u683c\u65af\u516c\u5f0f\u5982\u4e0b\uff1a  \u56e0\u6b64\u8bbe\u8ba1\u51fd\u6570\u5982\u4e0b\u3002<code>axis</code>\u662f\u4e00\u4e2a<code>Eigen::Vector3f</code>\u7684\u53d8\u91cf\uff08\u7f51\u7edc\u641c\u7d22\u5bf9\u5e94\u7684\u5f97\u5230n\u5411\u91cfx y z\u503c\u7684\u51fd\u6570\uff09\uff0c\u5e26\u5165\u516c\u5f0f\uff0c\u6ce8\u610f\u539f\u6765\u516c\u5f0f\u5f97\u5230\u7684\u662f3\u00d73\uff0c\u800c\u4f5c\u4e3a\u65cb\u8f6c\u77e9\u9635\u8981\u7565\u5fae\u53d8\u5f62\uff1a</p> <pre><code>Eigen::Matrix4f get_axis_model_matrix(float rotation_angle, Eigen::Vector3f axis)\n{\n    float angle = rotation_angle / 180 * MY_PI;\n    Eigen::Matrix3f N = Eigen::Matrix3f::Identity();\n    N &lt;&lt; 0, -axis.z(), axis.y(),\n        axis.z(), 0, -axis.x(),\n        -axis.y(), axis.x(), 0;\n    Eigen::Matrix3f rod = std::cos(angle) * Eigen::Matrix3f::Identity() + (1 - std::cos(angle)) * axis * axis.transpose() + std::sin(angle) * N;\n    Eigen::Matrix4f model;\n\n    model &lt;&lt; rod(0, 0), rod(0, 1), rod(0, 2), 0,\n        rod(1, 0), rod(1, 1), rod(1, 2), 0,\n        rod(2, 0), rod(2, 1), rod(2, 2), 0,\n        0, 0, 0, 1;\n\n    return model;\n}\n</code></pre> <p>\u597d\u7684\uff0c\u4e0a\u9762\u5c31\u662fhomework1\u7684\u4e3b\u8981\u5185\u5bb9\u4e86\u3002\u6700\u540e\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff1a\u7a76\u7adf\u5982\u4f55\u662fcmake\u6700\u540e\u5f97\u5230exe\u6267\u884c\u6587\u4ef6\u7684\u3002\u8bf4\u5b9e\u8bdd\uff0c\u5173\u4e8ecmake\u7684\u5de5\u7a0b\u77e5\u8bc6\uff0c\u6211\u7684\u77e5\u8bc6\u50a8\u5907\u5f88\u5c11\uff0c\u867d\u7136CS100\u7684\u690d\u7269\u5927\u6218\u50f5\u5c38\u5927\u4f5c\u4e1a\u6d89\u53ca\u5230\u4e86\u8fd9\u4e00\u90e8\u5206\u7684\u77e5\u8bc6\u70b9\u3002\u603b\u4e4b\uff0c\u5728\u73af\u5883\u53d8\u91cf\u91cc\u9762\u6ca1\u6709\u7f16\u5165Eigen\u5e93\u7684\u65f6\u5019\uff0c\u6211\u662f\u5982\u4f55\u5904\u7406opencv\u5e93\u7684\u3002</p> <p>\u9996\u5148\u662fopencv\u7684\u4e0b\u8f7d\uff0c\u8fd9\u4e00\u90e8\u5206\u501f\u9274\u8fd9\u4e2aCSDN\u535a\u5ba2\u7684\u7b2c\u4e00\u6b65\uff08\u535a\u5ba2\u91cc\u9762\u5206\u4e3a\u4e09\u6b65\uff09\uff0c\u8fd9\u4e2a\u77e5\u4e4e\u535a\u5ba2\u7684<code>\u5b89\u88c5opencv\u5e93\u7684\u61d2\u4eba\u7248</code>\u3002\u4e24\u4e2a\u6b65\u9aa4\u90fd\u91c7\u53d6\u4e86\uff0c\u56e0\u6b64\u6700\u540e\u6210\u529f\u7684\u65f6\u5019\uff0c\u6211\u4e0d\u77e5\u9053\u662f\u54ea\u4e00\u90e8\u5206\u6210\u529f\u8dd1\u8d77\u6765\u4e86(\u868c\u57e0\u4f4f\u4e86)\u3002</p> <p>\u7136\u540e\u662f\u4fee\u6539<code>CMakeList.txt</code>\uff0c\u539f\u5148\u5982\u4e0b\uff1a</p> <pre><code>cmake_minimum_required(VERSION 3.10)\nproject(Rasterizer)\n\nfind_package(OpenCV REQUIRED)\n\nset(CMAKE_CXX_STANDARD 17)\n\ninclude_directories(/usr/local/include)\n\nadd_executable(Rasterizer main.cpp rasterizer.hpp rasterizer.cpp Triangle.hpp Triangle.cpp)\ntarget_link_libraries(Rasterizer ${OpenCV_LIBRARIES})\n</code></pre> <p>\u4f46\u662f\u4e0dwork\uff0c\u5728<code>find_package(OpenCV REQUIRED)</code>\u8fd9\u4e00\u6b65fail\u4e86\u3002\u56e0\u6b64\u6211\u6539\u6210\u4e86\u4e0b\u9762\uff1a</p> <pre><code>cmake_minimum_required(VERSION 3.10)\nproject(Rasterizer)\n\nset(OpenCV_DIR \"C:\\\\Users\\\\23714\\\\Desktop\\\\CG\\\\opencv\\\\build\")\nfind_package(OpenCV REQUIRED)\n\nset(CMAKE_CXX_STANDARD 17)\n\ninclude_directories(\"C:\\\\Users\\\\23714\\\\Desktop\\\\CG\\\\eigen-3.4.0\\\\eigen-3.4.0\")\ninclude_directories(\"C:\\\\Users\\\\23714\\\\Desktop\\\\CG\\\\opencv\\\\build\\\\include\")\n\nadd_executable(Rasterizer main.cpp rasterizer.hpp rasterizer.cpp Triangle.hpp Triangle.cpp)\ntarget_link_libraries(Rasterizer ${OpenCV_LIBRARIES})\n</code></pre> <p><code>\"C:\\\\Users\\\\23714\\\\Desktop\\\\CG\\\\opencv\\\\build\"</code>\u8fd9\u4e24\u5904\u7684\u8bbe\u8ba1\u90fd\u662f\u4e3a\u4e86\u518d\u4e09\u786e\u4fdd\u80fd\u591f\u627e\u5230opencv\uff0c<code>C:\\\\Users\\\\23714\\\\Desktop\\\\CG\\\\eigen-3.4.0\\\\eigen-3.4.0</code>\u8fd9\u4e00\u5904\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u627e\u5230Eigen\u5e93\u3002</p> <p>\u6700\u540e\u6253\u5f00\u4e86visual studio 2022\uff0c\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5c31\u83ab\u540d\u5176\u5999\u5f00\u59cbcmake\u4e86\uff0c\u6700\u540e\u7ec8\u4e8e\u751f\u6210\u4e86exe\u6587\u4ef6\u3002\u603b\u4e4b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u7ec8\u4e8ework\u4e86\uff0c\u867d\u7136\u557c\u7b11\u7686\u975e\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48work\u4e86\u3002\u3002\u3002</p>"},{"location":"GAMES101/note_hw.html#homework-2","title":"Homework 2","text":"<p>\u8fd9\u91cc\u9700\u8981\u624b\u52a8\u8fdb\u884c\u5149\u6805\u5316\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6295\u5f71\u52302D\u7684\u4e09\u89d2\u5f62\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2abounding box\uff0c\u7136\u540e\u904d\u5386box\u4e2d\u7684\u50cf\u7d20\uff0c\u5224\u65ad\u662f\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\u3002\u8fd9\u662f\u5bf9\u4e8e\u9010\u4e2a\u50cf\u7d20\u7684\uff0c\u800c\u5bf9\u4e8e\u9010\u4e2a\u4e09\u89d2\u5f62\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u50cf\u7d20\u9700\u8981\u6bd4\u8f83\u8be5\u4f4d\u7f6e\u7684\u63d2\u503c\u6df1\u5ea6\u503c (interpolated depth value)\u548c\u6df1\u5ea6 \u7f13\u51b2\u533a (depth buffer)\u7684\u503c\uff0c\u5982\u679c\u66f4\u8fd1\uff0c\u90a3\u4e48\u5c31\u8981\u66f4\u65b0\u6df1\u5ea6\u548c\u989c\u8272\u3002</p> <p>\u9996\u5148\u662f\u5224\u65ad\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff1a\u5229\u7528\u4e09\u4e2a\u53c9\u4e58\u662f\u5426\u7b26\u53f7\u4e00\u6837\u6765\u8fdb\u884c\u5224\u65ad\u3002</p> <pre><code>static bool insideTriangle(float x, float y, const Vector3f* _v)\n{   \n    // TODO : Implement this function to check if the point (x, y) is inside the triangle represented by _v[0], _v[1], _v[2]\n    Vector3f P = Vector3f(x,y,_v[0].z());\n    Vector3f AB = _v[1] - _v[0];\n    Vector3f AP = P - _v[0];\n    auto cross1 = AB.cross(AP);\n\n    Vector3f BC = _v[2] - _v[1];\n    Vector3f BP = P - _v[1];\n    auto cross2 = BC.cross(BP);\n\n    Vector3f CA = _v[0] - _v[2];\n    Vector3f CP = P - _v[2];\n    auto cross3 = CA.cross(AP);\n\n    if ((cross1.z() &gt; 0 &amp;&amp; cross2.z() &gt; 0 &amp;&amp; cross3.z() &gt; 0) ||\n        (cross1.z() &lt; 0 &amp;&amp; cross2.z() &lt; 0 &amp;&amp; cross3.z() &lt; 0)) {\n        return true;\n    }\n\n    return false;\n}\n</code></pre> <p>\u800c\u5149\u6805\u5316\u6d41\u7a0b\u4e2d\uff0c\u786e\u5b9abounding box\u9996\u5148\u8981\u521d\u59cb\u5316<code>minX maxX minY maxY</code>\uff0c\u8fd9\u91cc\u6211\u5c31\u968f\u4fbf\u62ff\u7b2c\u4e00\u4e2a\u9876\u70b9\u8fdb\u884c\u521d\u59cb\u5316\u4e86\uff0c\u7136\u540e\u76f4\u5230\u627e\u51fa\u4e09\u4e2a\u70b9\u4e2d\u7684<code>minX maxX minY maxY</code>\uff0c\u5e76\u4e14\u8f6c\u5316\u4e3a\u6574\u6570\u3002\u7136\u540e\u904d\u5386\u6846\u67b6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u8ba1\u7b97\u5dee\u503c\u51fa\u6765\u7684\u6df1\u5ea6\uff0c\u62ff\u8fd9\u4e2a\u503c\u548cbuffer\u91cc\u9762\u7684\u6bd4\u8f83\uff0c\u5982\u679c\u8fd9\u91cc\u7684\u6df1\u5ea6\u8ddf\u5c0f\uff0c\u8bf4\u660e\u66f4\u8fd1\uff0c\u5e94\u8be5\u66f4\u65b0\u989c\u8272\u548c\u6df1\u5ea6buffer\u3002</p> <pre><code>void rst::rasterizer::rasterize_triangle(const Triangle&amp; t) {\n    auto v = t.toVector4();\n    float minX=t.v[0].x(), maxX=t.v[0].x(), minY=t.v[0].y(), maxY=t.v[0].y();\n\n    for(auto&amp; v : t.v)\n    {   \n        minX=std::min(minX, v.x());\n        maxX=std::max(maxX, v.x());\n        minY=std::min(minY, v.y());\n        maxY=std::max(maxY, v.y());\n    }\n\n    for (int y = floor(minY); y &lt; ceil(maxY); y++) {\n        for (int x = floor(minX); x &lt; ceil(maxX); x++) {\n            if (!insideTriangle(x + 0.5, y + 0.5, t.v)) {continue;}\n\n            auto Barycentric2D = computeBarycentric2D(x, y, t.v);\n            float alpha = std::get&lt;0&gt;(Barycentric2D), beta = std::get&lt;1&gt;(Barycentric2D), gamma = std::get&lt;2&gt;(Barycentric2D);\n            float w_reciprocal = 1.0 / (alpha / v[0].w() + beta / v[1].w() + gamma / v[2].w());\n            float z_interpolated = alpha * v[0].z() / v[0].w() + beta * v[1].z() / v[1].w() + gamma * v[2].z() / v[2].w();\n            z_interpolated *= w_reciprocal;\n\n            auto ind = get_index(x, y);\n            if (depth_buf[ind] &gt; z_interpolated) {\n                depth_buf[ind] = z_interpolated;\n                set_pixel(Eigen::Vector3f(x, y, z_interpolated), t.getColor());\n            }\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u8981\u5199\u51fa\u4e0a\u8ff0\u7684\u4ee3\u7801\uff0c\u9700\u8981\u7406\u89e3<code>int rst::rasterizer::get_index</code>\u7528\u4f5cbuffer vector\u7684\u5f15\u7d22\u3002\u6700\u540e\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"GAMES101/note_hw.html#homework-3","title":"Homework 3","text":"<p>\u5728\u4e4b\u524d\uff0c\u5149\u6805\u5316\u4e2d\u4e00\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u4ec5\u4ec5\u662f\u7531\u539f\u4e09\u89d2\u5f62\u51b3\u5b9a\u7684\uff08\u5f53\u7136\uff0c\u662fz_interpolated\u6700\u8fd1\u7684\u4e09\u89d2\u5f62\uff09\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\uff0c\u989c\u8272\u4e0d\u4ec5\u4ec5\u7531\u5b83\u51b3\u5b9a\uff0c\u8fd8\u7531\u6cd5\u5411\u91cf\u3001\u7eb9\u7406\u989c\u8272\u51b3\u5b9a\u3002\u56e0\u6b64\uff0c\u9996\u5148\u662f\u8981\u5728\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u57fa\u7840\u4e0a\uff0c\u5199\u51fa\u652f\u6301\u7eb9\u7406\u3001\u6cd5\u5411\u91cf\u7b49\u4fe1\u606f\uff0c\u4e14\u50cf\u7d20\u4e2d\u5fc3\u70b9\u989c\u8272\u7531\u4e09\u89d2\u5f62\u4e09\u70b9\u63d2\u503c\u5f97\u6765\u7684\u7a0b\u5e8f\u3002\u63d2\u503c\u516c\u5f0f\u5982\u4e0b\uff1a  </p> <pre><code>void rst::rasterizer::rasterize_triangle(const Triangle&amp; t, const std::array&lt;Eigen::Vector3f, 3&gt;&amp; view_pos) \n{\n    auto v = t.toVector4();\n    float minX=t.v[0].x(), maxX=t.v[0].x(), minY=t.v[0].y(), maxY=t.v[0].y();\n\n    for(auto&amp; v : t.v)\n    {   \n        minX=std::min(minX, v.x());\n        maxX=std::max(maxX, v.x());\n        minY=std::min(minY, v.y());\n        maxY=std::max(maxY, v.y());\n    }\n    for (int y = floor(minY); y &lt; ceil(maxY); y++) {\n        for (int x = floor(minX); x &lt; ceil(maxX); x++) {\n            if (insideTriangle(x + 0.5, y + 0.5, t.v)) { // \u5728\u4e09\u89d2\u5f62\u91cc\u9762\n                // \u5229\u7528\u6ce8\u91ca\u7684\u4ee3\u7801\uff0c\u6c42\u91cd\u5fc3\u4fe1\u606f\n                auto Barycentric2D = computeBarycentric2D(x + 0.5, y + 0.5, t.v);\n                // \u8fd9\u91cc\u7684\u4e09\u4e2a\u53c2\u6570\u5c31\u5bf9\u5e94\u7684\u662f\u516c\u5f0f\u4e2d\u7684\u4e09\u4e2a\u53c2\u6570\n                float alpha = std::get&lt;0&gt;(Barycentric2D), beta = std::get&lt;1&gt;(Barycentric2D), gamma = std::get&lt;2&gt;(Barycentric2D);\n                float Z = 1.0 / (alpha / v[0].w() + beta / v[1].w() + gamma / v[2].w());\n                float zp = alpha * v[0].z() / v[0].w() + beta * v[1].z() / v[1].w() + gamma * v[2].z() / v[2].w();\n                zp *= Z; // zp\u5c31\u662f\u4e4b\u524d\u7684z_interpolated\n\n                if (zp &lt; depth_buf[get_index(x, y)]){\n                    depth_buf[get_index(x, y)] = zp;\n                    // \u6839\u636e\u63d0\u793a\u6ce8\u91ca\uff0c\u8c03\u7528\u63d2\u503c\u51fd\u6570\n                    auto interpolated_color = interpolate(alpha, beta, gamma, t.color[0], t.color[1], t.color[2], 1);\n                    auto interpolated_normal = interpolate(alpha, beta, gamma, t.normal[0], t.normal[1], t.normal[2], 1);\n                    auto interpolated_texcoords = interpolate(alpha, beta, gamma, t.tex_coords[0], t.tex_coords[1], t.tex_coords[2], 1);\n                    auto interpolated_shadingcoords = interpolate(alpha, beta, gamma, view_pos[0], view_pos[1], view_pos[2], 1);\n                    // \u5c06\u4e0a\u8ff0\u7684\u4fe1\u606f\u90fd\u6ce8\u5165pixel_color\uff0c\u540c\u6837\u501f\u52a9\u6ce8\u91ca\n                    fragment_shader_payload payload(interpolated_color, interpolated_normal.normalized(), interpolated_texcoords, texture ? &amp;*texture : nullptr);\n                    payload.view_pos = interpolated_shadingcoords;\n                    auto pixel_color = fragment_shader(payload);\n                   // \u548c\u4e0a\u4e00\u6b21\u4e00\u6837\uff0c\u8be5\u50cf\u7d20\u70b9\u7ec8\u4e8e\u8d4b\u4e88\u4e86\u4e00\u4e2a\u989c\u8272\u503c\n                    Vector2i point;\n                    point &lt;&lt; x, y;\n                    set_pixel(point, pixel_color);\n                }\n            }\n        }\n    } \n}\n</code></pre> <p>\u5c06<code>get_projection_matrix()</code>\u51fd\u6570\u4ece\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u590d\u5236\u8fc7\u6765\uff0c\u53ef\u4ee5<code>./Rasterizer output.png normal</code>\u6765\u67e5\u770b\u4ec5\u4ec5\u989d\u5916\u8865\u5145\u6cd5\u5411\u91cf\u4fe1\u606f\u4e4b\u540e\u7684\u56fe\u7247\u3002</p> <p></p> <p>\u90a3\u4e48\u63a5\u4e0b\u6765\u5982\u4f55\u52a0\u5165\u5149\u7167\uff0c\u5b9e\u73b0<code>phong_fragment_shader()</code>\u51fd\u6570\u3002\u9996\u5148\u56de\u5f52\u4e00\u4e0bblinn-phong\u6a21\u578b: </p> <p></p> <p>\u56e0\u6b64\u5728\u51fd\u6570\u4e2d\u5b9e\u73b0\u8fd9\u4e9b\u53c2\u6570\uff0c\u6700\u540e\u5b9e\u73b0\u5149\u7167\u7684\u5f71\u54cd\uff1a</p> <pre><code>Eigen::Vector3f phong_fragment_shader(const fragment_shader_payload&amp; payload)\n{\n    Eigen::Vector3f ka = Eigen::Vector3f(0.005, 0.005, 0.005);\n    Eigen::Vector3f kd = payload.color;\n    Eigen::Vector3f ks = Eigen::Vector3f(0.7937, 0.7937, 0.7937);\n\n    auto l1 = light{{20, 20, 20}, {500, 500, 500}};\n    auto l2 = light{{-20, 20, 0}, {500, 500, 500}};\n\n    std::vector&lt;light&gt; lights = {l1, l2};\n    Eigen::Vector3f amb_light_intensity{10, 10, 10};\n    Eigen::Vector3f eye_pos{0, 0, 10};\n\n    float p = 150;\n\n    Eigen::Vector3f color = payload.color;\n    Eigen::Vector3f point = payload.view_pos;\n    Eigen::Vector3f normal = payload.normal;\n\n    Eigen::Vector3f result_color = {0, 0, 0};\n    // \u6ce8\u610f\u8fd9\u91cc\u662fRGB\u4e09\u4e2a\u901a\u9053\u90fd\u7ed3\u5408\u5728\u8fd9\u4e2a\u53c2\u6570\u91cc\u9762\uff0c\u56e0\u6b64\u56fe\u4e2d\u7684\u516c\u5f0f\u662felement-wise product\n    for (auto&amp; light : lights)\n    {\n        // \u5f00\u59cb\u5b9e\u73b0\u4e00\u7cfb\u5217\u7684\u5411\u91cf\uff0c\u6ce8\u610f\u5f52\u4e00\u5316\n        Eigen::Vector3f l = (light.position - point).normalized();\n        Eigen::Vector3f v = (eye_pos - point).normalized();\n        Eigen::Vector3f h = (l + v).normalized();\n        Eigen::Vector3f n = normal.normalized();\n\n        //ambient \u73af\u5883\u5149\n        Eigen::Vector3f la = ka.cwiseProduct(amb_light_intensity);\n        //diffuse \u6f2b\u53cd\u5c04\n        Eigen::Vector3f ld = kd.cwiseProduct((light.intensity / (light.position - point).dot(light.position - point))) * std::max(0.0f, n.dot(l));\n        //specular \u955c\u9762\u53cd\u5c04 \u9ad8\u5149\n        Eigen::Vector3f ls = ks.cwiseProduct((light.intensity / (light.position - point).dot(light.position - point))) * std::pow(std::max(0.0f, n.dot(h)),p);\n        result_color += la + ld + ls;\n    }\n\n    return result_color * 255.f;\n}\n</code></pre> <p>\u6700\u540e<code>.\\Rasterizer.exe phong.png phong</code>\u7684\u7ed3\u679c\u662f\uff1a</p> <p></p> <p>\u6700\u540e\uff0c\u8d34\u4e0a\u7eb9\u7406\uff0c\u5b9e\u73b0<code>texture_fragment_shader()</code>\uff0c\u5c06\u7eb9\u7406\u989c\u8272\u89c6\u4e3a\u516c\u5f0f\u4e2d\u7684 kd\uff0c\u5b9e\u73b0 Texture Shading Fragment Shader\u3002</p> <pre><code>Eigen::Vector3f texture_fragment_shader(const fragment_shader_payload&amp; payload)\n{\n    Eigen::Vector3f return_color = {0, 0, 0};\n    if (payload.texture)\n    {\n        // TODO: Get the texture value at the texture coordinates of the current fragment\n        // getcolor\u8fd4\u56de\u7684\u662fcolor[0][1][2]\n        // fragment_shader_payload\u5728shader\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86tex\n        return_color = payload.texture-&gt;getColor(payload.tex_coords.x(), payload.tex_coords.y());\n    }\n    Eigen::Vector3f texture_color;\n    texture_color &lt;&lt; return_color.x(), return_color.y(), return_color.z();\n\n    Eigen::Vector3f ka = Eigen::Vector3f(0.005, 0.005, 0.005);\n    Eigen::Vector3f kd = texture_color / 255.f;\n    Eigen::Vector3f ks = Eigen::Vector3f(0.7937, 0.7937, 0.7937);\n\n    auto l1 = light{{20, 20, 20}, {500, 500, 500}};\n    auto l2 = light{{-20, 20, 0}, {500, 500, 500}};\n\n    std::vector&lt;light&gt; lights = {l1, l2};\n    Eigen::Vector3f amb_light_intensity{10, 10, 10};\n    Eigen::Vector3f eye_pos{0, 0, 10};\n\n    float p = 150;\n    // \u8fd9\u91cc\u989c\u8272\u6362\u6210\u4e86\u7eb9\u7406\u4e0a\u7684\u989c\u8272\n    Eigen::Vector3f color = texture_color;\n    Eigen::Vector3f point = payload.view_pos;\n    Eigen::Vector3f normal = payload.normal;\n\n    Eigen::Vector3f result_color = {0, 0, 0};\n\n    for (auto&amp; light : lights)\n    {\n        Eigen::Vector3f l = (light.position - point).normalized();\n        Eigen::Vector3f v = (eye_pos - point).normalized();\n        Eigen::Vector3f h = (l + v).normalized();\n        Eigen::Vector3f n = normal.normalized();\n\n        //ambient \u73af\u5883\u5149\n        Eigen::Vector3f la = ka.cwiseProduct(amb_light_intensity);\n        //diffuse \u6f2b\u53cd\u5c04\n        Eigen::Vector3f ld = kd.cwiseProduct((light.intensity / (light.position - point).dot(light.position - point))) * std::max(0.0f, n.dot(l));\n        //specular \u955c\u9762\u53cd\u5c04 \u9ad8\u5149\n        Eigen::Vector3f ls = ks.cwiseProduct((light.intensity / (light.position - point).dot(light.position - point))) * std::pow(std::max(0.0f, n.dot(h)),p);\n        result_color += la + ld + ls;   \n    }\n\n    return result_color * 255.f;\n}\n</code></pre> <p><code>.\\Rasterizer.exe texture.png texture</code>\u4e4b\u540e\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e4b\u540e\u5173\u4e8ebump\u548cdisplacement\u7684\u5185\u5bb9\u7565\u8fc7\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html","title":"Deep Learning","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#what-we-are-going-to-learn","title":"What we are going to learn","text":"<p>Courses in this sequence:</p> <ol> <li>Neural Networks and Deep Learning :</li> </ol> <p>How to build a neural network including a deep neural network and How to train them on data</p> <p>Practice: Build a network to recognize cats</p> <ol> <li>Improvement: Hyperparameter tuning,Regularization and Optimization</li> <li>Structuring machine learning project</li> <li>Convolutional Neural Networks  (CNN)</li> <li>Sequence models: Natural Language Processing (RNN LSTM)</li> </ol>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_1","title":"\u524d\u7f6e\u5185\u5bb9","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_2","title":"\u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc?","text":"<p>\u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\u5462? \u7528\u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50\u4e3e\u4f8b: \u5982\u679c\u8bf4\u77e5\u9053\u51e0\u4e2a(\u623f\u5b50\u9762\u79ef, \u623f\u5b50\u4ef7\u683c)\u7684\u70b9, \u5982\u56fe:</p> <p></p> <p>\u90a3\u4e48\u5982\u4f55\u5728\u4e00\u4e2a\u51fd\u6570\u53bb\u62df\u5408\u8fd9\u4e9b\u70b9? \u5373\u627e\u5230\u4e00\u4e2a\u51fd\u6570\u6765\u5c3d\u53ef\u80fd\u5bf9\u5e94\u8f93\u5165\u8f93\u51fa. \u7ebf\u6027\u56de\u5f52\u5f53\u7136\u53ef\u4ee5\u83b7\u5f97\u4e00\u6761\u76f4\u7ebf:</p> <p></p> <p>\u6ce8\u610f\u5230\u5982\u679c\u5b8c\u5168\u662f\u4e00\u6839\u76f4\u7ebf, \u90a3\u4e48\u4f1a\u6709\u4ef7\u683c\u8d1f\u6570\u7684\u90e8\u5206; \u56e0\u6b64\u6709\u4e00\u6bb5\u5e73\u7684\u7ebf, \u4ef7\u683c\u4e00\u76f4\u662f\u96f6</p> <p>\u8fd9\u4e2a\u62df\u5408\u51fd\u6570\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6700\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc, \u5b9e\u73b0\u4e86\u8f93\u5165\u9762\u79ef\u8f93\u51fa\u4ef7\u683c.</p> <p>\u8fd9\u79cd\u5148\u5e73\u7ebf(\u4e00\u76f4\u662f0)\u540e\u659c\u7ebf\u7684\u6a21\u578b\u5e76\u4e0d\u5c11\u89c1, \u8fd9\u79f0\u4e3aReLU\u6a21\u578b(Rectified Linear Unit, \u4fee\u6b63\u7ebf\u6027\u5355\u5143), \u5176\u4e2dRectified\u4ee3\u8868\u53d6\u7684y\u503c\u662f\u4e0d\u80fd\u5c0f\u4e8e0\u7684, \u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u4fee\u6b63\u540e\u6709\u4e00\u6761\u5e73\u7ebf</p> <p>\u90a3\u4e48\u6ce8\u610f\u5230\u8fd9\u4e2a\u4e1c\u897f\u79f0\u4e4b\u4e3a\"\u5355\u5143\", \u90a3\u4e48\u547c\u4e4b\u6b32\u51fa: \u5927\u7684\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u8bb8\u591a\u4e2a\u8fd9\u79cdReLU\u5806\u53e0\u8d77\u6765\u7684\u6a21\u578b</p> <p></p> <p>\u6b63\u5982\u4e0a\u9762\u8fd9\u4e2a\u56fe\u6240\u5c55\u793a\u7684, \u73b0\u5b9e\u751f\u6d3b\u4e2d\u5f71\u54cd\u4ef7\u683c\u7684\u5f88\u591a: \u9762\u79ef\u548c\u623f\u95f4\u6570\u91cf\u5f71\u54cd\u5bb9\u7eb3\u5bb6\u5ead\u6210\u5458\u6570\u91cf, \u90ae\u653f\u7f16\u7801\u65e2\u80fd\u53cd\u5e94walkability\u548c\u9644\u8fd1\u5b66\u6821\u7684\u8d28\u91cf, \u800c\u623f\u5b50\u9644\u8fd1\u7684\u5bb6\u5ead\u8d22\u5bcc\u60c5\u51b5\u4e5f\u80fd\u53cd\u5e94\u5b66\u6821\u8d28\u91cf; \u800cfamily size, workability, school quality\u6700\u7ec8\u90fd\u4e0e\u4ef7\u683c\u6302\u94a9. \u800c\u6bcf\u4e00\u4e2a\"\u5f71\u54cd\"\"\u53cd\u5e94\"\u5176\u5b9e\u90fd\u662fReLU, \u6216\u8005\u4e0d\u90a3\u4e48\u7ebf\u6027\u7684\u6a21\u578b. \u5728\u8fd9\u4e2a\u60c5\u51b5\u4e0b, x\u8f93\u5165\u7684\u6709\u56db\u4e2a\u73a9\u610f\u513f, \u800c\u6700\u7ec8\u8f93\u51fa\u7684\u8fd8\u662fy\u8fd9\u4e2a\u4ef7\u683c.</p> <p></p> <p>\u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u7cbe\u7b80\u7684\u6a21\u578b. \u5728\u771f\u5b9e\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d, \u4e0d\u662f\u6211\u4eec\u6307\u5b9ax1 x2\u548cfamily size\u6709\u5173, \u800c\u662f\u5b9e\u9645\u4e0a\u4e2d\u95f4\u4e00\u5c42\u7684\u6bcf\u4e00\u4e2a\u5706\u5708\u90fd\u662f\u63a5\u53d7\u4e86\u56db\u4e2a\u53c2\u6570\u7684, \u7136\u540e\u8ba9\u8ba1\u7b97\u673a\u81ea\u5df1\u7b97\u53bb, \u5582\u4e86\u8db3\u591f\u591a\u7684\u6570\u636e\u4e4b\u540e\u8ba1\u7b97\u673a\u5c31\u5f88\u64c5\u957f\u53bb\u62df\u5408\u51fd\u6570\u4e86</p> <p>\u4e2d\u95f4\u4e00\u5c42\u79f0\u4e3a\u9690\u85cf\u5355\u5143(hidden unit), \u6bcf\u4e00\u4e2a\u8282\u70b9(node)\u90fd\u548c\u8f93\u5165\u5c42(input layer)\u7684\u6240\u6709\u7279\u5f81\u76f8\u8fde</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_3","title":"\u7528\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u76d1\u7763\u5b66\u4e60","text":"<p>\u4ee5\u4e0a\u5217\u51fa\u4e86\u8bb8\u591a\u6df1\u5ea6\u5b66\u4e60\u7684\u5e94\u7528:</p> <p>\u524d\u4e24\u4e2a\u662f\u6807\u51c6\u7684\u795e\u7ecf\u7f51\u7edc(standard neural network), \u7b2c\u4e09\u4e2a\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edcCNN(convolutional)(cv\u4e2d\u7ecf\u5e38\u4f7f\u7528\u8fd9\u4e2a), \u7b2c\u56db\u548c\u7b2c\u4e94\u4e2a\u4f7f\u7528\u7684\u662fRNN(recurrent)(\u8bed\u8a00\u662f\u4e00\u4e2a\u4e00\u4e2a\u8bfb\u5165\u7684, \u97f3\u9891\u662f\u6709\u65f6\u95f4\u7684, \u56e0\u6b64\u662fsequential), \u7b2c\u516d\u4e2a\u66f4\u590d\u6742\u6240\u4ee5\u662f\u6df7\u5408\u6a21\u578b</p> <p></p> <p>\u4ee5\u4e0a\u662f\u5e38\u89c1\u7684\u6a21\u578b\u6f14\u793a\u56fe</p> <p></p> <p>\u90a3\u4e48\u8fd8\u8981\u63d0\u53ca\u7ed3\u6784\u5316\u6570\u636e\u548c\u975e\u7ed3\u6784\u5316\u6570\u636e. \u7ed3\u6784\u5316\u6570\u636e\u5f88\u597d\u7528database\u53bb\u5bb9\u7eb3, \u4f46\u662f\u4e00\u77ed\u97f3\u9891, \u4e00\u5f20\u56fe\u7247\u53ef\u80fd\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u975e\u5e38\u96be\u4ee5\u5904\u7406. \u4f46\u662f\u6df1\u5ea6\u5b66\u4e60\u8ba9\u8ba1\u7b97\u673a\u5f00\u59cb\u7406\u89e3\u975e\u7ed3\u6784\u5316\u6570\u636e\u4e86</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_4","title":"\u4e3a\u4ec0\u4e48\u6700\u8fd1\u673a\u5668\u5b66\u4e60\u706b\u8d77\u6765\u4e86?","text":"<p>\"\u89c4\u6a21\"\u4fc3\u8fdb\u4e86\u6df1\u5ea6\u5b66\u4e60, \u8fd9\u91cc\u7684\u89c4\u6a21\u4e0d\u4ec5\u4ec5\u662f\u6a21\u578b\u7684\u590d\u6742\u7a0b\u5ea6(\u66f4\u591a\u9690\u85cf\u5355\u5143), \u4e5f\u6307\u6570\u636e\u7684\u89c4\u6a21</p> <p>\u4f20\u7edf\u7684\u5b66\u4e60\u7b97\u6cd5, \u5728\u5582\u4e86\u4e00\u5b9a\u6570\u636e\u4e4b\u540e\u8868\u73b0\u4fbf\u4e0d\u518d\u4e0a\u5347; \u800cnn\u7684\u51fa\u73b0\u4f7f\u5f97\u8868\u73b0\u53ef\u4ee5\u968f\u7740\u6570\u636e\u7684\u8bad\u7ec3\u589e\u591a\u800c\u4e0a\u5347</p> <p>\u5f53\u7136\u8fd9\u4e2a\u6570\u636e\u4e0d\u662f\u4ec0\u4e48\u6570\u636e\u90fd\u80fd\u7b97\u6570, \u5fc5\u987b\u662f\u5e26\u6807\u7b7e(labeled)\u6570\u636e, \u6211\u4eec\u7ecf\u5e38\u7528<code>(m)</code>\u6765\u4ee3\u8868\u6570\u636e\u7684\u89c4\u6a21</p> <p>\u5728\u6570\u636e\u91cf\u4e0d\u5927\u7684regime(\u9886\u57df)\u4e2d, \u5176\u5b9e\u5404\u4e2a\u7b97\u6cd5\u4e4b\u95f4\u6ca1\u6709\u660e\u786e\u8bf4\u8c01\u66f4\u597d, \u4f46\u662f\u5f53\u5230\u4e86\u5927\u6570\u636eregime\u4e4b\u540e, nn\u7684\u8868\u73b0\u5c31\u7a33\u5b9a\u9886\u5148\u4e86</p> <p>\u800calgorithm\u7b97\u6cd5\u7684\u6539\u8fdb\u662f\u4e3a\u4e86computation\u8ba1\u7b97\u8ddf\u5feb\u800c\u670d\u52a1\u7684, \u4f8b\u5982sigmoid\u51fd\u6570\u8f6c\u5316\u4e3aReLU\u4f7f\u5f97\"\u68af\u5ea6\u4e0b\u964d\u6cd5\"\u5b66\u4e60\u66f4\u5feb</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_5","title":"\u6559\u5b66\u5b89\u6392","text":"<p>\u7b2c\u4e00\u90e8\u5206\u7684\u5b89\u6392</p> <p></p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_6","title":"\u795e\u7ecf\u7f51\u7edc\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#binary-classification","title":"\u4e8c\u5206\u5206\u7c7b(Binary Classification)","text":"<p>\u5047\u8bbe\u7ed9\u4e86\u4e00\u5f20\u56fe\u7247, \u8ba9\u6211\u4eec\u5224\u65ad\u6709\u6ca1\u6709\u732b, \u5982\u679c\u6709\u5c31\u8f93\u51fa1, \u5982\u679c\u6ca1\u6709\u5c31\u8f93\u51fa0; \u8fd9\u4e2a\u8f93\u51fa\u503c\u6211\u4eec\u8bbe\u4e3ay</p> <p>\u90a3\u4e48\u4e00\u5f20\u56fe\u7247\u662f\u5982\u4f55\u8bfb\u53d6\u7684\u5462? \u4e00\u5f20\u7167\u7247\u662f\u901a\u8fc7\u4e09\u4e2a\u72ec\u7acb\u77e9\u9635\u6240\u6784\u6210\u7684(\u4e09\u539f\u8272), \u5982\u679c\u7167\u7247\u662f64*64, \u90a3\u4e48\u56fe\u7247\u7684\u4fe1\u606f\u7531\u4e09\u4e2a64\u00d764\u7684\u77e9\u9635\u6784\u6210, \u5206\u522b\u662f\u7ea2\u7eff\u84dd, \u7136\u540e\u6bcf\u4e00\u4e2a\u77e9\u9635\u7684\u503c\u4ee3\u8868\u5f53\u524d\u50cf\u7d20\u70b9\u8be5\u539f\u8272\u7684\u4eae\u5ea6\u503c</p> <p>\u90a3\u4e48\u5982\u4f55\u7528\u8fd9\u4e9b\u4fe1\u606f\u6784\u6210\u8f93\u5165\u7684x\u5462? \u6211\u4eec\u4e00\u6b21\u628a\u6bcf\u4e2a\u77e9\u9635\u7684\u6bcf\u4e2a\u5143\u7d20\u63d0\u53d6\u51fa\u6765, \u7136\u540e\u7ec4\u6210\u4e00\u4e2a\u7279\u5f81\u5411\u91cfx, \u5982\u56fe:</p> <p></p> <p>\u4e0d\u96be\u53d1\u73b0, \u8fd9\u4e2a\u77e9\u9635\u662f12288*1, \u6211\u4eec\u7528n\u6765\u4ee3\u8868\u8fd9\u4e2a\u5411\u91cf\u7684\u7ef4\u5ea6, \u8fd9\u4e2a\u60c5\u51b5\u4e0b, n\u662f12288</p> <p>\u5728\u4e8c\u5206\u5206\u7c7b\u95ee\u9898\u4e2d, \u76ee\u6807\u662f\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668, \u4ee5\u7279\u5f81\u5411\u91cfx\u4e3a\u8f93\u5165, \u9884\u6d4b\u8f93\u51fa\u662f1\u8fd8\u662f0</p> <p>\u8bb0\u53f7: (x,y)\u662f\u4e00\u4e2a\u6837\u672c, x\u662fn\u7ef4\u5411\u91cf, y\u662f1/0; m\u4ee3\u8868\u6837\u672c\u4e2a\u6570; train\u548ctest\u7684m; X\u4ee3\u8868\u6574\u4e2a\u8f93\u5165\u77e9\u9635, \u901a\u5e38\u6765\u8bf4\u662f\u5de6\u8fb9\u5f62\u5f0f; \u5982\u56fe:</p> <p></p> <p>\u90a3\u4e48Y\u4e5f\u8981\u6709\u5bf9\u5e94\u7684\u6574\u4e2a\u7684\u8f93\u51fa\u77e9\u9635, \u6211\u4eec\u6a2a\u8fc7\u6765\u6392\u653e: </p> <p></p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#logistics-regression","title":"Logistics Regression(\u56de\u5f52)","text":"<p>\u5982\u679c\u6709\u4e00\u4e2a\u56fe\u7247x\u77e9\u9635\u8f93\u5165, \u6211\u4eec\u60f3\u8981\u62df\u5408\u8f93\u51fay, \u90a3\u4e48\u56de\u5f52\u662f\u81ea\u7136\u800c\u7136\u60f3\u5230\u7684: \u4f46\u662f\u5982\u679c\u662f\u5355\u7eaf\u7ebf\u6027, \u90a3\u4e48y\u7684\u503c\u53ef\u80fd\u4f1a\u53d8\u5316\u83ab\u6d4b</p> <p>\u4e8e\u662f\u4f7f\u7528sigmoid\u51fd\u6570, \u6211\u4eec\u60f3\u8981\u4e00\u4e2aw(nx*1)\u548cb, \u5f97\u5230z\u540e\u5e26\u5165sigmoid\u51fd\u6570(w\u8f6c\u5de6\u4e58x\u76f8\u5f53\u4e8e\u6c42\u5185\u79ef)</p> <p></p> <p>\u5176\u4e2dsigmoid\u51fd\u6570\u957f\u4e0a\u9762\u8fd9\u4e2a\u6837\u5b50:  z\u5f88\u5927, \u90a3\u4e48\u8f93\u51fa\u503c\u5f88\u63a5\u8fd11; z\u5f88\u5c0f, \u90a3\u4e48\u5c31\u63a5\u8fd10</p> <p>\u6ce8\u610f: \u5f88\u5bb9\u6613\u60f3\u5230\u8981\u4e0d\u8981\u5347\u7ef4\u7136\u540e\u628ab\u548cw\u5408\u5e76, \u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a, w\u548cb\u8fd8\u662f\u5206\u5f00\u6765\u6bd4\u8f83\u597d</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#logistic-regression-cost-function","title":"Logistic regression cost function(\u56de\u5f52\u635f\u5931\u51fd\u6570)","text":"<p>\u603b\u800c\u8a00\u4e4b: \u4e3a\u4e86\u8bad\u7ec3\u51faw\u548cb\u7684\u53d6\u503c, \u6211\u4eec\u8981\u8bbe\u8ba1\u4e00\u4e2a\u6210\u672c\u51fd\u6570</p> <p>\u56de\u987e\u4ee5\u4e0b; \u987a\u4fbf\u63d0\u4e00\u4e0bnotational convention: \u4e0a\u6807\u4ee3\u8868\u7b2ci\u4e2a\u6837\u672c</p> <p></p> <p>\u90a3\u4e48\u5728\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d, \u6211\u4eec\u5e0c\u671b\u77e5\u9053\u8bad\u7ec3\u540e\u6a21\u62df\u51fa\u6765\u7684\u7ed3\u679c\u548c\u771f\u6b63\u7684\u7ed3\u679c\u76f8\u5dee\u6709\u591a\u5927, \u90a3\u4e48\u76f4\u89c9\u4e0a\u6211\u4eec\u60f3\u5230\u65b9\u5dee</p> <p>\u4f46\u662f\u4e8b\u5b9e\u4e0a, \u65b9\u5dee\u5e76\u4e0d\u597d, \u5728\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e2d, \u76f4\u63a5\u7528\u5dee\u7684\u5e73\u65b9\u4e4b\u7c7b\u7684Loss Function\u4f1a\u9762\u4e34\u51f8\u4f18\u5316\u95ee\u9898, \u8fd9\u4e2a\u4e4b\u540e\u4f1a\u63d0\u5230</p> <p>\u56e0\u6b64, \u6211\u4eec\u8bbe\u8ba1\u8fd9\u6837\u7684Loss Function:</p> <p></p> <p></p> <p>\u4e0a\u9762\u7eff\u8272\u63a8\u5bfc\u53ef\u4ee5\u770b\u51fa\u6765: \u8fd9\u4e2a\u51fd\u6570\u5f88\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f! \u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u51fd\u6570\u975e\u5e38\u597d? \u8fd9\u4e2a\u6211\u4eec\u4e4b\u540e\u4f1a\u8bb2</p> <p>Finally, \u635f\u5931\u51fd\u6570\u53cd\u6620\u4e86\u5728\u5355\u4e2a\u8bad\u7ec3\u6837\u672c\u4e0a\u7684\u8868\u73b0; \u90a3\u4e48\u6211\u518d\u5b9a\u4e49\u4e00\u4e2a\u6210\u672c\u51fd\u6570, \u7528\u6765\u8861\u91cf\u5728\u5168\u4f53\u8bad\u7ec3\u6837\u672c\u4e0a\u7684\u8868\u73b0</p> <p></p> <p>\u5728\u8fd9\u4e2a\u5f0f\u5b50\u4e2d, w\u548cb\u662f\u81ea\u53d8\u91cf, yhat(i)\u4e0ew, b, x(i)\u76f8\u5173,\u7136\u540e\u6700\u540e\u9664\u4ee5\u6837\u672c\u603b\u6570\u91cf\u4ee5\u6c42\u5e73\u5747\u503c</p> <p>\u5f88\u660e\u663e, \u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u51fd\u6570\u6700\u540e\u7684\u503c\u8d8a\u5c0f\u8d8a\u597d</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#gradient-descent","title":"\u68af\u5ea6\u4e0b\u964d\u6cd5(Gradient Descent)","text":"<p>\u6211\u4eec\u77e5\u9053\u4e86Logistics Regression, \u4e5f\u77e5\u9053\u4e86\u635f\u5931\u51fd\u6570\u548c\u6210\u672c\u51fd\u6570</p> <p></p> <p>\u4e0d\u96be\u770b\u51fa, J\u5c06\u4f1a\u662f\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570, \u90a3\u4e48\u5728\u4e09\u7ef4\u5750\u6807\u7cfb\u4e2d\u662f\u4e00\u4e2a\u66f2\u9762:</p> <p></p> <p>\u6211\u4eec\u5b9a\u4e49\u7684\u51fd\u6570\u5f88\u597d\u7684\u505a\u5230\u4e86\u51f8\u51fd\u6570\u8fd9\u4e00\u70b9, \u907f\u514d\u4e86\u591a\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\u7684\u95ee\u9898(\u9009\u62e9\u4e86\u90a3\u4e2aLoss Function\u5b9a\u4e49\u7684\u539f\u56e0\u6b63\u662f\u8fd9\u4e2a)</p> <p>\u90a3\u4e48\u6211\u4eec\u968f\u4fbf\u521d\u59cb\u5316\u4e00\u4e2a\u70b9, \u7136\u540e\u8bd5\u56fe\u5728\u4e0d\u65ad\u8fed\u4ee3\u4e2d\u5f80\u4e0b\u9762\u8d70, \u76f4\u5230\u8d70\u5230\u6700\u4f4e\u70b9, \u90a3\u4e48\u6700\u7ec8\u8d70\u5230\u7684\u96c6\u4e2d\u7684\u70b9\u5c31\u662f\u6700\u4f18\u89e3\u4e86</p> <p></p> <p>\u6211\u4eec\u5148\u53ea\u770bw\u8f74, \u6211\u4eec\u91cd\u590d\u64cd\u4f5c, \u64cd\u4f5c\u5982\u4e0a\u56fe: \u6ce8\u610f\u5230alpha\u5c31\u662f\u5b66\u4e60\u7387, \u7136\u540e\u8fd9\u4e2a\u5b66\u4e60\u7387\u4e58\u4ee5\u7684\u662f\u5f53\u524d\u70b9\u7684\u5bfc\u6570</p> <p>\u81ea\u5df1\u60f3\u60f3\u4e0b, \u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u662f\u5408\u7406\u7684; \u5f53\u7136, \u5728\u7f16\u7a0b\u7684\u65f6\u5019, notational convention\u662f\u7528\"dw\"\u6765\u4ee3\u8868\u5f53\u524d\u70b9\u7684\u5bfc\u6570(\u84dd\u5b57)</p> <p></p> <p>\u5728\u7a0b\u5e8f\u4e2d, w\u548cb\u901a\u8fc7\u8fd9\u6837\u7684\u5f62\u5f0f\u4e0d\u65ad\u8fdb\u884c\u66f4\u8fed; \u5728\u5fae\u79ef\u5206\u4e2d, \u6211\u4eec\u66f4\u559c\u6b22\u7528\u504f\u5bfc\u7b26\u53f7; \u5728\u7f16\u7a0b\u4e2d, \u5c31\u662fdb  dw</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_7","title":"\u8ba1\u7b97","text":"<p>\u4e0a\u9762\u7684\u8ba1\u7b97\u53cd\u5e94\u4e86\u4e00\u4e2a\u70b9(\u5047\u8bbe\u7279\u5f81nx=2)\u6240\u5bf9\u5e94\u7684\u66f4\u8fed. \u8fd9\u4e2a\u8ba1\u7b97\u6211\u662f\u80fd\u63a8\u7684, \u5c31\u662f\u6d41\u7a0b\u56fe\u4e0e\u504f\u5bfc\u8ba1\u7b97; \u4f46\u662f\u73b0\u5b9e\u662f\u6709m\u4e2a\u8bad\u7ec3\u6837\u672c:</p> <p></p> <p>xk(i)\u4ee3\u8868\u7b2ci\u4e2a\u6837\u672c\u7684\u7b2ck\u884c\u7684\u503c(\u7279\u5f81); w1, w2,....wn\u90fd\u8fd9\u6837\u7d2f\u52a0\u7b97\u5b8c\u4e4b\u540e, \u628a\u5b83\u4eec\u7ad6\u7740\u653e\u5c31\u5f97\u5230\u4e86w\u77e9\u9635</p> <p>\u4e0a\u9762\u4ec5\u4ec5\u662f\u4e00\u4e2a\u68af\u5ea6\u4e0b\u964d, \u800c\u6ce8\u610f\u5230\u4e00\u6b21\u6211\u4eec\u5c31\u7528\u4e86\u4e24\u6b21\u5faa\u73af(\u4e00\u6b21\u6837\u672c, \u4e00\u6b21\u6bcf\u4e00\u4e2ax\u7684\u5404\u4e2a\u7279\u5f81), \u8fd9\u5728python\u91cc\u9762\u662f\u5341\u5206\u81f4\u547d\u7684</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u4f4e\u6548\u7684\u95ee\u9898, \u6211\u4eec\u4f7f\u7528\u5411\u91cf\u5316vectorization</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#vectorization","title":"Vectorization \u5411\u91cf\u5316","text":"<p>\u5411\u91cf\u5316\u662f\u4e00\u79cd\u89e3\u51b3for\u5faa\u73af\u7684\u827a\u672f:  </p> <p>\u5b9e\u8d28: \u5145\u5206\u5229\u7528GPU\u7684\u5e76\u884c\u547d\u4ee4\u8ba1\u7b97\u529f\u80fd(for\u662f\u4e00\u4e2a\u4e2a\u4e00\u6b21\u884c\u52a8, \u5411\u91cf\u5316\u662f\u76f4\u63a5\u5168\u4f53\u884c\u52a8)</p> <p><code>np.dot(w,x)</code>\u53ef\u4ee5\u5feb\u901f\u5e2e\u5fd9\u7b97\u51fa\u5185\u79ef</p> <p></p> <p>\u6240\u4ee5\u5728logistic regression\u91cc\u9762, \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u827a\u672f:</p> <p></p> <p>\u6ce8\u610f\u5230<code>Z = np.dot(w.T, X) + b</code>\u8fd9\u884c\u4ee3\u7801: w.T\u4ee3\u8868\u662f\u8f6c\u7f6e, X\u4ee3\u8868\u662f\u603b\u8f93\u5165\u77e9\u9635, \u56e0\u6b64\u8fd4\u56de\u7684\u662f\u6bcf\u4e00\u5217\u548cw.T\u5185\u79ef\u7684\u5927\u77e9\u9635</p> <p>\u8fd9\u4e2a\u77e9\u9635+ b, python\u4f1a\u81ea\u52a8\u628ab\u8f6c\u5316\u4e3a1m\u7684\u77e9\u9635(\u8fd9\u662f\u4e00\u79cd\u5e7f\u64adbroadcasting*); \u8d81\u70ed\u6253\u94c1\u5b8c\u6210\u540e\u9762\u7684\u5411\u91cf\u5316</p> <p></p> <p>\u7b97\u51faZ\u7684\u5927\u77e9\u9635\u4e4b\u540e, \u6bcf\u4e00\u4e2a\u5206\u522b\u5e26\u5165sigmoid\u51fd\u6570, \u7136\u540e\u7ec4\u6210\u5927\u77e9\u9635A</p> <p>\u6839\u636e\u504f\u5bfc\u516c\u5f0f, \u628adw1  dw2....\u653e\u5728dw\u5927\u77e9\u9635\u91cc\u9762(1\u00d7m), \u90a3\u4e48\u6839\u636e\u5b9a\u4e49, Z\u8f6c\u7f6e\u5e76\u5de6\u4e58\u4e00\u4e2aX, \u4e58\u4ee51/m</p> <p>\u6700\u540ew\u662f[w1, w2, ...], \u5e76\u76f8\u5bf9\u5e94\u7684\u505a\u51fa\u6539\u53d8; \u5f53\u7136, b\u4f5c\u4e3a\u4e00\u4e2a\u5b9e\u6570\u5f88\u597d\u64cd\u4f5c</p> <p>\u5f53\u7136, \u5047\u5982\u8bf4\u5b9e\u73b01000\u6b21\u66f4\u8fed, \u4f9d\u7136, \u5fc5\u987b\u7528for, \u56e0\u4e3a\u66f4\u8fed\u6709\u65f6\u5e8f!</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_8","title":"\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u635f\u5931\u51fd\u6570?","text":"<p>\u6838\u5fc3\u8fd8\u662f\u7406\u89e3\u7b2c\u4e09\u884c\u8fd9\u4e2a\u51fd\u6570\u662f\u7b26\u5408\u8981\u6c42\u7684</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#neural-network","title":"Neural Network","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#overview","title":"Overview","text":"<p>\u9996\u5148\u662fnotational convention: \u4e0a\u6807\u65b9\u62ec\u53f7\u4ee3\u8868\u5c42\u6570</p> <p>\u7136\u540e, logistic regression\u8ba9\u6211\u4eec\u5f97\u4ee5\u66f4\u65b0w\u548cb, \u800c\u66f4\u65b0\u4e4b\u540e\u5462? \u6211\u4eec\u80fd\u518d\u8fed\u4ee3! \u6700\u540e\u8fed\u4ee3\u5230\u6ee1\u610f\u4e3a\u6b62, \u6211\u4eec\u76f4\u63a5\u7528sigmoid\u51fd\u6570\u548c\u6ee1\u610f\u7684w, b\u53bb\u5904\u7406\u4e0a\u4e00\u5c42\u7684a, \u5f97\u5230\u7684\u65b0a\u5c31\u662f\u6700\u7ec8\u7684\u8f93\u51fa\u503c</p> <p></p> <p>\u4e0a\u9762\u8fd9\u4e2a\u6a21\u578b\u4e2d, \u6709\u8f93\u5165\u5c42, \u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42, \u4e2d\u95f4\u7684\u8282\u70b9\u7684\u503c\u6211\u4eec\u662f\u770b\u4e0d\u89c1\u7684</p> <p>\u8868\u793a\u8f93\u5165\u5c42\u8fd8\u53ef\u4ee5\u7528\u56fe\u4e2d\u7684a[0], \u4e0a\u6807, a\u4ee3\u8868activation</p> <p></p> <p>\u6ce8\u610fa[1]\u5728Python\u4e2d\u7684\u56db\u7ef4\u8868\u8fbe\u5f62\u5f0f, \u56db\u7ef4\u662f\u56e0\u4e3a\u8fd9\u91cc\u9762\u53ea\u6709\u56db\u4e2a\u8282\u70b9; \u6ce8\u610f, \u8f93\u5165\u5c42\u4e0d\u7b97\u5c42, \u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u662f\u7b2c\u4e00\u5c42, \u8fd9\u4e2a\u56fe\u662f\u4e24\u5c42</p> <p></p> <p>\u8fd9\u4e2a\u56fe\u4e2d\u52a0\u4e0a\u4e86\u9690\u85cf\u5c42\u4e0ew, b\u7684\u5173\u7cfb, \u6ce8\u610f\u8fd9\u4e9b\u77e9\u9635\u7684\u7ef4\u6570, \u7406\u89e3\u662f\u4e3a\u4ec0\u4e48</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_9","title":"\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa","text":"<p>\u795e\u7ecf\u7f51\u7edc\u90fd\u5728\u5e72\u4e9b\u4ec0\u4e48\u5462? </p> <p></p> <p>\u6ce8\u610f\u5230\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6d41\u7a0b\u90fd\u5728\u4e0a\u65b9\u6807\u51fa, \u90a3\u4e48\u56db\u4e2a\u8282\u70b9\u90fd\u80fd\u8868\u8fbe\u51fa\u6765: </p> <p></p> <p>\u770b\u5f97\u51fa\u6765, \u56db\u4e2a\u8282\u70b9\u7684\u8ba1\u7b97\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c, \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5411\u91cf\u5316\u4e86. \u5411\u91cf\u5316\u7684\u5f0f\u5b50\u63a8\u5bfc\u5982\u4e0a\u56fe</p> <p></p> <p>\u4e0a\u56fe\u518d\u6b21\u8fdb\u884c\u4e86\u603b\u7ed3, \u7136\u540e\u6ce8\u610f\u5230\u4e3a\u4e86\u65b9\u4fbf, x\u6362\u6210\u4e86a[0]\u76f8\u5173\u8868\u793a, \u800c\u4e2d\u95f4\u8282\u70b9\u7b97\u51fa\u6765\u7684a1,2,3,4[1]\u90fd\u7528\u4e8e\u4e86\u540e\u7eed\u7684\u8ba1\u7b97</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_10","title":"\u591a\u4e2a\u6837\u672c\u7684\u5411\u91cf\u5316","text":"<p>\u5f53\u7136, \u6211\u4eec\u5bf9\u4e00\u4efd\u6837\u672c\u8f93\u5165\u53ef\u4ee5\u8fdb\u884c\u5411\u91cf\u5316, \u5f53\u7136, \u6211\u4eec\u53ef\u4ee5\u5bf9\u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u8f93\u5165\u8fdb\u884c\u5411\u91cf\u5316, \u4ece\u800c\u5b9e\u73b0\u540c\u65f6\u8fdb\u884c\u6240\u6709\u6837\u672c\u70b9\u7684\u8fd0\u7b97</p> <p>\u4e0d\u8fdb\u884c\u5411\u91cf\u5316\u7684\u8bdd, \u6211\u4eec\u53ef\u80fd\u8981for\u5faa\u73af\u904d\u5386\u6240\u6709\u6837\u672c\u70b9:</p> <p></p> <p>\u6ce8\u610fnotational convention: a[] ()\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d; \u90a3\u4e48\u5982\u4f55\u5411\u91cf\u5316\u5462</p> <p>\u4e4b\u524d\u8bf4\u8f93\u5165\u7684X\u662f\u4e00\u4e2anx*1\u7684\u5411\u91cf, \u90a3\u4e48\u4e00\u5217\u5217\u5806\u53e0\u8d77\u6765\u81ea\u7136\u800c\u7136\u662f\u5bb9\u6613\u60f3\u5230\u7684, \u90a3\u4e48Z\u548cA\u4e5f\u7531\u6b64\u542f\u53d1\u8bbe\u8ba1\u51fa\u6765, \u5982\u4e0a\u56fe:</p> <p>\u6ce8\u610f\u5230A[1]\u6a2a\u5411\u4ee3\u8868\u4e00\u4e2a\u4e2a\u6837\u672c, \u7eb5\u5411\u4ee3\u8868\u4e00\u4e2a\u6837\u672c\u4e2d\u6bcf\u4e2a\u8282\u70b9</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_11","title":"\u6fc0\u6d3b\u51fd\u6570","text":"<p>\u4e4b\u524d\u7684\u6fc0\u6d3b\u51fd\u6570\u6211\u4eec\u4e00\u76f4\u4f7f\u7528\u7684\u662fsigmoid\u51fd\u6570, \u5f53\u7136\u6709\u4e9b\u51fd\u6570\u5176\u5b9e\u4f1a\u8868\u73b0\u7684\u66f4\u597d\u4e00\u70b9, \u4f8b\u5982tanh(z)\u51fd\u6570:</p> <p></p> <p>\u8fd9\u4e2a\u51fd\u6570\u7684\u5904\u7406\u540e\u7684\u6570\u636e\u5e73\u5747\u503c\u66f4\u504f\u54110, \u5e2e\u5fd9\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u4e2d\u5fc3\u5316, \u4e5f\u8ba9\u4e0b\u4e00\u5c42\u7684\u5b66\u4e60\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613</p> <p>\u4f46\u662f\u6ce8\u610f\u6709\u4f8b\u5916: \u8f93\u51fa\u5c42\u8fd8\u662f\u4e60\u60ef\u4f7f\u7528sigmoid\u51fd\u6570, \u56e0\u4e3a\u8f93\u51fa\u503c\u57280-1\u4e4b\u95f4\u662f\u66f4\u5bb9\u6613\u63a5\u53d7\u7684</p> <p>\u800c\u6df1\u5ea6\u5b66\u4e60\u4e2d\u8fd8\u559c\u6b22ReLU(\u4fee\u6b63\u7ebf\u6027\u5355\u5143):</p> <p></p> <p>\u8fd9\u4e2a\u51fd\u6570\u7684\u659c\u7387: \u5f53z\u662f\u6b63\u7684\u8bdd, \u659c\u7387\u5c31\u662f1; \u5982\u679c\u662f\u8d1f\u6570, \u5c31\u662f0; \u6ce8\u610f\u5230\u5982\u679cz\u662f0, \u8fd9\u4e2a\u5730\u65b9\u7684\u5012\u6570\u662f\u6ca1\u6709\u5b9a\u4e49\u7684</p> <p>\u4f46\u662f\u5728\u7f16\u7a0b\u4e2d, \u5176\u5b9ez\u503c\u5b8c\u5168\u662f0\u7684\u6982\u7387\u975e\u5e38\u975e\u5e38\u4f4e; \u6ce8\u610f\u5230\u5982\u679cz\u662f\u8d1f\u6570\u7684\u8bdd, \u659c\u7387\u5c31\u662f0, \u8fd9\u5728\u5b9e\u8df5\u4e2d\u6ca1\u6709\u610f\u4e49, \u6240\u4ee5\u6709\"\u6cc4\u9732ReLU\"</p> <p></p> <p>\u603b\u7ed3: \u5728\u4e8c\u5206\u5206\u7c7b\u4e2d, \u8f93\u51fa\u5c42\u4e00\u5b9a\u8981sigmoid\u51fd\u6570; \u800c\u5176\u5b83\u5c42, tanh\u51fd\u6570\u90fd\u66f4\u597d; \u800c\u5982\u679c\u4e2d\u95f4\u9690\u85cf\u5c42\u4e0d\u77e5\u9053\u9009\u4ec0\u4e48\u597d, \u9009ReLU\u66f4\u4fdd\u9669</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_12","title":"\u4e3a\u4ec0\u4e48\u6fc0\u6d3b\u51fd\u6570\u4e0d\u80fd\u662f\u7ebf\u6027\u7684?","text":"<p>\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5a = z = Wx+b? \u90a3\u4e48\u4e8b\u5b9e\u4e0a, \u6700\u7ec8\u8f93\u51fa\u7684yhat\u5176\u5b9e\u53ea\u662fx1, x2...\u7684\u7ebf\u6027\u7ec4\u5408</p> <p>\u90a3\u4e48\u4e8b\u5b9e\u4e0a\u90a3\u4e48\u591a\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u5b8c\u5168\u4e00\u70b9\u610f\u4e49\u4e5f\u6ca1\u6709, \u5176\u5b9e\u53ea\u6709\u4e00\u5c42, \u8fd9\u6837\u7684\u8bdd\u7eaf\u5c5e\u65e0\u7a3d\u4e4b\u8c08</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_13","title":"\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6\u4e0b\u964d","text":"<p>\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b: \u5148\u968f\u673a\u8bbe\u7f6ew[1] b[1] (\u6ce8\u610f, \u968f\u673a\u521d\u59cb\u5316\u662f\u5341\u5206\u91cd\u8981\u7684), \u7136\u540e\u7b97\u51fa\u6240\u6709\u7684\u9884\u6d4by\u503c, \u901a\u8fc7\u8fd9\u4e9b\u4e1c\u897f\u8ba1\u7b97dw db, \u7136\u540e\u66f4\u65b0w, b\u4f5c\u4e3a[2]\u7684\u6750\u6599</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_14","title":"\u53cd\u5411\u4f20\u64ad","text":"<p>\u6ce8\u610f\u661f\u53f7\u662f\u4e24\u4e2a\u77e9\u9635\u76f8\u5bf9\u5e94\u5143\u7d20\u9010\u4e2a\u76f8\u4e58</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_15","title":"\u968f\u673a\u521d\u59cb\u5316","text":"<p>\u6743\u91cd\u975e\u5e38\u91cd\u8981, \u5982\u679c\u4e00\u5f00\u59cb\u6240\u6709\u53c2\u6570\u90fd\u8bbe\u7f6e\u4e3a0, \u4e00\u70b9\u7528\u4e5f\u6ca1\u6709, \u6240\u6709\u9690\u85cf\u8282\u70b9\u90fd\u5728\u8ba1\u7b97\u76f8\u540c\u7684\u51fd\u6570</p> <p></p> <p>b\u4e00\u5f00\u59cb\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0, \u56e0\u4e3aw\u4e0d\u540c, \u90a3\u4e48\u5bf9\u79f0\u6027\u95ee\u9898\u5c31\u4f1a\u6253\u7834</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48w\u4f1a\u4e58\u4ee5\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6570\u5b57? z= wx+b, \u90a3\u4e48\u8fd9\u4e2az\u5982\u679c\u5728w\u8fc7\u5927\u7684\u60c5\u51b5\u4e0b\u4f1a\u843d\u5728\u51fd\u6570\u6bd4\u8f83\u5e73\u7f13\u7684\u5730\u65b9</p> <p>(\u8fd9\u79cd\u95ee\u9898\u5c24\u5176\u5728tanh\u548csigmoid\u4e2d\u975e\u5e38\u7a81\u51fa)</p> <p>0.01\u5728\u5f88\u6d45\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u5f88\u597d\u7528, \u4f46\u662f\u5982\u679c\u6df1\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u7684\u8bdd, \u8fd9\u4e2a\u5e38\u6570\u53ef\u80fd\u5c31\u8981\u7a0d\u5fae\u6539\u53d8\u4e86, \u8fd9\u4e2a\u4e4b\u540e\u4f1a\u8bb2</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_16","title":"\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_17","title":"\u4ec0\u4e48\u662f\u6df1\u5c42\u795e\u7ecf\u7f51\u7edc?","text":"<p>\u9644: \u6709\u4e9b\u51fd\u6570\u53ea\u6709\u6df1\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\u624d\u80fd\u5b66\u4e60, \u800c\u5bf9\u4e8e\u4e00\u5f00\u59cb\u6765\u8bf4, \u5c1d\u8bd5Logistics regression\u603b\u662f\u4e0d\u4f1a\u9519\u7684</p> <p>\u63a5\u4e0b\u6765\u5b8c\u5584\u4e00\u4e0bnotational convention</p> <p></p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#forward-and-backward-propagation","title":"Forward and Backward Propagation","text":"<p>\u524d\u5411\u4f20\u64ad\u5f88\u597d\u7406\u89e3, \u8f93\u5165\u4e86a[l-1], \u7136\u540e\u7528\u968f\u673a\u521d\u59cb\u5316\u7684W\u548cb\u53bb\u8ba1\u7b97l\u5c42\u7684z  a</p> <p></p> <p>\u53cd\u5411\u4f20\u64ad, \u5c31\u662f\u7528da[l]\u6765\u7b97\u51fada[l-1] (\u7528\u4e8e\u7ee7\u7eed\u53cd\u5411\u4f20\u64ad), dw, db(\u7528\u6765\u4fee\u6b63w\u548cb\u77e9\u9635)</p> <p>(\u6ce8\u610f\u4e0a\u56fe\u5de6\u8fb9\u7b2c\u4e8c\u884c\u7684a[l-1]\u8fd8\u5e94\u8be5\u8981\u8f6c\u7f6e)</p> <p></p> <p>\u6ce8\u610f, \u5934\u4e00\u4e2ada[l]\u5728logistic regression\u4e0b\u5c31\u662f\u635f\u5931\u71b5\u51fd\u6570\u7684\u5012\u6570</p> <p></p> <p></p> <p>\u4e0a\u56fe\u5e2e\u5fd9\u7b97\u51fa\u4e86w\u548cb\u77e9\u9635\u7684\u7ef4\u6570, \u8fd8\u6709dw  db\u7684\u7ef4\u6570, \u8fd8\u6709Z A dZ  dA \u7684\u7ef4\u6570, \u8fd9\u5e2e\u52a9\u4e86\u6211\u4eecdebug</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_18","title":"\u642d\u5efa\u795e\u7ecf\u7f51\u7edc\u5757","text":"<p>\u6ce8\u610f\u6bcf\u4e00\u6b21c\u9700\u8981cache\u4ec0\u4e48! \u5185\u5b58\u5f88\u73cd\u8d35, \u6bcf\u4e00\u6b21\u7684\u8bad\u7ec3\u5176\u5b9e\u90fd\u662f\u5728\u8c03\u6574w b\u4e24\u4e2a\u53c2\u6570\u7684, \u56e0\u6b64\u6211\u4eec\u53ea\u60f3\u8981\u4fdd\u5b58\u5173\u952e</p> <p>\u53cd\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d, z[l]\u8d77\u5230\u4e86\u5341\u5206\u5173\u952e\u7684\u4f5c\u7528, \u751a\u81f3a[l]\u5728\u4e0b\u4e00\u5c42\u4f7f\u7528\u5b8c\u4e4b\u540e\u5176\u5b9e\u90fd\u6ca1\u6709\u5fc5\u8981\u53bb\u4fdd\u7559\u4e86</p> <p>\u56e0\u6b64cache(\u7f13\u5b58)z[l]\u662f\u5341\u5206\u5173\u952e\u7684; \u6574\u4e2a\u6d41\u7a0b\u4e5f\u5728\u7b2c\u4e8c\u5f20\u56fe\u7247\u91cc\u9762\u5b8c\u6574\u5c55\u793a\u51fa\u6765\u4e86</p> <p></p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#hyperparameter","title":"\u53c2\u6570&amp;\u8d85\u53c2\u6570(Hyperparameter)","text":"<p>\u6b63\u5e38\u7684\u53c2\u6570, \u4f8b\u5982w  b, \u8fd9\u4e9b\u90fd\u662f\u6700\u540e\u6211\u4eec\u60f3\u8981\u5f97\u5230\u7684, \u8fd9\u4e9b\u5e2e\u52a9\u4e86\u6a21\u578b\u533a\u8fdb\u884c\u62df\u5408</p> <p>\u4f46\u662f\u8fd9\u4e9b\u53c2\u6570\u503c\u4e0a, \u5176\u5b9e\u8fd8\u6709\u5f88\u591a\u53c2\u6570\u662f\u53ef\u4ee5\u638c\u63a7\u5b83\u4eec\u7684\u8d70\u5411\u7684, \u8fd9\u4e9b\u5c31\u79f0\u4e3a\u8d85\u53c2\u6570, hyperparameter</p> <p>\u6bd4\u5982\u8bf4learning rate \u03b1, iterations(\u6b63\u53cd\u8d70\u591a\u5c11\u8f6e), \u9690\u85cf\u5c42\u6570\u91cf, \u8282\u70b9\u6570\u91cf, \u6fc0\u6d3b\u51fd\u6570\u7684\u9009\u62e9</p> <p>\u751a\u81f3\u6709momentum, minibatch size, regularization\u7b49\u7b49\u8d85\u53c2\u6570\u53ef\u4ee5\u5f71\u54cd\u5230w \u548c b\u7684\u5f62\u6210 </p> <p>\u8bf4\u660e\u4e00\u4ef6\u4e8b\u60c5: \u8c03\u53c2\u5e08, \u70bc\u4e39\u4fa0</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#set-up-your-machine-learning-modeloptimizing","title":"Set Up Your Machine Learning Model\uff08Optimizing\uff09","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#train-dev-test-set","title":"Train-Dev-Test Set","text":"<p>\u5e94\u7528\u578b\u673a\u5668\u5b66\u4e60\u662f\u4e00\u4e2a\u9ad8\u5ea6\u8fed\u4ee3\u7684\u8fc7\u7a0b: hidden layers\u5c42\u6570, hidden units(\u8282\u70b9)\u6570\u91cf, \u5b66\u4e60\u7387, \u6fc0\u6d3b\u51fd\u6570...... \u4e00\u822c\u6765\u8bf4, \u8fd9\u4e9b\u8d85\u53c2\u6570\u5f88\u96be\u76f4\u63a5\u627e\u5230, \u90fd\u662f\u8981\u901a\u8fc7\u4e0d\u65ad\u5c1d\u8bd5\u5f97\u51fa\u6765\u7684; \u800c\u521b\u5efa\u597d\u7684\u8bad\u7ec3, \u5f00\u53d1\u548c\u6d4b\u8bd5\u8bad\u7ec3\u96c6\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u8bd5\u9519\u5faa\u73af\u6548\u7387</p> <p>\u4e00\u822c\u6765\u8bf4, \u4e00\u5206\u6570\u636e\u96c6\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206: train set; hold-out cross validation set/dev set; test set </p> <p>\u7528\u8bad\u7ec3\u6570\u636e\u6765\u8bad\u7ec3\u591a\u4e2a\u6a21\u578b, \u7136\u540e\u7528\u4ea4\u53c9\u9a8c\u8bc1\u6a21\u578b\u627e\u51fa\u6700\u5408\u9002\u7684\u6a21\u578b, \u7136\u540e\u6700\u7ec8\u6d4b\u8bd5\u6a21\u578b\u6765\u9a8c\u8bc1\u8fd9\u4e2a\u6a21\u578b\u7684\u51c6\u786e\u6027</p> <p>\u51e0\u5e74\u524d, \u4e00\u822c\u6765\u8bf4, \u6570\u636e\u6bd4\u4f8b\u5206\u914d\u662f60\u8bad\u7ec320\u4ea4\u53c9\u9a8c\u8bc120\u6d4b\u8bd5; \u4f46\u662f\u5728\u5927\u6570\u636e\u65f6\u4ee3, \u73b0\u5728\u6570\u636e\u91cf\u53ef\u80fd\u8fbe\u5230\u767e\u4e07\u7ea7\u522b</p> <p>\u90a3\u4e48\u8fd9\u79cd\u5927\u524d\u63d0\u4e0b, \u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u5360\u6570\u636e\u603b\u91cf\u7684\u6bd4\u4f8b\u4f1a\u533a\u57df\u53d8\u5c0f, \u56e0\u4e3a\u9a8c\u8bc1\u96c6\u7684\u76ee\u7684\u5c31\u662f\u627e\u54ea\u79cd\u7b97\u6cd5\u6700\u4f73, \u6211\u4eec\u4e0d\u9700\u898120%\u7684\u6570\u636e, \u5176\u5b9e\u6709\u7684\u65f6\u50191%\u5c31\u53ef\u4ee5\u4e86, \u5e2e\u52a9\u6211\u4eec\u627e\u51fa1-2\u4e2a\u975e\u5e38\u597d\u7684\u7b97\u6cd5; \u6d4b\u8bd5\u96c6\u4e5f\u53ef\u4ee5\u5dee\u4e0d\u591a1%, \u56e0\u4e3a\u603b\u91cf\u8fd8\u662f\u5f88\u5927, 1%\u8db3\u4ee5\u9a8c\u8bc1\u6a21\u578b\u6027\u80fd</p> <p>\u5f53\u7136, \u8fd9\u4e24\u4e2a\u6570\u636e\u53ef\u4ee5\u66f4\u5c0f, \u56e0\u4e3a\u73b0\u5728\u6570\u636e\u65f6\u4ee3\u6570\u636e\u91cf\u975e\u5e38\u5927, \u5c3d\u91cf\u628a\u6570\u636e\u82b1\u5728\u8bad\u7ec3\u4e0a</p> <p>\u6ce8\u610f: \u5c3d\u91cf\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u90fd\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u5206\u5e03! \u5f53\u7136\u6709\u7684\u65f6\u5019\u8bad\u7ec3\u96c6\u548cdev test set\u5e76\u4e0d\u662f\u6765\u6e90\u4e8e\u4e00\u4e2a\u5206\u5e03, \u4f46\u662f\u8fd9\u8fd8\u662f\u80fd\u63a5\u53d7\u7684, \u53ea\u8981\u4fdd\u8bc1dev\u548ctest set \u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u5206\u5e03</p> <p>\u6700\u540e: \u6709\u7684\u65f6\u5019, \u6ca1\u6709test set\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684!!  \u5728\u673a\u5668\u5b66\u4e60\u4e2d, \u5047\u5982\u8bf4\u771f\u7684\u6ca1\u6709test set, \u90a3\u4e48\u4e00\u822cdev set\u4e5f\u4f1a\u79f0\u4e3atest set</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#biasvariance","title":"\u504f\u5dee(bias)\u548c\u65b9\u5dee(variance)","text":"<p>\u8fd9\u4e24\u4e2a\u6982\u5ff5\u5f88\u96be\u5206\u6e05, \u800c\u8fd9\u4e24\u8005\u7684\u6743\u8861\u95ee\u9898\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u95ee\u9898! </p> <p></p> <p></p> <p>\u5047\u5982\u8bf4\u4eba\u773c\u8bc6\u522b\u7684\u9519\u8bef\u7387\u662f0, \u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u4e2a\u4e3aoptimal error(\u6700\u597d, \u6700\u7406\u60f3\u7684\u6a21\u578b, \u4f8b\u5982\u4eba, \u7684\u6700\u4f4e\u9519\u8bef\u7387); \u5e76\u4e14\u5047\u8bbe\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u6765\u81ea\u540c\u4e00\u5206\u5e03(\u5982\u679c\u4e0d\u662f\u8fd9\u6837, \u5206\u6790\u8fc7\u7a0b\u66f4\u52a0\u590d\u6742)</p> <p>\u90a3\u4e48\u4ece\u5de6\u5230\u53f3: \u7b2c\u4e00\u4e2a, \u8bad\u7ec3\u96c6\u4e0a\u8dd1\u7684\u5f88\u597d, \u4f46\u662f\u9a8c\u8bc1\u96c6\u5e76\u4e0d\u7406\u60f3, \u90a3\u4e48\u901a\u5e38\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\"\u8fc7\u62df\u5408\"(over-fitting), \u8fd9\u79cd\u60c5\u51b5\u65b9\u5deevariance\u5f88\u5927; \u7b2c\u4e8c\u4e2a, \u867d\u7136\u8bf4\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u8868\u73b0\u5f88\u63a5\u8fd1, \u8bf4\u660e\u8fc7\u62df\u5408\u5e76\u6ca1\u6709\u4ea7\u751f, \u4f46\u662f\u6574\u4f53\u7684\u9519\u8bef\u7387\u8fd8\u662f\u5f88\u9ad8, \u90a3\u4e48\u8ba4\u4e3a\u8fd9\u662f\u504f\u5deebias\u8f83\u9ad8; \u7b2c\u4e09\u4e2a, \u4e24\u8005\u90fd\u9ad8, \u6bcb\u5eb8\u7f6e\u7591; \u7b2c\u56db\u4e2a, \u4e24\u8005\u90fd\u5f88\u4f4e, \u6bcb\u5eb8\u7f6e\u7591</p> <p>\u90a3\u4e48\u5982\u679c\u5047\u5982\u8bf4, \u4eba\u773c\u8bc6\u522b\u5ba2\u89c2\u4e0a\u5c31\u662f\u670915%\u7684\u5931\u8bef\u7387\u5462? \u90a3\u4e48\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u5341\u5206\u7406\u60f3\u4e86, \u88ab\u8ba4\u4e3a\u662f\u65b9\u5dee\u548c\u504f\u5dee\u90fd\u975e\u5e38\u5c0f</p> <p>\u4e00\u822c\u6765\u8bf4: \u6a21\u578b\u8fc7\u4e8e\u7ebf\u6027, bias\u9ad8; \u6a21\u578b\u8fc7\u62df\u5408, variance\u9ad8</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_19","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":"<p>Basic recipe for machine learning:</p> <p>First, we have to check whether there is a high bias problem. If so, we should deal with the network, for example finding a new network with more hidden layers and hidden units or something, or a brand new network based on a new architecture. Secondly, if the problem of high bias is resolved, we have to check if there is a high variance issue, insinuation an over-fitting issue. If so, the common solution is to find more data. If there are no more data available, we can use regularization which will be discussed later, or simply switch to a new architecture.</p> <p>\u5728\u65e9\u671f\u7684\u673a\u68b0\u5b66\u4e60\u9636\u6bb5, \"bias variance trade-off(\u6743\u8861)\"\u95ee\u9898\u975e\u5e38\u4eba\u4eec, \u4eba\u4eec\u5f88\u5c11\u7528\u5de5\u5177\u80fd\u5b9e\u73b0\u964d\u4f4e\u4e00\u8005\u800c\u4e0d\u5f71\u54cd\u53e6\u4e00\u8005. \u4f46\u662f\u5230\u4e86\u5927\u6570\u636e\u6df1\u5ea6\u5b66\u4e60, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u5316\u8fd9\u79cd\u624b\u6bb5, \u6765\u5b9e\u73b0\u5355\u65b9\u9762\u7684\u4e0b\u964d. \u6b63\u5219\u5316\u662f\u4e00\u79cd\u80fd\u6709\u6548\u4e0b\u964d\u65b9\u5dee\u7684\u5de5\u5177, \u4f1a\u5f71\u54cd\u504f\u5dee\u7565\u5fae\u4e0a\u5347, \u4f46\u662f\u5982\u679c\u7f51\u7edc\u5f88\u5927\u7684\u8bdd, \u90a3\u4e48\u8fd9\u79cd\u4e0a\u5347\u5c31\u662f\u975e\u5e38\u5c0f\u7684</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#regularization","title":"\u6b63\u5219\u5316(Regularization)","text":"<p>\u4e0a\u9762\u5c55\u793a\u4e86\u5728\u4e00\u4e2aLogistic\u56de\u5f52\u4e2d\u7684L2 Regularization\u7684\u8fc7\u7a0b, \u5728\u635f\u5931\u51fd\u6570\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a\u9879. W\u77e9\u9635\u7684L2\u8303\u6570\u5176\u5b9e\u5c31\u662fW\u81ea\u5df1\u5de6\u4e58\u4e00\u4e2aW\u7684\u8f6c\u7f6e</p> <p>\u800c\u4e0a\u9762\u7684\u03bb\u5c31\u662f\u4e00\u4e2ahyper-parameter, \u9700\u8981\u6211\u4eec\u4e0d\u65ad\u53bb\u627e\u6700\u5408\u9002\u7684; \u800c\u5728\u7f16\u7a0b\u4e2d, \u8fd9\u4e2a\u53c2\u6570\u4e00\u822c\u7528lambda\u540d\u5b57 \u56e0\u4e3a\u03bb\u5728python\u91cc\u9762\u53c8\u5176\u4ed6\u7684\u56fa\u5b9a\u7528\u9014(\u5173\u952e\u8bcd), \u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u9632\u6b62\u53c2\u6570\u540d\u5b57\u91cd\u590d\u800c\u4ea7\u751f\u51b2\u7a81</p> <p>L1\u8303\u6570\u4f1a\u4f7f\u5f97w\u53d8\u7684\u7a00\u758f, \u5373\u6709\u5f88\u591a\u96f6, \u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u662f\u5f88\u597d, \u867d\u7136\u8bf4\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u50a8\u5b58, \u6216\u8005\u538b\u7f29\u6a21\u578b, \u4f46\u662f\u8fd9\u4e8b\u5b9e\u8bc1\u660e\u5e76\u4e0d\u662f\u5f88\u597d</p> <p>\u90a3\u4e48\u5728\u6574\u4e2aNeural network\u4e2d\u5462? </p> <p></p> <p>\u5728\u6574\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e2d, \u635f\u5931\u51fd\u6570\u540e\u9762\u4ecd\u7136\u52a0\u4e0a\u7684\u662f\u6bcf\u4e00\u5c42\u7684w[l]\u77e9\u9635\u7684L2\u8303\u6570, \u90a3\u4e48\u8fd9\u91cc\u56e0\u4e3anotational convention, \u6211\u4eec\u79f0\u8fd9\u79cdL2\u8303\u6570\u4e3a\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u8303\u6570(Frobenius norm), \u5373\u4e00\u4e2a\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5e73\u65b9\u7684\u548c</p> <p>\u90a3\u4e48\u73b0\u5728dJ/dw\u540e\u9762\u5c31\u52a0\u4e0a\u4e86lambda/mw[l]\u4e86(\u5355\u72ec\u7684\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u90a3\u4e00\u9879\u6c42\u5bfc\u540e\u5c31\u662f\u6574\u4e2a\u73a9\u610f\u513f), \u4ee3\u5165\u516c\u5f0f, \u53d1\u73b0\u5b9e\u8d28\u4e0a\u662f:</p> <p>w[l]\u66f4\u65b0\u7684\u65f6\u5019, \u5148\u4e58\u4ee5\u4e86\u4e00\u4e2a(1-\u03b1\u03bb/m)\u7684\u53c2\u6570(\u8fd9\u4e2a\u53c2\u6570\u5c0f\u4e8e\u96f6), \u8bf4\u660e\u5176\u5b9e\u901a\u8fc7\u6b63\u5219\u5316\u6211\u4eec\u60f3\u8981\u6743\u91cd\u53d8\u5c0f</p> <p>\u56e0\u6b64, \u6211\u4eec\u4e5f\u79f0\u6b63\u5219\u5316\u4e3a\"\u6743\u91cd\u8870\u51cf\"(weight decay)</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_20","title":"\u4e3a\u4ec0\u4e48\u6b63\u5219\u5316\u53ef\u4ee5\u7f13\u89e3\u8fc7\u62df\u5408\uff1f","text":"<p>\u89c1\u4e0a\u56fe\uff0c \u6211\u4eec\u5728\u635f\u5931\u51fd\u6570\u540e\u9762\u52a0\u4e0a\u4e86Frobenius norm\uff0c\u4f7f\u5f97w\u4f1a\u8d8b\u5411\u4e8e\u96f6\uff0c\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\uff0c\u8bb8\u591a\u8282\u70b9\u7684\u4f5c\u7528\u5c31\u51e0\u4e4e\u4e3a\u96f6\uff0c\u51e0\u4e4e\u53ef\u4ee5\u89c6\u800c\u4e0d\u89c1\uff0c\u4ece\u800c\u8fbe\u5230\u7b80\u5316\u6a21\u578b\u89c4\u6a21\u3001\u4f46\u662f\u6df1\u5ea6\u4f9d\u7136\u4fdd\u6301\u7684\u6548\u679c\u3002\u6211\u4eec\u76f4\u89c2\u53d6\u6781\u9650\uff0c\u5047\u5982\u8bf4\u60e9\u7f5a\u7cfb\u6570\u8fc7\u5927\uff0c\u90a3\u4e48\u51e0\u4e4e\u5168\u4e3a0\uff0c\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\u7ebf\u6027\u56de\u5f52\u4e86\uff1b\u6211\u4eec\u5f88\u662f\u5e0c\u671b\u6709\u4e00\u4e2a\u4e2d\u95f4\u7684\u03bb\u503c\uff0c\u8fbe\u5230just right\u7684\u7a0b\u5ea6</p> <p></p> <p>\u6362\u4e2a\u89d2\u5ea6\u53bb\u7406\u89e3\uff1a\u5728\u6fc0\u6d3b\u51fd\u6570\u4e2d\uff0c\u5047\u5982\u8bf4z\u5f88\u9760\u8fd10\uff0c\u90a3\u4e48\u8fd9\u4e00\u6bb5\u5c31\u8d8a\u63a5\u8fd1\u7ebf\u6027\uff1b\u5982\u679c\u60e9\u7f5a\u4e86\uff0cz\u4e0b\u964d\u4e86\uff0c\u90a3\u4e48\u843d\u5728\u7684\u6fc0\u6d3b\u51fd\u6570\u7684\u533a\u95f4\u6bb5\u53ef\u80fd\u5176\u5f71\u54cd\u6548\u679c\u66f4\u504f\u5411\u4e8e\u7ebf\u6027\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6a21\u578b\u5c31\u4e0d\u4f1a\u8fc7\u5ea6\u590d\u6742</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#dropout","title":"Dropout\u6b63\u5219\u5316","text":"<p>\u6bcf\u4e00\u6b21\u7684\u8bad\u7ec3\uff0c\u968f\u673a\u4e22\u6389\u4e00\u5b9a\u7684\u8282\u70b9\uff0c\u5176\u8fde\u7ebf\u90fd\u5220\u9664\uff0c\u907f\u514d\u5355\u4e00\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u7279\u5f81\u7684\u60c5\u51b5\u51fa\u73b0</p> <p>\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0dropout\u5462</p> <p></p> <p>\u6ce8\u610f<code>d3 = np.random.rand(a3.shape[0], a3.shape[1])</code>\uff0c\u8fd9\u4e2a\u77e9\u9635\u7684\u89c4\u6a21\u662f\u6839\u636ea3\u6765\u7684</p> <p><code>a3 = np.multiply(a3, d3)</code>\u4ee3\u8868\u7684\u662f\u77e9\u9635\u76f8\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u76f8\u4e58</p> <p>\u6ce8\u610f\u6700\u540e\u9664\u4ee5keep_prob, \u8fd9\u662f\u4e3a\u4e86a3\u548cz4\u4fdd\u6301\u9884\u671f\u503c\uff1b\u76f4\u89c2\u6765\u8bf4\uff0c\u4fdd\u8bc1\u6d88\u9664\u67d0\u4e9b\u8282\u70b9\u7684\u5f71\u54cd\u540c\u65f6\uff0c\u4fdd\u8bc1\u5176\u4ed6\u7684\u5f71\u54cd\u4e0d\u53d7\u5f71\u54cd</p> <p>\u4f46\u662f\u6ce8\u610f\uff1a \u5728test time\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u7528dropout\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6700\u540e\u6a21\u578b\u662f\u4e00\u4e2a\u8f93\u51fa\u7a33\u5b9a\u7684\u6a21\u578b\uff01\u4e3a\u4e86\u5b9e\u73b0\u6700\u7ec8\u9884\u671f\u8f93\u51fa\u4e0d\u53d7\u5f71\u54cd\uff0c\u56e0\u6b64\u524d\u9762\u624d\u4f1a/keep_prob\u4ee5\u7ef4\u6301\u9884\u671f\u503c</p> <p>\u90a3\u4e48\u4e3a\u4e3a\u4ec0\u4e48dropout\u53ef\u4ee5\u6709\u4f5c\u7528\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u611f\u53d7\uff1a\u4e00\u4e2a\u8282\u70b9\u63a5\u53d7\u4e00\u5b9a\u6570\u91cf\u7684\u8fde\u7ebf\uff0c\u56e0\u4e3a\u4f1a\u968f\u673a\u5931\u6d3b\uff0c\u6240\u4ee5\u6743\u503c\u4e0d\u80fd\u8fc7\u591a\u96c6\u4e2d\u5728\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u4e8eL2 \u6b63\u5219\u5316\u7684\u201c\u6743\u503c\u8870\u51cf\u201d</p> <p>\u5f53\u7136\u5b9e\u6218\u4e2d\uff0c\u6bcf\u4e00\u5c42\u7684keep_prob\u53ef\u4ee5\u8bbe\u7f6e\u7684\u4e0d\u4e00\u6837\uff0c\u4e00\u822c\u6765\u8bf4\u4e0a\u4e00\u5c42\u8282\u70b9\u6570\u91cf\u8d8a\u591a\uff0ckeep_prob\u53ef\u4ee5\u7a0d\u5fae\u8bbe\u7f6e\u7684\u5c0f\u4e00\u70b9\uff0c\u4f8b\u59820.5\uff1b\u5982\u679c\u6709\u67d0\u4e9b\u5c42\u6211\u4e0d\u62c5\u5fc3\u8fc7\u62df\u5408\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1. \u540c\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6211\u7684\u64cd\u4f5c\u662f\u6709\u6548\u7684\uff08\u5e2e\u52a9\u6211\u8c03\u6574\u53c2\u6570\uff09\uff0c\u53ef\u4ee5\u8ba9\u8ba1\u7b97\u673a\u753b\u4e00\u4e2aJ-iterations\u7684\u56fe\uff0c\u6765\u89c2\u5bdf\u6211\u7684\u8bbe\u7f6e\u662f\u5426\u8ba9\u7b97\u662f\u51fd\u6570\u5355\u8c03\u9012\u51cf\u4e86\uff08monotonically decreasing\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_21","title":"\u5176\u4ed6\u6b63\u5219\u5316\u65b9\u6cd5","text":"<ol> <li>\u6211\u4eec\u5e0c\u671b\u66f4\u591a\u7684\u6570\u636e\uff0c\u4f46\u662f\u5f88\u9057\u61be\u7684\u662f\u6709\u7684\u65f6\u5019\u518d\u989d\u5916\u83b7\u53d6\u6570\u636e\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4eba\u5de5\u634f\u9020\u65b0\u6570\u636e\uff0c\u4f8b\u5982\u4e00\u5f20\u732b\u7684\u7167\u7247\uff0c\u6211\u4eec\u53ef\u4ee5\u88c1\u526a\uff0c\u65cb\u8f6c\uff08\u89d2\u5ea6\u522b\u8fc7\u5927\uff09\uff0c\u6c34\u5e73\u7ffb\u8f6c\u7b49</li> <li>early stopping, \u4e00\u822c\u6765\u8bf4\u968f\u7740iterations, dev set error\u4f1a\u5148\u4e0b\u964d\u540e\u4e0a\u5347\uff0c\u800ctrain set error\u4f1a\u4e00\u76f4\u4e0b\u964d\u3002\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u5728dev set error\u6700\u5c0f\u7684\u65f6\u5019\u76f4\u63a5\u505c\u6b62\u8bad\u7ec3\u3002\u5f53\u7136\u8fd9\u4e5f\u6709\u7f3a\u70b9\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u540c\u65f6\u6ee1\u8db3\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\u548c\u9632\u6b62\u8fc7\u5ea6\u62df\u5408</li> </ol>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#normalizing-inputs","title":"\u5f52\u4e00\u5316\u8f93\u5165 \uff08Normalizing Inputs)","text":"<p>\u5047\u5982\u8bf4\u8f93\u5165\u7684\u7279\u5f81\u6709\u4e24\u4e2a\uff0c\u9996\u5148\u7b2c\u4e00\u6b65\u662f\u53d6\u5e73\u5747\u503c\uff0c\u7136\u540e\u628a\u6574\u4e2a\u56fe\u62c9\u5230\u539f\u70b9\u4e2d\u95f4\uff1b\u7b2c\u4e8c\u90e8\u662f\u7b97\u51fa\u65b9\u5dee\uff0c\u7136\u540e\u6bcf\u4e2ax\u9664\u4ee5\u8fd9\u4e2a\u65b9\u5dee\u7684\u5e73\u65b9\u6839\uff08\u6807\u51c6\u5dee\uff09</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u5f52\u4e00\u5316\u5462\uff1f \u6709\u7684\u65f6\u5019\u7531\u4e8e\u7279\u5f81\u7684scale\u4e0d\u540c\uff0c\u53ef\u80fdJ(w, b)\u53ef\u80fd\u5c31\u4f1a\u53d8\u5f97\u975e\u5e38\u72ed\u957f\uff1b\u5f52\u4e00\u5316\u4e4b\u540e\uff0c\u66f2\u7ebf\u5c31\u53d8\u5f97\u975e\u5e38\u597d\u770b\uff0c\u800c\u4e14\u5b66\u4e60\u7387\u7684\u8bbe\u7f6e\u66f4\u5bb9\u6613\uff0c\u66f4\u65b9\u4fbf\u4f18\u5316\uff08\u72ed\u957f\u7684\u66f2\u7ebf\u4e0b\u4e0d\u540c\u7684\u5730\u65b9\u53ef\u80fd\u5e0c\u671b\u7684\u5b66\u4e60\u7387\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u659c\u7387\u5dee\u5f02\u975e\u5e38\u5927\uff09</p> <p></p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_22","title":"\u68af\u5ea6\u6d88\u5931/\u7206\u70b8&amp;\u968f\u673a\u521d\u59cb\u5316\u53c2\u6570","text":"<p>Data Vanishing/Exploding Gradients </p> <p></p> <p>\u5047\u5982\u8bf4\u6211\u4eec\u8bad\u7ec3\u4e00\u4e2a\u5f88\u6df1\u7684\u7f51\u7edc\uff0c\u90a3\u4e48yhat\u7684\u503c\u5c31\u662f\u9014\u4e2d\u7684\u4e00\u957f\u4e32\u8868\u8fbe\u5f0f\uff08\u7b2c\u4e00\u8f6e\uff0c\u521d\u59cb\u5316b=0\uff09\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\uff0cw\u77e9\u9635\u975e\u5e38\u5173\u952e\uff0c\u5728L\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd41\u5927\u4e00\u70b9\u6216\u6bd41\u5c0f\u4e00\u70b9\u90fd\u4f1a\u9020\u6210\u68af\u5ea6\u7206\u70b8\u6216\u6d88\u5931\uff0c\u4f7f\u5f97\u8bad\u7ec3\u65f6\u95f4\u589e\u957f\uff0c\u8bad\u7ec3\u96be\u5ea6\u52a0\u5927</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u4f46\u662f\u80fd\u591f\u5e2e\u5f88\u591a\u5fd9\u7684\u65b9\u6cd5\uff1a\u66f4\u8c28\u614e\u5730\u9009\u62e9\u968f\u673a\u5316\u53c2\u6570</p> <p></p> <p>\u5f53n\u5f88\u5927\u7684\u65f6\u5019\uff0c\u6211\u5e0c\u671bwi\u8fd8\u662f\u5c3d\u53ef\u80fd\u7684\u5c0f\uff1b\u90a3\u4e48\u6709\u7814\u7a76\u6307\u51fa\uff0c\u628awi\u7684\u65b9\u5dee\u63a7\u5236\u57282/n\u6bd4\u8f83\u597d\uff08\u5f52\u4e00\u5316\u8f93\u5165\uff09\uff0c\u56e0\u6b64\u6709\u4e86\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\uff0c\u524d\u9762\u662f\u9ad8\u65af\u5206\u5e03\uff0c\u540e\u9762\u662f\u5e73\u65b9\u6839\u4ee5\u63a7\u5236\u65b9\u5dee\uff0c\u5f53\u7136\u8fd9\u4e2a\u4ee3\u7801\u7684\u4f8b\u5b50\u662f\u9488\u5bf9\u6fc0\u6d3b\u51fd\u6570\u4e3aReLU\u7684\u5e73\u65b9\u6839\u5f0f\u5b50\uff1b\u5982\u679c\u662ftanh\u6fc0\u6d3b\u51fd\u6570\uff0c\u5efa\u8bae\u5e73\u65b9\u6839\u4f7f\u7528\u53f3\u8fb9\u7684\u5f0f\u5b50</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_23","title":"\u68af\u5ea6\u7684\u6570\u503c\u903c\u8fd1&amp;\u68af\u5ea6\u68c0\u9a8c","text":"<p>Numerical Approximation of Gradients &amp; Gradient Checking</p> <p>\u8ba1\u7b97\u673a\u91cc\u9762\u8ba1\u7b97\u4e00\u4e2a\u51fd\u6570\u7684\u4e00\u4e2a\u70b9\u7684\u5bfc\u6570\u771f\u7684\u662f\u6c42\u5bfc\u7136\u540e\u4ee3\u5165\u503c\u5417\uff1f\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u8ba1\u7b97\u673a\u4e2d\u91c7\u7528\u4e00\u79cd\u4f30\u8ba1\u7b97\u6cd5\uff1b\u6700\u4e0b\u9762\u7684\u5f0f\u5b50\u53cd\u6620\u4e86\u5bfc\u6570\u7684\u57fa\u672c\u5b9a\u4e49\uff0c\u800c\u8bef\u5dee\u53ef\u4ee5\u6709\u8fd9\u4e24\u4e2a\u5f0f\u5b50\u63a8\u51fa\u6765\uff0c\u53d1\u73b0\u91c7\u7528\u53cc\u8fb9\u7684\u8ba1\u7b97\u65b9\u5f0f\u8bef\u5dee\u66f4\u5c0f\uff08\u5f53\u03b5\u5c0f\u4e8e0\u7684\u65f6\u5019\uff09\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u673a\u4e2d\u5e38\u5e38\u91c7\u7528\u53cc\u8fb9\u8ba1\u7b97\u6765\u4f30\u7b97</p> <p>\u90a3\u4e48\u6267\u884c\u68af\u5ea6\u68c0\u9a8c\u53ef\u4ee5\u5f88\u597d\u7684\u5e2e\u52a9\u6211\u4eecdebug\uff1a</p> <p></p> <p>\u6ce8\u610f\u8fd9\u4e2aratio\u5206\u5b50\u6ca1\u6709\u5e73\u65b9\uff0c\u610f\u5473\u7740\u662f\u6bcf\u4e2a\u5143\u7d20\u7684\u5e73\u65b9\u7684\u548c\u7684\u5f00\u6839\u53f7\uff1b\u5982\u679c\u8fd9\u4e2aratio10\u7684\u591a\u5c11\u6b21\u65b9\u5c0f\u4e8e-7\uff0c\u975e\u5e38\u597d\uff1b\u5982\u679c\u662f-5\u5de6\u53f3\uff0c\u53ef\u80fd\u6709\u95ee\u9898\u4e5f\u53ef\u80fd\u6ca1\u6709\u95ee\u9898\uff1b\u5982\u679c\u662f-3\u5de6\u53f3\uff0c\u90a3\u4e48\u975e\u5e38\u6709\u53ef\u80fd\u6709bug</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#optimization-algorithms","title":"Optimization Algorithms\uff08\u4f18\u5316\u7b97\u6cd5\uff09","text":"<p>\u673a\u5668\u5b66\u4e60\u7684\u5e94\u7528\u662f\u4e00\u4e2a\u9ad8\u5ea6\u4f9d\u8d56\u7ecf\u9a8c\uff08highly empirical\uff09\u3001\u8fed\u4ee3\uff08iterative\uff09\u7684\u8fc7\u7a0b!</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#mini-batch","title":"Mini-Batch \u68af\u5ea6\u4e0b\u964d","text":"<p>\u4e4b\u524d\u6211\u4eec\u7528\u5411\u91cf\u5316\u540c\u65f6\u5904\u7406\u5927\u91cf\u6570\u636e\u6837\u672c\uff0c\u4f46\u662f\u5982\u679c\u6837\u672c\u6570\u8d85\u7ea7\u5927\u5462\uff1f\u6211\u4eec\u4e0d\u59a8\u53d6\u5f88\u591a\u5b50\u96c6\uff08mini-batch)\uff0c\u90a3\u4e48\u6839\u636enotational convention\uff0c\u89c1\u4e0b\u56fe\uff1a</p> <p></p> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86Mini-Batch\u7684\u6d41\u7a0b\uff1a\u6211\u4eec\u5047\u8bbe\u4e00\u51715million\u4e2a\u6837\u672c\uff0c\u5206\u62105000\u7ec4\uff0c\u4e00\u7ec41000\u4e2a\u6837\u672c\uff0c\u90a3\u4e48\u4e00\u8f6e\uff08epoch\uff09\uff0c\u5373\u6240\u6709Mini Batch\u90fd\u8fdb\u884c\u4e00\u6b21\u68af\u5ea6\u4e0b\u964d\uff0c\u51715000\u6b21\uff1b\u7136\u540e\u591aepoch\u8bad\u7ec3\uff0c\u76f4\u5230\u6536\u655b\u81f3\u4e00\u5b9a\u7cbe\u5ea6</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48mini batch\u6709\u5f88\u597d\u7684\u4f5c\u7528\u5462\uff1f\u8fd9\u770b\u8d77\u6765\u4ec5\u4ec5\u662f\u5206\u4e86\u4e00\u4e2a\u7ec4\uff01</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u6765\u770bJ-iteration\u7684\u51fd\u6570\u56fe\uff0c\u5982\u679c\u662f\u6574\u4e2abatch\uff0c\u90a3\u4e48\u66f2\u7ebf\u5e94\u8be5\u662f\u5e73\u6ed1\u7684\uff1b\u4f46\u662f\u5982\u679c\u662fmini batch, \u90a3\u4e48\u5bf9\u4e8e\u7b2ct\u4e2a\u6837\u672c\u53ef\u80fd\u4f1a\u51fa\u73b0oscillation\uff08\u6446\u52a8\uff09\uff0c\u56e0\u4e3a\u53ef\u80fd(X{1}, Y{1})\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u6570\u636e\u96c6\uff0c\u800c\uff08X{2},Y{2}\uff09\u662f\u4e00\u4e2a\u6bd4\u8f83\u96be\u770b\u7684\u6570\u636e\u96c6\uff0c\u56e0\u4e3a\u672c\u5e94\u8be5\u662f\u6574\u4f53\u4e0a\u5f88\u5e38\u89c4\u7684\u6570\u636e\u96c6\u5206\u6210\u4e86\u591a\u4e2apartition</p> <p></p> <p>\u90a3\u4e48\u5148\u770b\u5de6\u4e0b\u89d2\u8fd9\u4e2a\u56fe\uff0c\u5982\u679c\u8bf4\u662f\u6574\u4e2abatch\uff0c\u90a3\u4e48\u4f1a\u7a33\u5b9a\u5730\u9010\u6b65\u9760\u8fd1\u6700\u4f4e\u70b9\uff0c\u56e0\u4e3a\u6574\u4f53\u6837\u672c\u7684\u62df\u5408\u5173\u7cfb\u8fd8\u662f\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u660e\u786e\u7684\uff1b\u800c\u5982\u679cmini-batch\u6781\u7aef\u4e00\u70b9\uff0c\u4e00\u4e2a\u6837\u672c\u662f\u4e00\u4e2aMini-Batch\uff0c\u90a3\u4e48\u5c31\u662fstochastic gradient descent(\u968f\u673a\u68af\u5ea6\u4e0b\u964d)\uff0c \u5bf9\u4e8e\u4e00\u4e2a\u5b64\u96f6\u96f6\u7684\u6837\u672c\u6765\u8bf4\uff0c\u8fed\u4ee3\u901f\u5ea6\u5f53\u7136\u5f88\u5feb\uff0c\u4f46\u662f\u8fd9\u4e9b\u6837\u672c\u4e00\u4e2a\u4e2a\u90fd\u7b49\u7740\u8d70\u8fed\u4ee3\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u5411\u91cf\u5316\u7684\u4f18\u52bf\u6d88\u5931\u4e86\uff0c\u5e76\u4e14\u7531\u4e8e\u5355\u4e2a\u6837\u672c\u7684\u62df\u5408\u7279\u5f81\u5f88\u4f4e\uff0c\u6240\u4ee5\u8d70\u5411\u6700\u4f4e\u70b9\u7684\u8def\u975e\u5e38\u5d0e\u5c96\uff08\u5f53\u7136\u6574\u4f53\u4e0a\u8fd8\u662f\u671d\u7740\u6700\u4f4e\u70b9\u8d70\uff09\uff0c\u5e76\u4e14\u4f1a\u5728\u6700\u4f4e\u70b9\u9644\u8fd1\u5f98\u5f8a\uff08oscillating\uff09</p> <p>\u53ef\u89c1\uff0c\u53d6\u4e00\u4e2a\u5408\u9002\u7684mini-batch\u6570\u503c\u662f\u5341\u5206\u5173\u952e\u7684\uff01</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#exponentially-weighted-averages","title":"\u6307\u6570\u52a0\u6743\u5e73\u5747\uff08Exponentially weighted averages\uff09","text":"<p>\u8fd9\u4e2a\u662f\u4f26\u6566\u7684\u6e29\u5ea6\u56fe\uff0c\u8fd9\u4e2a\u56fe\u566a\u58f0\u5f88\u5927\uff0c\u56e0\u6b64\u8003\u8651\u52a0\u6743\u53d6\u503c\uff1a<code>vi = 0.9vi-1 + 0.1\u03b8i</code></p> <p>\u7528vi\u6765\u4ee3\u66ff\u03b8i\uff0c\u8fd9\u6837\u7684\u51fa\u6765\u7684\u66f2\u7ebf\u5c31\u66f4\u6f02\u4eae\u4e00\u4e9b\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u7684\u611f\u6027\u7406\u89e3\u662f\uff1avi\u7684\u503c\u4e0d\u5b8c\u5168\u53d6\u503c\u4e8e\u03b8i\u7684\u503c\uff08\u82e5\u662f\u5b8c\u5168\u53d6\u51b3\u4e8e\u5b83\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7684\u72ec\u7acb\u6027\u76f8\u5f53\u9ad8\uff0c\u751a\u81f3\u53ef\u4ee5\u98de\u4e0a\u5929\u90fd\u6ca1\u4eba\u7ba1\uff09\uff0c\u800c\u548cvi-1\u5efa\u7acb\u4e00\u79cd\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u4f7f\u5f97\u8fd9\u6bb5\u66f2\u7ebf\u6709\u4e00\u5b9a\u7684coherence\uff1b\u800c0.9\u7684\u5b9e\u9645\u542b\u4e49\u53ef\u4ee5\u7c97\u7565\u7406\u89e3\u4e3a10\u5929\u7684\u5e73\u5747\u6e29\u5ea6\uff08\u9a6c\u4e0a\u540e\u9762\u4f1a\u89e3\u91ca\uff09</p> <p></p> <p>\u6211\u4eec\u6765\u770b\u4e0d\u540c\u7684\u53d6\u503c\u4f1a\u600e\u4e48\u5f71\u54cd\u66f2\u7ebf\uff1b\u5982\u679c\u03b2\u5f88\u5927\uff0c\u90a3\u4e48\u51e0\u4e4e\u5b8c\u5168\u53d6\u51b3\u4e8e\u6628\u5929\uff0c\u90a3\u4e48coherence\u4f1a\u76f8\u5f53\u5927\uff0c\u90a3\u4e48\u4f1a\u5f97\u5230\u7eff\u8272\u66f2\u7ebf\uff1b\u800c\u5982\u679c\u03b2\u6ca1\u6709\u90a3\u4e48\u5927\u6bd4\u5982\u8bf40.5\uff0c\u90a3\u4e48coherence\u5e76\u4e0d\u662f\u90a3\u4e48\u5f3a\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u70b9\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f97\u5230\u566a\u58f0\u60c5\u51b5\u76f8\u5bf9\u6765\u8bf4\u8f83\u597d\u4e00\u70b9\u7684\u9ec4\u8272\u66f2\u7ebf\uff1b\u4e00\u822c\u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7c7b\u4f3c\u4e8e\u7ea2\u8272\u66f2\u7ebf\u7684\u66f2\u7ebf</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u4e3a\u4ec0\u4e48\u90a3\u4e48\u91cd\u8981\uff1f\u56e0\u6b64\u8981\u6df1\u5ea6\u7406\u89e3\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5b9e\u8d28:</p> <p></p> <p>\u90a3\u4e48\u4e0d\u96be\u770b\u51fa\uff0cv1 v2...\u7684\u63a8\u51fa\u6709\u70b9\u50cf\u6570\u5217\uff0c\u90a3\u4e48\u8fdb\u884c\u5f0f\u5b50\u5e26\u5165\u53ef\u5f97\u5230\u4e0b\u9762\u7684\u5f0f\u5b50\uff1b\u4e0d\u96be\u770b\u51fa\uff0c\u7cfb\u6570\u4e2d\u51fa\u73b0\u4e86\u4e860.9\u7684\u591a\u5c11\u6b21\u5e42\uff0c\u201c\u6307\u6570\u201d\u56e0\u6b64\u5f97\u540d\uff1b\u90a3\u4e48\u5176\u5b9e\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u7528\u03b8\uff08t\uff09\uff0c0.10.9^t\u4e24\u4e2a\u51fd\u6570\u7684\u79bb\u6563\u5f62\u5f0f\u5377\u79ef*\u5f97\u5230\uff08\u7b2c\u4e8c\u4e2a\u51fd\u6570\u8981\u4ee550\u505a\u4e2d\u5fc3\u5bf9\u79f0\uff0c\u7136\u540e\u76f8\u5e94t\u7684\u4e24\u4e2a\u4e24\u4e2a\u51fd\u6570\u503c\u76f8\u4e58\uff0c\u4e4b\u540e\u76f8\u52a0\uff09\uff1b\u800c\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u6743\u91cd\u4e0b\u964d\u5230 0.1\u00d71/e\u4ee5\u4e0b\u79f0\u4e3a\u201c\u5f71\u54cd\u5f88\u5c0f\u201d\uff0c\u90a3\u4e48\u6839\u636e\u516c\u5f0f\uff0c\u4e00\u822c\u6765\u8bf4\u5f53t\u8fbe\u52301/epsilon\u65f6\uff0c\u4e4b\u540e\u7684\u6743\u91cd\u5c31\u5f88\u4f4e\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u79f0\u4e3a\u201c\u524d1/epsilon\u7684\u52a0\u6743\u5e73\u5747\u201d\uff08\u8fd9\u4e9b\u6743\u91cd\u4e4b\u548c\u5f88\u63a5\u8fd1\u4e8e1\uff01\uff09</p> <p></p> <p>\u90a3\u4e48\u6ce8\u610f\u5230v0\u8bbe\u7f6e\u4e3a\u4e860\uff0c\u8fd9\u5bfc\u81f4\u4e86\u524d\u671f\u5b66\u4e60\u9636\u6bb5\u7684\u66f2\u7ebf\u504f\u5dee\u5f88\u5927\uff0c\u4f8b\u5982\u4e0a\u56fe\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u6ca1\u6709\u504f\u5dee\u7ea0\u6b63\uff08bias correction\uff09\u5f97\u5230\u7684\u662f\u7d2b\u8272\u66f2\u7ebf\uff1b\u56e0\u4e3a\u4e0d\u59a8\u770b\u770bv1 v2 \u7684\u6743\u91cd\u7cfb\u6570\u4e4b\u548c\uff0c\u8ddd\u79bb1\u5341\u4e07\u516b\u5343\u91cc\u3002\u56e0\u6b64\u6709\u5fc5\u8981\u52a0\u4e0a\u4fee\u6b63\uff0c\u56e0\u6b64\u6709\u4e86\u53f3\u8fb9\u7684\u5f0f\u5b50\uff0c\u52aa\u529b\u8ba9\u6743\u91cd\u7cfb\u6570\u4e4b\u548c\u4e3a1. \u800c\u5230\u4e86\u540e\u671f\uff0c\u5c31\u51e0\u4e4e\u548c\u6b63\u5e38\u7684\u91cd\u5408\u4e86\uff0c\u8bf4\u660e\u6536\u5230\u7684\u5f71\u54cd\u8f83\u5c0f\uff0c\u56e0\u6b64\u540e\u671f\u5e76\u4e0d\u9700\u8981\u9664\u4ee5\u4fee\u6b63\u53c2\u6570\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#momentum","title":"\u52a8\u91cf\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08Momentum\uff09","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u5229\u7528\u4e86\u6307\u6570\u52a0\u6743\u5e73\u5747\u7b97\u6cd5\u7684Momentum\u7b97\u6cd5\u603b\u662f\u6bd4\u6b63\u5e38\u7684\u68af\u5ea6\u4e0b\u964d\u8981\u5feb\uff0c\u8ba1\u7b97\u68af\u5ea6\u7684\u6307\u6570\u52a0\u6743\u5e73\u5747\u6570\u5e76\u5229\u7528\u8fd9\u4e2a\u68af\u5ea6\u6765\u66f4\u65b0\u6743\u91cd</p> <p></p> <p>\u548c\u4e4b\u524d\u4ecb\u7ecd\u7684\u6307\u6570\u52a0\u6743\u5e73\u5747\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u6211\u4eec\u4e0d\u518d\u7528dw db\u6765\u66f4\u65b0w b\uff0c\u6211\u4eec\u5229\u7528\u9014\u4e2d\u7684\u4e24\u4e2a\u5f0f\u5b50\u8ba1\u7b97Vdw, Vdb\u6765\u66f4\u65b0w b. \u6ce8\u610f\u8fd9\u91cc\u7684\u5de6\u53f3\u4e24\u4e2a\u90fd\u662fV\u03b8\uff0c\u4ee3\u8868\u8fd9\u4e00\u5c42\u7684\u66f4\u65b0\u901f\u5ea6\uff0c\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u4ecb\u7ecd\u7684\u65f6\u5019\uff0c\u6570\u5217\u7684\u7b2c\u4e00\u9879\u662f0\uff0c\u56e0\u4e3aMomentum\u68af\u5ea6\u4e0b\u964d\u4e2d\u7684\u6bcf\u4e00\u5c42\u4e00\u5f00\u59cb\u7684\u66f4\u65b0\u901f\u5ea6\u4e5f\u662f0\uff01</p> <p>\u8fd9\u4e2a\u5f0f\u5b50\u4f7f\u5f97\u539f\u5148\u53ef\u80fd\u6446\u52a8\u5e45\u5ea6\u975e\u5e38\u96be\u4ee5\u63a5\u53d7\u7684\u8f68\u8ff9\u5728\u7eb5\u5411\u4e0a\u7684\u6446\u52a8\u53d8\u5f97\u66f4\u52a0\u5e73\u7f13\uff0c\u800c\u6a2a\u5411\u4e0a\u51e0\u4e4e\u4e0d\u53d7\u5f71\u54cd\uff1b\u5c31\u50cf\u4e00\u4e2a\u7897\u91cc\u9762\u4e00\u4e2a\u7403\u5728\u5706\u5468\u6eda\uff0c\u6709\u4e86\u6469\u64e6\u529b\uff08\u6a2a\u5411\u963b\u529b\u65b9\u5411\u52a0\u901f\u5ea6\uff09\u5c31\u4f1a\u66f4\u65b0\u6162\u4e0b\u6765\uff0c\u800c\u7eb5\u5411\u4e0a\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c\u56e0\u6b64\u7403\u80fd\u591f\u987a\u5229\u5411\u4e2d\u5fc3\u6eda\u53bb\uff0c\u83b7\u5f97\u52a8\u91cfMomentum\u3002</p> <p></p> <p>\u5176\u4e2d\u03b2\u8bbe\u62100.9\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u5177\u6709\u76f8\u5f53\u597d\u7684\u9c81\u68d2\u6027\uff1b\u56e0\u4e3a\u5b9e\u8df5\u4e2d\u4e00\u822c10\u6b21\u8fed\u4ee3\u4e4b\u540e\uff0c\u5c31\u5ea6\u8fc7\u4e86\u504f\u5dee\u5f88\u5927\u7684\u9636\u6bb5\u3002\u6240\u4ee5\u5b9e\u8df5\u4e2d\uff0c\u5f88\u5c11\u4eba\u7684\u5b9e\u9a8c\u4f1a\u53d7\u5230\u4e00\u5f00\u59cb\u7684\u504f\u5dee\u5f71\u54cd\uff1b\u6ce8\u610f\u6709\u7684\u65f6\u5019Vdw Vdb\u53ef\u80fd\u7b49\u5f0f\u4f1a\u7ed3\u5408\u03b1\u8fdb\u884c\u53d8\u5f62\uff0c\u4f46\u662f\u5176\u5b9e\u6ca1\u6709\u4efb\u4f55\u5dee\u522b\uff0c\u53ea\u4e0d\u8fc7\u662f\u6570\u503c\u4e0a\u4f1a\u5f71\u54cd\u03b1\u7684\u6700\u4f73\u53d6\u503c\uff08\u5f53\u7136\u56fe\u7247\u4e2d\u7684\u662f\u66f4\u597d\u7684\u5f0f\u5b50\u7248\u672c\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#rmsprop-algorithm-root-mean-square","title":"RMSprop Algorithm (Root Mean Square)","text":"<p>\u5728\u539f\u5148\u7684\u8ba1\u7b97\u4e0a\u9762\u505a\u4e00\u4e9b\u6539\u52a8\uff0cSdw\u548cSdb\u7684\u5f0f\u5b50\u89c1\u4e0a\u56fe\uff1b\u7136\u540ew\u548cb\u7684\u66f4\u65b0\u4e5f\u89c1\u4e0a\u56fe\uff08\u77e9\u9635\u5e73\u65b9\u6307\u7684\u662f\u5bf9\u5e94\u5143\u7d20\u7684\u5e73\u65b9\u4e4b\u540e\u7684\u77e9\u9635\uff08element-wise\uff09\uff09</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u4fdd\u7559\u4e86\u4e00\u90e8\u5206\u7684momentum\uff1b\u76f4\u89c9\u6765\u770b\uff0c\u5e0c\u671b\u7ad6\u76f4\u65b9\u5411\u4e0a\u6446\u52a8\u5e45\u5ea6\u8f83\u5c0f\uff0c\u6c34\u5e73\u65b9\u5411\u4e0a\u5e45\u5ea6\u8f83\u5927\uff0c\u800c\u6c34\u5e73\u548cw\u6709\u5173\uff0c\u5782\u76f4\u548cb\u6709\u5173\uff0c\u56e0\u6b64\u5728\u539f\u672c\u4e00\u4e2a\u6c34\u5e73\u65b9\u5411\u4e0a\u4e0d\u9661\u5ced\u7ad6\u76f4\u65b9\u5411\u4e0a\u9661\u5ced\u7684oscillation, \u6211\u5e0c\u671bw\u4f1a\u76f8\u5e94\u5730\u5feb\u901f\u589e\u5927\uff0cb\u4f1a\u76f8\u5e94\u5730\u76f8\u5e94\u51cf\u5c11\u3002\u7528\u8fd9\u4e2a\u601d\u8def\u6765\u770b\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u5c31\u80fd\u5927\u81f4\u7406\u89e3\u4e3a\u4ec0\u4e48\u5b83\u662f\u6b63\u786e\u7684</p> <p>\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5206\u5b50\u4e0d\u4f1a\u9664\u4ee5\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684\u6570\u5b57\uff0c\u5206\u6bcd\u4e00\u822c\u52a0\u4e0a\u03b5\uff0c\u4e00\u822c\u9ed8\u8ba410^-8</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#adam-algorithm","title":"Adam Algorithm","text":"<p>\u5386\u53f2\u957f\u6cb3\u4e2d\u5f88\u591a\u4eba\u63d0\u51fa\u4e86\u4f18\u5316\u7b97\u6cd5\uff0c\u4f46\u662f\u4e8b\u5b9e\u8bc1\u660e\u5927\u591a\u6570\u7b97\u6cd5\u4e0d\u80fd\u5f88\u597d\u5730\u540c\u65f6\u517c\u5bb9\u591a\u79cd\u7f51\u7edc\u6846\u67b6\u3002\u4f46\u662f\uff0cRMSprop\u548cAdam Algorithm\u5c31\u662f\u5c11\u6709\u7684\u575a\u5b88\u4f4f\u4e86\u5927\u91cf\u4e0d\u540c\u7f51\u7edc\u6846\u67b6\u8003\u9a8c\u7684\u7b97\u6cd5</p> <p>\u4e00\u822c\u6765\u8bf4\uff0cadam\u5c31\u662fMomentum \u548c RMSprop\u7684\u7ed3\u5408\u4f53</p> <p></p> <p>\u5148\u662fmomentum\u7684\u8d28\u6570\u52a0\u6743\u5e73\u5747\uff0c\u540e\u6765\u662fRMSprop, \u5e76\u4e14\u8fd8\u8fdb\u884c\u4e86bias correction</p> <p></p> <p>\u6709\u5f88\u591a\u7684hyperparameter, \u4f46\u662f\u4e8b\u5b9e\u4e0a\u03b21 2\u90fd\u662f\u6709\u63a8\u8350\u9ed8\u8ba4\u503c\u7684\uff0c\u5f88\u5c11\u4f1a\u8c03\u8bd5\u5b83\uff1b\u03b5\u51e0\u4e4e\u4e0d\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\uff0c\u6240\u4ee5\u5c31\u4f7f\u7528\u9ed8\u8ba4\u5c31\u597d\u4e86\uff1b\u800c\u5b66\u4e60\u7387\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u3001\u9700\u8981\u4e0d\u65ad\u8c03\u8bd5\u7684\u53c2\u6570! </p> <p>Adam stands for Adaptive moment estimation</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_24","title":"\u5b66\u4e60\u7387\u8870\u51cf","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u7387\u8870\u51cf\uff1f\u76f4\u89c9\u4e0a\u6765\u770b\uff0c\u4e00\u5f00\u59cb\u5e0c\u671b\u8f68\u8ff9\u6b65\u4f10\u8fc8\u7684\u5927\u4e00\u70b9\uff0c\u4f46\u662f\u4e4b\u540e\u5f53\u5230\u8fbe\u4e86\u6700\u4f4e\u70b9\u9644\u8fd1\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u6b65\u4f10\u4f9d\u7136\u90a3\u4e48\u5927\u4e86\uff0c\u4e0d\u7136\u5c31\u4f1a\u5728\u6700\u4f4e\u70b9\u9644\u8fd1\u53cd\u590d\u6446\u52a8</p> <p></p> <p>\u4e00\u79cd\u5e38\u89c1\u7684\u8870\u51cf\u65b9\u6cd5\u5982\u4e0a\u56fe\uff1adecay_rate\u53c8\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0cepoch\u4ee3\u8868\u8bad\u7ec3\u201c\u8f6e\u201d\u6570\uff0c\u4e0a\u9762\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u5982\u679cepoch\u5f88\u5927\uff0c\u8bf4\u660e\u5df2\u7ecf\u8d70\u4e86\u5f88\u591a\u6b21\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u5b66\u4e60\u7387\u4e0b\u964d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5f0f\u5b50\u6b63\u597d\u8868\u793a\u4e86\u8fd9\u79cd\u5173\u7cfb</p> <p></p> <p>\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u7684\u8870\u51cf\u65b9\u6cd5\uff0c\u4f46\u662f\u6838\u5fc3\u601d\u8def\u90fd\u662fepoch\u4e0a\u5347\u540e\uff0clearning rate\u8981\u4e0b\u964d\uff08\u8fd8\u6709\u624b\u52a8\u8c03\u53c2\u7684\u3002\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#local-optima","title":"\u5c40\u90e8\u6700\u4f18\u95ee\u9898\uff08local optima\uff09","text":"<p>\u672c\u6765\u4ee5\u4e3a\uff0c\u5728\u7a7a\u95f4\u4e2d\uff0c\u635f\u5931\u51fd\u6570\u66f2\u9762\u957f\u5f97\u50cf\u6709\u5de6\u8fb9\uff1b\u5f53\u9047\u5230\u4e86\u56db\u5468\u68af\u5ea6\u90fd\u4e3a\u96f6\u7684\u70b9\uff0c\u8fd9\u53ef\u80fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff1b\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff0c\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u9047\u5230\u8fd9\u79cd\u56db\u5468\u68af\u5ea6\u90fd\u4e3a\u96f6\u7684\u70b9\uff0c\u7edd\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u9a6c\u978d\u70b9\uff08saddle point\uff09\u5176\u5b9e\u671d\u7740\u5408\u9002\u7684\u65b9\u5411\u4f9d\u7136\u80fd\u591f\u7ee7\u7eed\u4f18\u5316\u3002\uff08\u4e0d\u592a\u53ef\u80fd\u4f1a\u8fdb\u5165\u5c40\u90e8\u6700\u4f18\u70b9\uff0c\u53ea\u8981\u8bad\u7ec3\u7684\u7f51\u7edc\u662f\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u590d\u6742\u7684\uff09</p> <p>\u53ef\u80fd\u4f1a\u8212\u4e00\u53e3\u6c14\uff1a\u8fd8\u597d\u4e0d\u662f\u649e\u89c1\u4e86\u5c40\u90e8\u6700\u4f18\u70b9\u3002\u4f46\u662f\u4f9d\u7136\uff0csaddle point\u6709\u5f88\u5927\u7684\u95ee\u9898\uff1a\u978d\u70b9\u9644\u8fd1\u4e5f\u5f88\u6709\u53ef\u80fd\u6709\u5e73\u7f13\u533a\uff08plateau\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u68af\u5ea6\u957f\u65f6\u95f4\u63a5\u8fd1\u4e8e0\uff0c\u5bfc\u81f4\u5b66\u4e60\u901f\u7387\u975e\u5e38\u6162</p> <p>\u800cadam\u7b49\u7b97\u6cd5\u80fd\u591f\u5728\u8fd9\u79cd\u5e73\u7f13\u533a\u5c3d\u5feb\u8d70\u51fa\u6765\uff0c\u7ee7\u7eed\u5bfb\u627e\u63a5\u4e0b\u6765\u7684\u4f4e\u70b9</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#hyperparameter-tuning","title":"\u8c03\u53c2\u70bc\u4e39\u2014\u2014Hyperparameter tuning","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_25","title":"\u5982\u4f55\u8c03\u8bd5","text":"<p>\u8d85\u53c2\u6570\u6709\u5f88\u591a\uff0c\u4f46\u662f\u91cd\u8981\u6027\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u5c42\u7ea7\uff1a</p> <ol> <li>\u5b66\u4e60\u7387\uff1a\u975e\u5e38\u91cd\u8981\uff01\uff01</li> <li>momentum \u03b2\uff1b hidden units; mini-batch size</li> <li>hidden layers; learning rate decay</li> </ol> <p></p> <p>\u7b56\u75651\uff1a\u4e0d\u8981\u53d6\u8868\u683c\u70b9\uff01\u5047\u5982\u8bf4\u4e00\u4e2a\u8d85\u53c2\u6570\u662f\u5b66\u4e60\u7387\uff0c\u53e6\u4e00\u4e2a\u662fadam\u4e2d\u7684epsilon\uff08\u8fd9\u91cc\u4e3e\u6781\u7aef\u4f8b\u5b50\uff09\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\u5f71\u54cd\u548cepsilon\u51e0\u4e4e\u4e00\u70b9\u5173\u7cfb\u90fd\u6ca1\u6709\uff0c\u4f46\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u7684epsilon\u70b9\u53ea\u67095\u4e2a\uff0c\u4e0d\u80fd\u76f4\u89c2\u770b\u51fa\uff1b\u800c\u5982\u679c25\u4e2a\u70b9\u90fd\u662f\u968f\u673a\u7684\uff0c\u90a3\u5f88\u5bb9\u6613\u5c31\u80fd\u53d1\u73b0\u8c01\u91cd\u8981\u8c01\u4e0d\u662f\u90a3\u4e48\u91cd\u8981\u4e86</p> <p>\u5982\u679c\u662f\u4e09\u4e2a\u8d85\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u662f\u7acb\u65b9\u4f53\u4e2d\u53d6\u8868\u683c\uff1b\u9ad8\u7ef4\u4ee5\u6b64\u7c7b\u63a8</p> <p>\u7b56\u75652\uff1a\u4ece\u7c97\u5230\u7cbe\uff1a\u5148\u7f29\u5c0f\u5230\u4e00\u4e2a\u8868\u73b0\u70b9\u90fd\u5f88\u597d\u7684\u533a\u57df\u5185\uff0c\u518d\u968f\u673a\u53d6\u70b9\u6765\u8fdb\u4e00\u6b65\u627e\u533a\u57df\uff0c\u4e00\u76f4\u627e\u5230\u6ee1\u610f\u7684\u533a\u57df\uff08From Coarse to Fine\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_26","title":"\u9009\u62e9\u5408\u9002\u533a\u95f4","text":"<p>\u5728\u8de8\u5ea6\u5e76\u4e0d\u662f\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff08\u6570\u91cf\u7ea7\uff09\u5747\u5300\u5f53\u7136\u662f\u4e00\u4ef6\u7406\u6240\u5e94\u5f53\u7684\u4e8b\u60c5\uff1b\u4f46\u662f\u5982\u679c\u6570\u91cf\u7ea7\u4e0a\u8de8\u5ea6\u5f88\u5927\u5462\uff1f</p> <p></p> <p>\u5047\u8bbe\u8003\u8651\u7684\u5b66\u4e60\u7387\u4ece0.0001\u52301\uff0c\u90a3\u4e48\u518d\u5747\u5300\u53d6\u503c\u8c8c\u4f3c\u6709\u70b9\u4e0d\u53ef\u53d6\uff1b\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6570\u8f6c\u6362\uff0c\u7136\u540e\u6307\u6570\u533a\u95f4\u4e2d\u5806\u968f\u673a\u53d6\u6570\u5b57\uff0c\u8fd9\u6837\u5c31\u66f4\u5408\u7406\u4e00\u4e9b</p> <p></p> <p>\u53e6\u5916\u4e00\u4e2a\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6307\u6570\u52a0\u6743\u5e73\u5747\u4e2d\u03b2\u7684\u5408\u7406\u53d6\u503c\uff1a\u60f3\u52301-\u03b2\u5f88\u6b63\u5e38\uff0c\u4f46\u662f\u4e4b\u540e\u662f\u5e73\u5747\u8fd8\u662f\u5bf9\u6570\u5462\uff1f\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u03b2\u4ece0.9\u53d6\u52300.9005\uff0c\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u4ee3\u8868\u5e73\u5747\u6837\u672c\u6570\u91cf\u4ece10\u5230\u4e00\u4e2a\u6bd410\u5927\u4e00\u4e9b\u7684\u6570\u5b57\uff0c\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff1b\u4f46\u662f\u4ece0.999\u52300.9995\u5f71\u54cd\u5c31\u5929\u5dee\u5730\u522b\uff0c\u56e0\u4e3a\u4ee3\u8868\u7684\u662f\u5e73\u5747\u6837\u672c\u6570\u91cf\u4ece1000\u5230\u4e862000\uff01\u56e0\u6b641-\u03b2\u4e4b\u540e\u5e94\u8be5\u662f\u53d6\u5bf9\u6570\u7136\u540e\u518d\u968f\u673a\u53d6\u503c</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#pandas-and-caviar-strategies","title":"Pandas and Caviar Strategies","text":"<p>\u8bad\u7ec3\u6a21\u578b\u6709\u4e24\u79cd\u4e3b\u6d41\u7684\u65b9\u5f0f\uff1a\u7b2c\u4e00\u79cd\u662f\u201cbabysitting\u201d, \u7b2c\u4e00\u5929\u521d\u59cb\u5316\u53c2\u6570\uff0c\u7136\u540e\u4e4b\u540e\u4e0d\u65ad\u505a\u8c03\u6574\uff1b\u7b2c\u4e8c\u79cd\u662f\u201cparallel\u201d, \u591a\u4e2a\u6a21\u578b\u5728\u4e00\u79cd\u53c2\u6570\u6216\u7b97\u6cd5\u914d\u7f6e\u4e0b\u8bad\u7ec3\uff0c\u6700\u540e\u770b\u54ea\u4e2a\u6700\u597d</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u7b97\u529b\u5f88\u8db3\u7684\u60c5\u51b5\u4e0b\u91c7\u53d6caviar\u6a21\u5f0f\uff0c\u4e0d\u591f\u7684\u8bdd\u91c7\u53d6panda\u6a21\u5f0f</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#batch-norm","title":"\u6b63\u5219\u5316\u7f51\u7edc\u7684\u6fc0\u6d3b\u51fd\u6570\uff08Batch Norm\uff09","text":"<p>\u4e4b\u524d\u63d0\u5230\u4e86\u5f52\u4e00\u5316\u8f93\u5165\uff0c\u8ba9\u635f\u5931\u51fd\u6570\u66f2\u7ebf\u4ece\u72ed\u957f\u7684\u6837\u5b50\uff08elongated\uff09\u53d8\u6210\u597d\u770b\u7684\u6837\u5b50\uff0c\u4ece\u800c\u4f7f\u5f97\u6700\u4f73\u5b66\u4e60\u7387\u5bb9\u6613\u627e\u5230\uff0c\u5e76\u4e14\u65b9\u4fbf\u8bad\u7ec3w\u548cb\u3002\u90a3\u4e48\u8fd9\u662f\u9488\u5bf9\u4e00\u4e2aLogistic regression\u7684\uff0c\u5982\u679c\u5e94\u7528\u5230\u4e00\u4e2a\u5f88\u6df1\u7684\u7f51\u7edc\u4e2d\u5462\uff1f\u6211\u4eec\u5bf9\u4e8ea[l]\u8fdb\u884c\u5f52\u4e00\u5316\u8fd8\u662fz[l]\u8fdb\u884c\u5f52\u4e00\u5316\u4ee5\u4f7f\u5f97w[l+1] b[l+1]\u7684\u8bad\u7ec3\u53d8\u5f97\u66f4\u52a0\u8f7b\u677e\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5b9e\u8df5\u4e2d\u4e00\u822c\u5bf9z[l]\u5f52\u4e00\u5316\uff0c\u8fd9\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cddefault choice\u3002</p> <p></p> <p>\u90a3\u4e48\u5982\u56fe\uff1a\u03bc\u548c\u03c3^2\u7684\u503c\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u8fc7\u7684\u5f88\u76f8\u4f3c\uff0c\u7136\u540e\u5f97\u5230Z[l] (i)norm\uff08\u6ce8\u610f\u5206\u6bcd\u52a0\u4e0a\u4e86\u03b5\uff0c\u9632\u6b62\u9664\u4ee50\uff09\uff0c\u8fd9\u6837\u4e00\u6765Znorm\u7684\u5e73\u5747\u503c\u4e3a0\uff0c\u65b9\u5dee\u4e3a1\u3002\u4f46\u662f\u8fd9\u6837\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u7684\u786e\u66f2\u7ebf\u597d\u770b\u4e86\uff0c\u4f46\u662f\u5bf9Z\u7684\u6846\u5b9a\u592a\u4e25\u683c\u3002\u56e0\u6b64\u6709\u4e86Z~\uff08tilde\uff09\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4f7f\u5f97Z~\u7684\u5e73\u5747\u503c\u548c\u65b9\u5dee\u5f97\u4ee5\u4fee\u6539\uff0c\u90a3\u4e48\u6700\u540e\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u7684\u8fd8\u6709\u4e00\u4e2a\u4e2a\u03b3\u548c\u03b2\uff08\u6ca1\u9519\uff0c\u8fd9\u4e24\u4e2a\u53c2\u6570\u5728\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u8fed\u4ee3\uff0c\u7528gradient descent \u6216\u8005 Adam \u6216\u8005 \u6216\u8005 RMSprop \u6216\u8005 Momentum\u7b49\u7b49\uff09</p> <p>\u90a3\u4e48Batch Norm\uff08BN\uff09\u662f\u5982\u4f55fit in\u795e\u7ecf\u7f51\u7edc\u7684\u5462\uff1f</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0cX(A[0]) - Z - Z~ - A - Z - Z~ - A......\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6d41\u7a0b\u3002\u90a3\u4e48\u76f4\u89c2\u4e0a\u6765\u770b\uff0c\u6700\u540e\u8981\u8bad\u7ec3\u51fa\u6765\u7684\u53c2\u6570\u5c31\u662f\u56fe\u4e2d\u6240\u5c55\u793a\u51fa\u6765\u7684\u90a3\u6837\u3002</p> <p>Batch Norm\u5728\u4ee3\u7801\u4e2d\u5f80\u5f80\u53ea\u8981\u4e00\u884c\u5c31\u80fd\u641e\u5b9a\uff1a<code>tf.nn.batch_normalization</code></p> <p>\u5728\u5b9e\u8df5\u4e2d\uff0cBatch Norm\u4e00\u822c\u548cMini Batch\u4e00\u8d77\u4f7f\u7528\u3002</p> <p></p> <p>\u6ce8\u610f\u5230\uff0c\u56e0\u4e3aBatch Norm\u7684\u5b9e\u8d28\uff0cZ\u7684\u8ba1\u7b97\u4e2d\u540e\u9762\u52a0\u4e0a\u7684b\u5176\u5b9e\u9996\u5148\u5c31\u4f1a\u88ab\u5220\u53bb\u3002\u56e0\u6b64\u5176\u5b9e\u8bad\u7ec3\u51fa\u6765\u7684\u53c2\u6570\u4e2d\u6ca1\u6709b\u3002\u5176\u6b21\u8981\u6ce8\u610f\u7684\u662f\u03b2\u548c\u03b3\u7684\u7ef4\u5ea6\uff0c\u8fd9\u4e9b\u5728\u9014\u4e2d\u90fd\u8bb2\u6e05\u695a\u4e86</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48Batch Norm\u80fd\u591f\u663e\u8457\u63d0\u5347\u5b66\u4e60\u901f\u7387\u5462\uff1f \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5f52\u4e00\u5316\u5bf9\u4e8e\u635f\u5931\u51fd\u6570\u66f2\u7ebf\u7684\u6539\u5584\uff0c\u8fd9\u5f53\u7136\u662f\u4e00\u70b9\u539f\u56e0\uff0c\u90a3\u4e48\u4e8b\u5b9e\u4e0a\u8fd8\u6709\u5176\u4ed6\u539f\u56e0\uff1a</p> <p></p> <p>\u5047\u5982\u8bf4\u6211\u4eec\u5de6\u8fb9\u662f\u8bad\u7ec3\u96c6\uff0c\u4f46\u662f\u6d4b\u8bd5\u673a\u662f\u6709\u8272\u7684\u732b\u3002\u90a3\u4e48\u6211\u4eec\u4e0d\u80fd\u671f\u5f85\u5de6\u8fb9\u7684\u6a21\u578b\u80fd\u591f\u5f88\u597d\u7684\u8fd0\u7528\u5230\u53f3\u8fb9\u3002\u4e3a\u4ec0\u4e48\uff1f\u89c1\u56fe\u4e2d\uff0c\u5de6\u8fb9\u662f\u8bad\u7ec3\u96c6\uff0c\u70b9\u90fd\u96c6\u4e2d\u5728\u4e00\u4e2a\u5730\u65b9\u3002\u867d\u7136\u6a21\u578b\u62df\u5408\u51fa\u6765\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u662f\u7531\u4e8e\u53f3\u8fb9\u6839\u672c\u6ca1\u6709\u4e1c\u897f\uff0c\u56e0\u6b64\u4e0d\u80fd\u671f\u5f85\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u7528\u5728\u53f3\u8fb9\u7684\u6d4b\u8bd5\u96c6\u4e0a\uff0c\u867d\u7136\u90a3\u4e2a\u6211\u4eec\u60f3\u8981\u8bad\u7ec3\u51fa\u6765\u7684\u201c\u771f\u6b63\u7684\u6b63\u786e\u51fd\u6570\u201d\u5728\u4e24\u4e2adata set\u91cc\u9762\u90fd\u662f\u771f\u5b9e\u5b58\u5728\u7684\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u5047\u5982\u8bf4\u6709\u4e00\u4e2aX\u5230Y\u7684mapping, \u5047\u5982\u8bf4\u6539\u53d8\u4e86X\u7684\u5206\u5e03\uff0c\u8fd9\u4e2amapping\u4e5f\u4f1a\u6709\u6240\u5931\u6548\u3002\u8fd9\u79cd\u73b0\u8c61\u53eb\u505a\u201ccovariate shift\u201d.</p> <p></p> <p>\u52a0\u5165\u6211\u73b0\u5728\u5355\u5355\u770b\u7b2c\u4e09\u5c42\uff1a\u5982\u679c\u6ca1\u6709\u4e86Batch Norm\uff0c\u524d\u9762\u4e24\u5c42\u5b66\u4e60\u540e\u66f4\u65b0\u4e86a[2]\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u636e\u96c6\u7684\u5206\u5e03\u53ef\u80fd\u5c31\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u6837\u4e86\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u5c42\u6765\u8bf4\u975e\u5e38\u96be\u53d7\uff1b\u7b2c\u4e09\u5c42\u96be\u53d7\u7b2c\u56db\u5c42\u8ddf\u7740\u96be\u53d7\u3002\u56e0\u6b64\u6211\u4eec\u60f3\u8981\u6bcf\u4e00\u6b21\u4f20\u7ed9\u4e0b\u4e00\u5c42\u7684\u6570\u636e\u90fd\u662f\u5341\u5206\u597d\u770b\u7684\uff0c\u81f3\u4e8e\u4e0b\u4e00\u5c42\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u597d\u5904\u7406\u7684\u6570\u636e\uff0c\u5c31\u8981\u770b\u5b83\u4eec\u81ea\u5df1\u7684\u03b3\u548c\u03b2\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u6bcf\u4e00\u5c42\u7684\u5b66\u4e60\u7684\u81ea\u6211\u72ec\u7acb\u6027\u76f8\u6bd4\u4e8e\u4e4b\u524d\u591a\u4e86\u4e00\u70b9\u70b9\u3002</p> <p>\u540c\u65f6\uff0cBatch Norm\u8fd8\u6709\u4e00\u70b9\u6b63\u5219\u5316\u7684\u6548\u679c\uff0c\u8fd9\u662f\u201c\u4e00\u9635\u610f\u60f3\u4e0d\u5230\u7684\u72c2\u559c\u201d\u3002\u56e0\u4e3amini batch\u5728\u81ea\u5df1\u7684\u8bad\u7ec3\u6570\u636e\u4e0a\u7528\u4e86mean and variance, \u56e0\u6b64\u6570\u636e\u662f\u6709\u566a\u70b9\u7684\uff0c\u800cz tilde\u4e5f\u662f\u6709\u566a\u70b9\u7684\uff0c\u56e0\u6b64\u4f1a\u8feb\u4f7f\u67d0\u4e00\u5c42\u4e0d\u4f1a\u8fc7\u5ea6\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u5355\u5143\u7684\u8f93\u51fa\u3002\u4f46\u662f\u6211\u4eec\u4e00\u822c\u4e0d\u80fd\u628a\u6b63\u5219\u5316\u5f53\u4f5cBatch Norm\u7684\u76ee\u7684\uff0c\u56e0\u4e3aregularization\u6548\u679c\u5176\u5b9e\u5f88\u5c0f</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#batch-norm-at-test-time","title":"Batch Norm at test time","text":"<p>\u6211\u4eec\u7528BN\u6765\u5904\u7406Mini Batch\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u6837\u672c\u9010\u4e00\u5904\u7406\uff1a</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u8981\u786e\u5b9a\u4e00\u4e2a\u03bc\u548c\u03c3\uff0c\u4f46\u662f\u6211\u4eec\u8bad\u7ec3\u7684\u65f6\u5019\u7528\u7684\u662fmini batch\uff0c\u6709\u5f88\u591a\u7684\u53c2\u6570\uff0c\u7528\u54ea\u4e2a\u5462\uff1f\u89e3\u51b3\u65b9\u6848\u662f\u5f97\u5230\u8fd9\u4e9b\u53c2\u6570\u540e\uff0c\u7528\u6307\u6570\u52a0\u6743\u5e73\u5747\u5f97\u51fa\u6700\u540e\u4f30\u7b97\u7684\u3001\u4f60\u8981\u662f\u7528\u7684\u03bc\u548c\u03c3\u7684\u53c2\u6570\uff0c\u7136\u540e\u7528\u5728\u6d4b\u8bd5\u96c6\u91cc\u9762\uff1b\u5f53\u7136\uff0c\u6211\u4eec\u8bad\u7ec3\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0d\u8981mini batch\uff0c\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u5f97\u51fa\u4e00\u4e2a\u03bc\u548c\u03c3\uff0c\u4f46\u662f\u5b9e\u8df5\u4e2d\uff0cdefault\u662f\u6307\u6570\u52a0\u6743\u5e73\u5747\u4e0eMini Batch\u7ed3\u5408\u6765\u4f7f\u7528\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#softmax","title":"Softmax \u56de\u5f52","text":"<p>\u4e4b\u524d\u6211\u4eec\u4e00\u76f4\u8bb2\u7684\u662fbinary classification, \u4f46\u662f\u5982\u679c\u6211\u60f3\u8981\u68c0\u6d4b\u662f\u4e0d\u662f\u4e00\u7c7b\u4e2d\u7684\u4e00\u79cd\u5462\uff1f</p> <p></p> <p>\u5047\u5982\u8bf4C\u4ee3\u8868\u6211\u60f3\u5206\u7684\u7c7b\u7684\u6570\u91cf\uff08\u8fd9\u91cc\u662f4\uff0c\u9664\u4e86\u4e09\u79cd\u52a8\u7269\uff0c\u8fd8\u67090\uff0c\u4ee3\u8868\u4e0d\u662f\u4e09\u79cd\u52a8\u7269\u4e4b\u4e00\uff09\uff0c\u56e0\u6b64\u6211\u5e0c\u671b\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u5c42\u8f93\u51fa\u7684yhat\u662f\u4e00\u4e2a\uff084\uff0c1\uff09\u7684\u5411\u91cf\uff0c\u8f93\u51fa\u7684\u56db\u4e2a\u6570\u5b57\u5206\u522b\u4ee3\u8868\u56db\u79cd\u53ef\u80fd\u6027\uff08\u5f53\u7136\uff0c\u56db\u4e2a\u6570\u5b57\u548c\u5e94\u8be5\u662f1\uff09</p> <p></p> <p>\u90a3\u4e48\u80af\u5b9a\u662f\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u5c42l\u8981\u4e0b\u529f\u592b\u4e86\uff1a\u8f93\u5165\u7684\u662fz[l], \u7136\u540e\u53d6\u5e42\u5f97\u5230\uff084\uff0c1\uff09\u7684\u5411\u91cft\uff0c\u7136\u540e\u8ba1\u7b97\uff084\uff0c1\uff09\u7684a[l]\uff0c\u8ba1\u7b97\u65b9\u5f0f\u89c1\u4e0a\u56fe\u3002\u90a3\u4e48\u6700\u540e\u5f97\u5230\u7684a[l]\u5c31\u542b\u6709\u56db\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u201c\u4e00\u79cd\u201d\uff0c\u800c\u4e14\u56db\u4e2a\u6982\u7387\u4e4b\u548c\u4e3a1\uff0c\u7b26\u5408\u6211\u4eec\u7684\u8bbe\u60f3\u3002</p> <p>\u90a3\u4e48\u8fd9\u79cd\u8ba1\u7b97\u6d41\u7a0b\u2014\u2014\u8fd9\u79cd\u8f93\u5165\u4e00\u4e2a\uff084\uff0c1\uff09\u77e9\u9635\uff0c\u8f93\u51fa\uff084\uff0c1\uff09\u77e9\u9635a[l]\u2014\u2014\u7684activation function\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3aSoftmax function</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#softmax_1","title":"\u8bad\u7ec3Softmax\u5206\u7c7b\u5668","text":"<p>\u60f3\u8bad\u7ec3\uff0c\u5f53\u7136\u8981\u77e5\u9053\u635f\u5931\u51fd\u6570\u662f\u4ec0\u4e48\u3002\u5982\u4e0a\u56fe\uff0c\u5047\u5982\u8bf4y\u5982\u56fe\uff0c\u90a3\u4e48yhat\u5c31\u4e0d\u662f\u4e00\u4e2a\u975e\u5e38\u7406\u60f3\u7684\u7ed3\u679c\uff0c\u6211\u5e0c\u671b\u635f\u5931\u51fd\u6570\u56e0\u6b64\u5f88\u5927\u3002\u90a3\u4e48\u56fe\u4e2d\u7684\u51fd\u6570\u6070\u80fd\u53cd\u6620\u8fd9\u79cd\u5173\u7cfb\uff01</p> <p>\u90a3\u4e48\u56de\u5934\u7b97\u504f\u5bfc\uff0cdz[l] = yhat - y\u4f9d\u7136\u662f\u8fd9\u6837\uff1b\u4f46\u662f\u7f16\u7a0b\u6846\u67b6\u4f1a\u5e2e\u52a9\u6211\u4eec\u8ba1\u7b97\u5bfc\u6570\u4e4b\u7c7b\u7684\uff0c\u56e0\u6b64\u4e0d\u7528\u8fc7\u591a\u7ea0\u7ed3\u5bfc\u6570\u7684\u8ba1\u7b97</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#deep-learning-framework","title":"Deep Learning Framework","text":"<p>\u5df2\u7ecf\u6709\u4e86\u5f88\u591a\u7b97\u6cd5\u548c\u7f51\u7edc\u95ee\u4e16\u4e86\uff0c\u4f46\u662f\u8ba9\u6211\u4eec\u4ece\u5934\u5f00\u59cb\u52a8\u624b\u5199\u662f\u4e00\u4ef6\u975e\u5e38\u56f0\u96be\u7684\u4e8b\u3002\u4f8b\u5982\u8bf4\uff0c\u6211\u5f53\u7136\u77e5\u9053\u4e24\u4e2a\u77e9\u9635\u76f8\u4e58\u600e\u4e48\u5b9e\u73b0\uff0c\u4e5f\u77e5\u9053\u5982\u4f55\u7528\u4ee3\u7801\u5b9e\u73b0\uff0c\u4f46\u662f\u5728\u771f\u6b63\u7f16\u7a0b\u4e2d\uff0c\u6211\u8fd8\u662f\u5e0c\u671b\u7528\u4e00\u884c\u4ee3\u7801\u6765\u8c03\u7528\u51fd\u6570\u4ece\u800c\u5b9e\u73b0\u77e9\u9635\u4e58\u6cd5\u3002\u795e\u7ecf\u7f51\u7edc\u4e5f\u662f\u7c7b\u4f3c\uff0c\u6709\u5f88\u591a\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5e2e\u52a9\u6211\u4eec\u603b\u7ed3\u4e86\u5404\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u65b9\u4fbf\u6211\u4eec\u8f7b\u677e\u8bad\u7ec3\u548c\u8c03\u7528</p> <p>\u7ecf\u5178\u7684\u6709\uff1a<code>Caffe/Caffe2 CNTK DL4J Keras Lasagne mxnet PaddlePaddle TensorFlow Theano Torch</code></p> <p>\u5176\u4e2d\u4e3b\u6d41\u662f<code>TensorFlow  Torch</code>, \u5b83\u4eec\u5e2e\u52a9\u6211\u4eec\u80fd\u591f\u63d0\u5347\u6548\u7387</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#machine-learning-strategy","title":"Machine Learning Strategy","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_27","title":"\u5355\u4e00\u6570\u5b57\u8bc4\u4f30\u6307\u6807&amp;\u6ee1\u8db3\u3001\u4f18\u5316\u6307\u6807","text":"<p>\u4e00\u822c\u6765\u8bf4\u5bf9\u4e8e\u4e00\u4e2a\u6a21\u578b\uff08binary classification\uff09\u6709\u4e24\u4e2a\u53c2\u6570\u8861\u91cf\u5b83\u7684\u6027\u80fd\uff1a\u4e00\u4e2a\u662fPrecision\uff08\u67e5\u51c6\u7387\uff09\u4e00\u4e2a\u662fRecall\uff08\u67e5\u5168\u7387\uff09\uff0c\u63a5\u4e0b\u6765\u4ecb\u7ecd\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>\u67e5\u51c6\u7387\uff1a\u5047\u5982\u8bf4\u8bad\u7ec3\u4e86\u4e00\u4e2a\u8fa8\u522b\u51fa\u732b\u7684\u6a21\u578b\uff0c\u90a3\u4e48\u67e5\u51c6\u7387\u4ee3\u8868\u7684\u662f\uff1a\u5982\u679c\u6a21\u578b\u6307\u51fa\u6765\u8fd9\u5f20\u56fe\u7247\u662f\u732b\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u7247\u771f\u7684\u662f\u732b\u7684\u6982\u7387\u662f\u591a\u5c11\uff1f</li> <li>\u67e5\u5168\u7387\uff1a\u5047\u5982\u8bf4\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8dd1\uff0c\u6240\u6709\u7684\u732b\u56fe\u7247\u6a21\u578b\u80fd\u67e5\u51fa\u591a\u5c11\u5f20\u6a21\u578b\u8ba4\u4e3a\u662f\u732b\u7684\u56fe\u7247\uff1f</li> </ul> <p>\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u636e\u6211\u4eec\u7528\u8c03\u548c\u5e73\u5747\uff08Harmonic Mean\uff09\u6570\u6765\u4f5c\u4e3a\u6307\u6807\uff08default\uff09</p> <p>\u8fd9\u5f53\u7136\u53ea\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4f46\u662f\u8fd9\u79cd\u601d\u60f3\u662f\u5341\u5206\u91cd\u8981\u7684</p> <p>\u5f53\u7136\u5b9e\u6218\u4e2d\u6709\u7684\u65f6\u5019\u4e00\u4e2a\u6570\u636e\u6982\u62ec\u6240\u6709\u53ef\u80fd\u4e0d\u663e\u793a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u5206\u7c7b\uff1a\u4ec0\u4e48\u662f\u4f18\u5316\u6307\u6807\uff0c\u6307\u7684\u662f\u6211\u5e0c\u671b\u5c3d\u53ef\u80fd\u597d\u7684\u6307\u6807\uff1b\u4ec0\u4e48\u662f\u6ee1\u8db3\u6307\u6807\uff0c\u53ea\u8981\u8fbe\u5230\u4e86\u95e8\u69db\uff08threshold\uff09\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#traindevtest-distribitions","title":"\u8bbe\u7acbTrain/Dev/Test distribitions","text":"<p>\u5728train and dev dataset\u4e0a\u9762\u8bad\u7ec3\u5c31\u597d\u50cf\u662f\u5bf9\u7740\u4e00\u4e2a\u9776\u5fc3\u4e0d\u65ad\u5f00\u67aa\uff0c\u4f46\u662f\u5982\u679c\u6700\u540e\u6d4b\u8bd5\u7684\u65f6\u5019\u6211\u628a\u9776\u5fc3\u5df2\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u5730\u65b9\uff0c\u8fd9\u53ef\u80fd\u5c31\u4f1a\u917f\u6210\u60b2\u5267\u3002\u56e0\u6b64\uff0c\u6700\u597d\u5728\u4e00\u4e2a\u6570\u636e\u6c60\u5b50\u91cc\u9762\u968f\u673a\u5206\u6210\u4e09\u7ec4\uff0c\u5206\u522b\u505atrain dev and test dataset, \u8fd9\u6837\u7684\u8bdd\u5c31\u4fdd\u8bc1\u4e86\u5206\u5e03\u6765\u6e90\u76f8\u540c\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u6709\u201c\u9776\u5b50\u4e34\u65f6\u6362\u4f4d\u7f6e\u201d\u7684\u60b2\u5267</p> <p>\u5f53\u7136\uff0c\u81f3\u5c11\u8981\u4fdd\u8bc1\u7684\u662fdev and test set comes from the same distribution</p> <ul> <li>Guideline: Choose a dev set and test set to reflect data you expect to get in the future and consider important to do well on.</li> </ul> <p>\u90a3\u4e48dev and test set size\u6700\u597d\u662f\u591a\u5c11\u5462\uff1f</p> <ul> <li>Size of test set: Set your test set to be big enough to give high confidence in the overall performance of your system</li> </ul> <p>\u53e6\u5916\uff0c\u6709\u7684\u65f6\u5019dev and test set \u4f1a\u5408\u5e76\uff0c\u4f46\u662f\u66f4\u5b89\u5fc3\u7684\u8fd8\u662f\u6709\u4e00\u4e2atest set\uff1b\u73b0\u5728\u6d41\u884c\u7684\u662f\u628a\u5927\u91cf\u7684\u6570\u636e\u7559\u7ed9training set</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#dev-and-test-set-examples","title":"\u4fee\u6539\u4e0d\u6b63\u786e\u7684dev and test set examples","text":"<ul> <li>Apply same process to your dev and test sets to make sure they continue to come from the same contribution</li> <li>Consider examining examples your algorithm got right as well as ones it got wrong</li> <li>Train and dev/test data may now come from slightly different distributions</li> </ul>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#guideline-and-skills","title":"\u5176\u4ed6Guideline and Skills","text":"<ol> <li> <p>\u5c3d\u5feb\u5efa\u7acb\u7b2c\u4e00\u4e2a\u6a21\u578b\uff0c\u7136\u540e\u8fed\u4ee3</p> </li> <li> <p>\u6709\u7684\u65f6\u5019\u53ef\u4ee5\u7ed9\u7279\u5b9a\u7c7b\u578b\u7684\u201c\u60e9\u7f5a\u201d\u52a0\u6743\u91cd</p> </li> </ol>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#convolutional-neural-network","title":"Convolutional Neural Network\u2014\u2014\u8ba1\u7b97\u673a\u89c6\u89c9","text":"<p>\u524d\u8a00\uff1a\u4e00\u5f20\u56fe\u7247\u6709\u591a\u5927\uff1f\u5047\u5982\u8bf4\u4e00\u5f20\u7167\u724710001000\uff0c\u90a3\u4e48\u5047\u5982\u8bf4\u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\u53d6\u63d0\u53d6\u7279\u5f81\u503c\uff0c\u90a3\u4e48\u8f93\u5165\u7684\u7279\u5f81\u503c\u7684\u6570\u91cf\u5c31\u67093000000\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u4e48\u5e9e\u5927\u7684\u8f93\u5165\u503c\uff0c\u4f1a\u5bfc\u81f4w b\u77e9\u9635\u90fd\u5de8\u5927\u65e0\u6bd4\uff0c\u8fd9\u662f\u96be\u4ee5\u63a5\u53d7\u7684\u3002\u56e0\u6b64\u6211\u4eec\u8981\u5c1d\u8bd5\u63d0\u53d6\u7279\u5f81\u503c\u51fa\u6765*</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#edge-detection","title":"\u8fb9\u7f18\u68c0\u6d4b\u2014\u2014Edge Detection","text":"<p>\u9996\u5148\u5148\u4ecb\u7ecd\u5377\u79efconvolution\u7684\u6982\u5ff5\uff1a\u56fe\u4e2d\u4e2d\u95f4\u76843*3\u77e9\u9635\u662f\u8fc7\u6ee4\u5668\uff08filter / kernel\uff09\u5de6\u56fe\u662f\u88ab\u5904\u7406\u7684\u56fe\u50cf\uff08\u7531\u4e8e\u662f\u7070\u5ea6\u56fe\uff0c\u6240\u4ee5\u662f6\u00d76\u00d71\uff09\u7136\u540e\u8fc7\u6ee4\u5668\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u8986\u76d6\u4e00\u7247\u533a\u57df\uff0c\u7136\u540e\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\u4e4b\u540e\u518d\u76f8\u52a0\uff0c\u5f97\u51fa\u4e00\u4e2a\u503c\uff0c\u4ee5\u6b64\u7c7b\u63a8</p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd9\u4e2afilter\u80fd\u591f\u68c0\u6d4b\u51fa\u8fb9\u7f18\u5462\uff1f </p> <p></p> <p>\u5de6\u8fb9\u8fd9\u4e2a\u56fe\u4e2d\u95f4\u6709\u4e00\u6761\u7070\u8272\u548c\u767d\u8272\u7684\u4ea4\u754c\u5904\uff0c\u5bf9\u8fd9\u4e2a\u56fe\u7528\u4e2d\u95f4\u7684\u8fd9\u4e2afilter\u8fdb\u884c\u5377\u79ef\uff0c\u5f97\u5230\u4e86\u53f3\u8fb9\u8fd9\u4e2a\u56fe\uff0c\u60ca\u559c\u5730\u53d1\u73b0\u539f\u672c\u5de6\u53f3\u5206\u522b\u4e3a\u767d\u7070\uff0c\u90fd\u53d8\u6210\u4e86\u7070\uff1b\u800c\u4e2d\u95f4\u5730\u5730\u65b9\u53d8\u6210\u4e86\u767d\u8272\uff01\u8bf4\u660e\u4e2d\u95f4\u8fd9\u6761\u5206\u754c\u7ebf\u7684\u7279\u5f81\u88ab\u653e\u5927\uff01</p> <p>\u6ce8\uff1a\u56fe\u4e2d\u7684\u6f14\u793a\uff1a\u9ed1\u8272\u662f\u8d1f\u6570\uff0c\u7070\u662f0\uff0c\u767d\u8272\u662f\u6b63\u6570</p> <p></p> <p>\u540c\u65f6\u6ce8\u610f\u5230\uff0c\u5982\u679c\u4ece\u5de6\u5230\u53f3\u662f\u7070\u8272\u53d8\u6210\u767d\u8272\u7684\u8bdd\uff0c\u4e4b\u540e\u7684\u7ed3\u679c\u4e2d\u95f4\u5c31\u662f\u9ed1\u8272\u7684\u3002\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u89c1\u5230\u7684\u7ed3\u679c\uff01\u4e0d\u7136\u7684\u8bdd\u600e\u4e48\u77e5\u9053\u8fd9\u4e2a\u8fb9\u754c\u4ece\u5de6\u5230\u53f3\u662f\u4ece\u7070\u5230\u767d\u8fd8\u662f\u4ece\u767d\u5230\u7070\uff01</p> <p>\u5f53\u7136\u4e0a\u9762\u7684\u90fd\u662f\u68c0\u6d4b\u7ad6\u76f4\u65b9\u5411\u5782\u76f4\u7684\u8fc7\u6ee4\u5668\uff0c\u6c34\u5e73\u7684\u4e5f\u5f88\u597d\u731c\u5230\uff1a</p> <p></p> <p>\u5728\u56fe\u4e2d\uff0c\u4e3a\u4e86\u68c0\u6d4b\u5230\u6c34\u5e73\u8fb9\u7f18\uff0c\u7528\u4e86\u53f3\u8fb9\u7684filter\u8fdb\u884c\u5377\u79ef\u3002\u7136\u540e\u7ed3\u679c\u4e2d\u5c31\u80fd\u77e5\u9053\u54ea\u91cc\u6709\u8fb9\u7f18\u4e86\uff0c\u800c\u4e14\u6b63\u8d1f\u503c\u4ee3\u8868\u4e86\u4ece\u4e0a\u5230\u4e0b\u662f\u767d\u5230\u7070\u8fd8\u662f\u7070\u5230\u767d</p> <p>\u8fd9\u91cc\u9762\u5de6\u53f3\u4e24\u4fa7\u768430\u770b\u8d77\u6765\u975e\u5e38\u7a81\u5140\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff0c\u771f\u5b9e\u7684\u56fe\u7247\u5f88\u5927\uff0c\u57283\u00d73\u7684\u533a\u57df\u4e2d\u5176\u5b9e\u6570\u503c\u53d8\u5316\u975e\u5e38\u5e73\u6ed1\uff08\u9664\u4e86\u8fb9\u7f18\uff09</p> <p>\u5f53\u7136filter\u4e0d\u6b62\u4e0a\u9762\u7684\u4e00\u79cd\uff1a\u5982sobel filter ; scharr filter </p> <p></p> <p>\u6709\u4e86\u8fd9\u79cd\u8fc7\u6ee4\u5668\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b\u4efb\u4f55\u7279\u5f81\u8fb9\u7f18\uff0c\u5f53\u7136\u201c\u4efb\u4f55\u201d\u8fd9\u4e2a\u4fee\u9970\u662f\u6709\u8d56\u4e8e\u8fc7\u6ee4\u5668\u5927\u5c0f\u548c\u53c2\u6570\u8bbe\u7f6e\u7684\u3002\u5176\u4e2d\u627e\u5230\u6b63\u786e\u7684\u8fc7\u6ee4\u5668\u53c2\u6570\u662f\u4e00\u4e2a\u975e\u5e38\u8270\u96be\u7684\u95ee\u9898\u3002</p> <p>\u5f53\u7136\uff0c\u4eba\u5de5\u81ea\u5df1\u627e\u5230\u5408\u9002\u7684\u8fc7\u6ee4\u5668\u5b9e\u5728\u662f\u592a\u9ebb\u70e6\u3002\u6df1\u5ea6\u5b66\u4e60\u544a\u8bc9\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06\u4e5d\u4e2a\u6570\u5168\u90e8\u89c6\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u5b66\u4e60\u51fa\u6765\u3002\u63a5\u4e0b\u6765\u5c06\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u628a\u8fd9\u4e9b\u53c2\u6570\u7b97\u51fa\u6765\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#padding","title":"Padding\uff08\u586b\u5145\uff09","text":"<p>\u9996\u5148\u6211\u4eec\u80fd\u591f\u76f4\u89c2\u611f\u53d7\u5230\u5377\u79ef\u7684\u7f3a\u70b9\uff1a1. \u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e4b\u540e\u56fe\u7247\u53d8\u5c0f\u4e86\uff1b 2\uff0c \u4f1a\u628a\u8fb9\u7f18\u4fe1\u606f\u629b\u5f03\u6389</p> <p>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u91c7\u7528padding\u586b\u5145\u7b56\u7565\uff0c\u5728\u56fe\u7247\u6700\u5916\u5c42\u8865\u4e0a\u4e00\u5c42\u50cf\u7d20\uff0c\u8fd9\u6837\u7684\u8bdd\u4e4b\u540e\u7684\u7167\u7247\u8fd8\u662f6\u00d76\uff0c\u5e76\u4e14\u8fb9\u7f18\u7684\u70b9\u7684\u4fe1\u606f\u88ab\u5229\u7528\u7684\u6b21\u6570\u63d0\u5347\u4e86\uff1b\u6211\u4eec\u5b9a\u4e49p = padding = 1, \u4ee3\u8868\u6700\u5916\u9762\u586b\u5145\u4e861\u5c42</p> <p></p> <p>\u5728\u662f\u5426\u586b\u5145\u8fd9\u65b9\u9762\u5206\u4e3a\u4e86\u4e24\u79cd\u7b56\u7565\uff1a Valid and Same convolutions strategy</p> <p>valid: \u76f4\u63a5\u4e0d\u8981\u586b\u5145\uff0c\u5c31\u6309\u7167\u56fe\u4e2d\u7684\u516c\u5f0f\uff0c\u5377\u79ef\u4e4b\u540e\u7684\u56fe\u7247\u7070\u7f29\u5c0f</p> <p>same: \u6211\u5f88\u5e0c\u671b\u586b\u5145\u4e4b\u540e\u7684\u56fe\u7247\u5728\u5377\u79ef\u4e4b\u540e\u80fd\u591f\u548c\u539f\u6765\u7684\u7167\u7247\u4fdd\u6301\u4e00\u6837\u7684\u5927\u5c0f\uff01\u56e0\u6b64\u6211\u53ef\u4ee5\u6309\u7167\u56fe\u7247\u4e2d\u7684\u516c\u5f0f\u6765\u9009\u62e9\u586b\u5145\u7684\u5c42\u6570\u3002\u5f53\u7136\uff0c\u4e3a\u4e86p\u6709\u6574\u6570\u89e3\uff0cCV\u4f20\u7edf\u662f\u9009\u62e9\u5947\u6570\u5c42\u7684\u586b\u5145\u50cf\u7d20\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#strided-convolution","title":"strided convolution(\u5377\u79ef\u6b65\u957f)","text":"<p>\u5f53\u7136\uff0cfilter\u7684\u79fb\u52a8\u4e5f\u53ef\u4ee5\u91c7\u53d6\u4e0d\u4e00\u6837\u7684\u6b65\u957f\uff08stride\uff09</p> <p></p> <p>\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6b65\u957f\u662f2\uff0c\u56e0\u6b64\u5377\u79ef\u540e\u7684\u56fe\u7247\u4e0d\u662f5\u00d75\u3002\u6ce8\u610f\u5230\u516c\u5f0f\u4e2d\u7684\u5411\u4e0b\u53d6\u6574\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679cfilter\u4e0d\u662f\u5b8c\u5168\u5728\u539f\u56fe\u7247\u4e2d\u7684\u8bdd\uff0c\u8fd9\u4e00\u6b21\u5377\u79ef\u8ba1\u7b97\u5c31\u4e0d\u8981\u8fdb\u884c\uff0c\u8fd9\u662fconvention\u3002</p> <p>\u6ce8\uff1a\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u5377\u79ef\u7684\u5b9a\u4e49\u548c\u6570\u5b66\u4e2d\u7684\u4e0d\u4e00\u6837\u3002\u5982\u679c\u662f\u6309\u7167\u6570\u5b66\u4e2d\u7684\u5b9a\u4e49\u7684\u8bdd\uff0cfilter\u8981\u5148\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u53cd\u8f6c\u4e4b\u540e\u624d\u80fd\u7528\u5728\u539f\u56fe\u7247\uff01\u4f46\u662f\u8fd9\u91cc\u662fCV\uff0c\u4f20\u7edf\u5c31\u662ffilter\u76f4\u63a5\u7528\u4e0a\u53bb</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_28","title":"\u4e09\u7ef4\u5377\u79ef","text":"<p>\u53ef\u80fd\u4f1a\u95ee\uff1a\u56fe\u7247\u4e0d\u662f\u4e8c\u7ef4\u7684\u5417\uff0c\u548c\u4e09\u7ef4\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u4f46\u662f\u4e4b\u524d\u7684\u56fe\u7247\u90fd\u662f\u7070\u767d\u7684\uff0c\u800c\u5b9e\u6218\u4e2d\u7167\u7247\u662f\u4e09\u7ef4\u7684\uff0c\u56e0\u4e3aRGB CHANNEL\u4e5f\u8981\u8003\u8651\u8fdb\u6765\uff0c\u6240\u4ee5\u662f\u4e09\u7ef4\u7684\u3002</p> <p></p> <p>\u4e0a\u9762\u8fd9\u4e2a\u6848\u4f8b\u5f88\u597d\u7684\u5c55\u793a\u4e86\u4e09\u4f4dfilter\u7a76\u7adf\u662f\u600e\u4e48\u64cd\u4f5c\u7684\u3002\u6ce8\u610f\uff0cfilter\u4e00\u5b9a\uff1f\u00d7\uff1f\u00d73\uff0c\u56e0\u4e3a\u8981\u6db5\u76d6\u4e09\u4e2a\u901a\u9053</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u6211\u53ea\u60f3\u68c0\u6d4b\u7ea2\u8272\u901a\u9053\u7684\u8fb9\u7f18\uff0c\u90a3\u4e48\u4e24\u5c42\u662f0\uff0c\u7ea2\u8272\u90a3\u4e00\u5c42\u662f\u68c0\u6d4b\u8fb9\u7f18\u7684filter\u5c31\u53ef\u4ee5\u4e86</p> <p></p> <p>\u90a3\u4e48\u5982\u679c\u6211\u60f3\u540c\u65f6\u68c0\u6d4b\u591a\u79cd\u8fb9\u7f18\u7279\u5f81\u5462\uff1f\u90a3\u4e48\u5c31\u8981\u7528\u591a\u4e2afilter\u4e86\u3002\u90a3\u4e48\u8fd9\u6837\u4e0d\u4f1a\u5f97\u5230\u5f88\u591a\u7ed3\u679c\u5417\uff1f\u6ca1\u9519\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u7ed3\u679c\u5806\u53e0\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u6b64\u5c31\u6709\u4e86\u56fe\u4e2d\u7684\u516c\u5f0f\uff0c\u4ee3\u8868\u4e00\u6b21\u64cd\u4f5c\u65f6\u5019\u7684\u201c\u77e9\u9635\u201d\u7684\u7ef4\u5ea6\u3002\u6ce8\u610f\uff1a\u6211\u4eec\u5e38\u5e38\u7528channel\u6765\u4ee3\u6307\u7b2c\u4e09\u4e2a\u7ef4\u6570\uff0c\u800c\u6709\u7684\u5730\u65b9\u4e5f\u4f1a\u4f7f\u7528depth\u4f46\u8fd9\u5e76\u4e0d\u662f\u5f88\u597d\u7684notational convention</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_29","title":"\u5355\u5c42\u5377\u79ef\u7f51\u7edc","text":"<p>\u5b66\u4e86\u5377\u79ef\u53ef\u80fd\u4f1a\u60f3\uff1a\u8fd9\u73a9\u610f\u513f\u548c\u795e\u7ecf\u7f51\u7edc\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f w b activation function\u5462\uff1f \u89c1\u4e0b\u56fe\uff1a</p> <p></p> <p>filter\u76f8\u5f53\u4e8ew\uff0c\u4eba\u4e3a\u52a0\u4e0a\u7684bias\u76f8\u5f53\u4e8eb, \u5bf9\u5904\u7406\u5b8c\u540e\u7684\u56fe\u7247\uff08\u7c7b\u4f3c\u4e8ez\uff09\u7528\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\u5904\u7406\uff08\u4e0a\u56fe\u4e2d\u4f8b\u5b50\u4e3aReLU\uff09\uff0c\u6700\u540e\u5f97\u5230\u4e86\u4e00\u4e2a\u56fe\u7247\uff08\u76f8\u5f53\u4e8ea(i)[l]\uff09\uff0c\u6700\u540e\u5806\u53e0\u8d77\u6765\uff08\u76f8\u5f53\u4e8ea[l]\uff09\uff0c\u4e00\u5207\u90fd\u4e32\u8054\u8d77\u6765\u4e86\uff01</p> <p></p> <p>\u63a5\u4e0b\u6765\u603b\u7ed3\u4e00\u4e0b\u5404\u4e2a\u53c2\u6570\u7684\u7ef4\u5ea6\u548cnotational convention:</p> <p>\u8f93\u5165\u8f93\u51fa\u90fd\u5f88\u597d\u7406\u89e3\uff0cnH/W[l]\u53c2\u6570\u4e5f\u5f88\u5bb9\u6613\u8ba4\u540c\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u4e4b\u524d\u662f\u8bb2\u8fc7\u7684(Height Width)</p> <p>\u6bcf\u4e00\u5c42\u7684filter\u53c2\u6570\uff0csize\uff082d\uff09\u00d7 filter\u6570\u91cf\uff0cget it </p> <p>a[l]\uff0c\u8fd9\u662f\u8981\u7528\u5728[l+1]\u5c42\u7684\uff0c\u56fe\u4e2d\u7684\u5f0f\u5b50\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\uff0csize\u548coutput\u4e00\u6837\u662f\u56e0\u4e3a\u6bd5\u7adf\u662f\u4ecez\u5904\u7406\u8fc7\u6765\u7684</p> <p>\u6743\u91cd\u77e9\u9635\uff1asize\u662f\u56e0\u4e3afilter size\uff0c \u540e\u9762\u4e24\u4e2a\u53c2\u6570\u662f\u56e0\u4e3achannel \u6570\u91cf\u8981\u8fdb\u884c\u8f6c\u5316\uff0cnc[l-1]\u4ee3\u8868\u7684\u662f\u4e0a\u4e00\u5c42\u7684channels\u6570\u91cf\uff0c\u4e4b\u540e\u7684\u6570\u91cf\u662fnc[l]\uff0cWeights\u77e9\u9635\u53c2\u6570\u548cfilter\u6570\u91cf\uff08channels\u6570\u91cf\uff09\u6302\u94a9\uff01</p> <p>\u6700\u540ebias\u524d\u4e24\u4e2a\u90fd\u662f1\u662f\u56e0\u4e3aPython\u7684Broadcasting\u673a\u5236\uff0c\u7b2c\u4e09\u4e2a1\u662f\u56e0\u4e3afilter\u5904\u7406\u4e4b\u540e\u7684channels\u53c2\u6570\u662f1\uff0c\u800cnc[l]\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u56e0\u4e3a\u6709number of filters\u4e2az\u9700\u8981\u52a0\u4e0abias</p> <p>\u8fd9\u5c31\u662f\u5355\u5c42\u5377\u79ef\u7f51\u7edc\uff01\uff01 \u6ce8\u610f\uff1afilter\u7b2c\u4e09\u7ef4\u4e00\u5b9a\u548c\u56fe\u7247\u7684channels\u6570\u91cf\u76f8\u7b49\uff01</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#convolutional-neural-network_1","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08Convolutional Neural Network\uff09","text":"<p>\u9996\u5148\u5bf9\u56fe\u7247\u4e0d\u65ad\u8fdb\u884c\u5377\u79ef\uff0c\u64cd\u4f5c\u6d41\u7a0b\u548c\u4e4b\u524d\u4ecb\u7ecd\u7684\u4e00\u5c42\u76f8\u4f3c\uff1b\u7136\u540e\u6700\u540e\u5f97\u5230\u4e86\u8f83\u4e3a\u6ee1\u610f\u7684\u7279\u5f81\u63d0\u53d6\u4e4b\u540e\uff0c\u5c55\u5e73\u7136\u540e\u4f5c\u4e3a\u7279\u5f81\u5411\u91cf\u8fdb\u884c\u8f93\u5165\uff0c\u63a5\u4e0b\u6765\u7684\u5c31\u662f\u4e4b\u524d\u6240\u5b66\u4e60\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e86\u3002\u8fd9\u5c31\u662fConvNet\u7684\u5927\u81f4\u601d\u8def\u3002\u6ce8\u610f\u5230\u56fe\u7247\u77e9\u9635\u7684Height and Weight\u9010\u6e10\u4e0b\u964d\uff0c\u800cchannels\u6570\u91cf\u9010\u6e10\u4e0a\u5347\uff0c\u8fd9\u662fConvNet\u4e2d\u7684\u5e38\u89c1\u73b0\u8c61</p> <p>\u5f53\u7136\uff0c\u8fd9\u91cc\u7684\u5377\u79ef\u7f51\u7edc\u4e2d\u53ea\u6709\u4e00\u79cd\u5c42\uff0c\u53eb\u505aConvolution Layer(CONV), \u4e8b\u5b9e\u4e0a\u8fd8\u6709\u53e6\u5916\u4e24\u79cdLayers:</p> <p>Pooling(POOL) and Fully connected(FC), \u5728\u5b9e\u6218\u4e2d\u4e00\u822c\u4e09\u79cd\u5c42\u90fd\u4f1a\u7528\u4e0a\u3002\u8fd9\u4e9b\u9a6c\u4e0a\u4f1a\u5b66\u4e60</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#pooling-layers","title":"\u6c60\u5316\u5c42 \uff08Pooling Layers\uff09","text":"<p>\u5148\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5047\u8bbe\u6211\u91c7\u53d6\u7684\u6c60\u5316\u7b56\u7565\u662fmax pooling, \u90a3\u4e48\u7528\u53e6\u5916\u4e00\u79cdfilter 2*2, stride = 2, \u6765\u626b\u8fc7\u8fd9\u5757\u533a\u57df\uff0cfilter\u4f1a\u7b5b\u9009\u51fa\u8fd9\u7247\u533a\u57df\u4e2d\u6700\u5927\u7684\u503c\u3002\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\u5982\u679c\u76f4\u63a5\u70b9\u8bf4\uff0c\u5c31\u662f\u5b9e\u9a8c\u4e2d\u8fd9\u79cd\u65b9\u6cd5\u5f88\u594f\u6548\uff1b\u4f46\u662f\u5982\u679c\u786c\u8981\u611f\u6027\u89e3\u91ca\uff0c\u90a3\u4e48\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e00\u7247\u533a\u57df\u5982\u679c\u6709\u7279\u5f81\uff0c\u90a3\u4e48\u4fdd\u7559\u6700\u5927\u503c\uff0c\u4ee3\u8868\u8fd9\u4e00\u7247\u6709\u8fd9\u4e2a\u7279\u5f81\uff0c\u800c\u6ca1\u6709\u7684\u533a\u57df\u4fdd\u7559\u7684\u6700\u5927\u503c\u4f9d\u7136\u5f88\u5c0f\uff0c\u4ee3\u8868\u8fd9\u4e00\u7247\u6ca1\u6709\u8fd9\u79cd\u7279\u5f81\u3002</p> <p>\u8fd9\u79cd\u6c60\u5316\u7b56\u7565\u6ca1\u6709\u4efb\u4f55\u53c2\u6570\u9700\u8981\u5b66\u4e60\uff0c\u76f4\u63a5\u5c31\u662f\u8bbe\u5b9a\u597dfilter size and stride\uff1b \u4e0b\u56fe\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p>\u90a3\u4e48\u8fd8\u6709\u4e00\u79cd\u5f88\u4e0d\u5e38\u7528\u7684\u6c60\u5316\u7b56\u7565\uff1a\u5e73\u5747\u6c60\u5316\uff08Average Pooling\uff09</p> <p>\u4e00\u822c\u6765\u8bf4\uff0cf = 2, s = 2, \u8868\u793a\u957f\u5bbd\u53d6\u4e00\u534a\uff1b\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4e0d\u7528padding\uff08\u6709\u53cd\u4f8b\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_30","title":"\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<p>\u4e3e\u4e2a\u4f8b\u5b50\uff08Inspired by LeNet-5\uff09</p> <p></p> <p>\u9996\u5148\u662fCONV layer, \u5176\u4e2dfilter\u6570\u91cf\u4e3a6\uff1b\u7136\u540e\u6765\u4e00\u5c42POOL\uff0c\u957f\u5bbd\u51cf\u534a</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u628aCONV+POOL\u79f0\u4e3aLayer1\uff0c\u56e0\u4e3a\u4e0d\u8ba4\u4e3aPOOL\u9700\u8981\u5b66\u4e60\u53c2\u6570\uff1b\u4f46\u662f\u6709\u4e9b\u6587\u732e\u4e2d\u559c\u6b22CONV\u548cPOOl\u90fd\u8ba4\u4e3a\u662f\u4e00\u5c42\u3002\u8fd9\u91cc\u8fd8\u662f\u91c7\u53d6\u524d\u8005</p> <p>\u7136\u540e\u518d16\u5c42filter\uff0c\u52a0\u4e0aPOOL\uff0c\u6700\u540e\u5f97\u5230\u4e865\u00d75\u00d716\u7684\u77e9\u9635\uff0cflatten\u540e\u5f97\u5230400\u5355\u4f4d\u7684\u7279\u5f81\uff0c\u4e4b\u540e\u5c31\u662fFC3\uff08\u524d\u9762\u5df2\u7ecf\u6709\u4e24\u5c42\uff09\u5c42\uff08\u7c7b\u4f3c\u4e8e\u9690\u85cf\u5c42\uff0cFC\u4e2d\u6bcf\u4e00\u4e2anode\u548c\u6240\u6709400\u7279\u5f81\u7ed3\u5408\uff09\uff0c\u4e4b\u540e\u662fFC4\uff0c\u6700\u540e\u752884\u4e2anodes\u53bb\u8fdb\u884csoftmax\u5f52\u7c7b\uff0c\u8f93\u51fa\u7ed3\u679c\u3002\u8fd9\u79cd\u6a21\u578b\u975e\u5e38\u7ecf\u5178\uff01</p> <p></p> <p>\u6709\u4e86CONV  POOL  FC\u4e09\u5f20\u724c\uff0c\u90a3\u4e48\u600e\u4e48\u6253\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u63a2\u7d22\u7684\u95ee\u9898\u3002\u5982\u4f55\u6709\u6548\u5b89\u6392\u5377\u79ef\u5c42\u6c60\u5316\u5c42\u548c\u5168\u8fde\u63a5\u5c42\u4ece\u800c\u5f62\u6210\u9ad8\u6548\u7684\u6a21\u578b\u4e00\u76f4\u4ee5\u6765\u662fCV\u4e2d\u7684\u7814\u7a76\u70ed\u95e8</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_31","title":"\u4e3a\u4f55\u5377\u79ef\u5982\u6b64\u9ad8\u6548\uff1f","text":"<p>reason 1 :  \u6211\u4eec\u6765\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5de6\u8fb9\u67093072\u4e2a\u53c2\u6570\uff0c\u53f3\u8fb9\u5f97\u5230\u7684\u7ed3\u679c\u67094704\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u7528\u6b63\u5e38\u5b66\u4e60\u65b9\u6cd5\u7684\u8bdd\uff0c\u5982\u679c\u6709\u4e00\u79cdmapping\uff0c\u90a3\u4e48\u53c2\u6570\u81f3\u5c113072\u00d74704\uff0c\u867d\u7136\u73b0\u5728\u8ba1\u7b97\u673a\u80fd\u5b66\u4e60\u51fa\u6765\uff0c\u4f46\u662f1000*1000\u7684\u7167\u7247\u7acb\u9a6c\u5e72\u788e\u8ba1\u7b97\u673a\u3002\u800c\u7528\u4e86\u5377\u79ef\u4e4b\u540e\uff0c\u53ea\u9700\u8981\uff085\u00d75\u00d73+1\uff09\u00d76 = 456\u4e2a\u53c2\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0mapping\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u91cc\u9762\u76841\u662fbias, \u6ca1\u9519\uff0c \u4e0d\u662f\u6bcf\u4e2az\u90fd\u914d\u81ea\u5df1\u7684b, \u800c\u662f\u50cf\u524d\u9762\u7684nn\u4e00\u6837\uff0cb\u53c2\u6570\u5e7f\u64ad\u5230\u6240\u6709w[l]a[l-1]</p> <p>reason 2 &amp; reason 3 \uff1a </p> <p></p> <p>reason2 :\u3000\u4e00\u4e2a\u7279\u5f81\u63d0\u53d6\u5668\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u5730\u65b9\uff0c\u800c\u4e0d\u5fc5\u8981\u5728\u4e0d\u540c\u7684\u533a\u57df\u91cd\u65b0\u5b66\u4e60\u4e00\u8fb9 \uff08\u6570\u636e\u5171\u4eab\uff09 </p> <p>reason3 :  \u7ed3\u679c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u90fd\u53ea\u548c9\u4e2a\u8f93\u5165\u7684\u53c2\u6570\u76f8\u5173\u8054\uff0c\u8fd9\u6070\u662f\u6211\u4eec\u5e0c\u671b\u7684\uff1b\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u63d0\u53d6\u8fd9\u4e2a\u7279\u5f81\u7684\u8fc7\u7a0b\u4e2d\u53d7\u5230\u5176\u4ed6\u53c2\u6570\u503c\u7684\u5f71\u54cd \uff08\u7a00\u758f\u8fde\u63a5\uff09</p> <p>\u611f\u6027\u8ba4\u77e5\uff1a\u9664\u4e0a\u9762\u4e09\u4e2a\u539f\u56e0\u4e4b\u5916\uff1a 1. conv\u7279\u5f81\u4ec5\u4ec5\u4ee3\u8868\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u51cf\u5c11\u8fc7\u62df\u5408\u548c\u566a\u58f0</p> <ol> <li>conv\u53ef\u4ee5\u6355\u6349\u504f\u79fb\u7684\u7279\u5f81\uff08\u7279\u5f81\u5e73\u79fb\u4e86\u4e00\u70b9\uff0c\u5377\u79ef\u90fd\u80fd\u5f88\u5feb\u53d1\u73b0\uff01\uff09</li> </ol>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#case-studies","title":"Case Studies(\u5b9e\u4f8b\u63a2\u7a76)","text":""},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#classic-networkslenet-5-alexnet-vgg","title":"Classic networks\u2014\u2014LeNet-5 AlexNet VGG","text":"<p>LeNet-5 : \u5728\u90a3\u4e2a\u5e74\u4ee3\uff0c\u8fd9\u4e2a\u8fd0\u7528\u573a\u666f\u4e4b\u4e00\u662f\u8bc6\u522b\u624b\u5199\u6570\u5b57\uff0c\u56e0\u6b64\u8f93\u5165\u7684\u56fe\u7247\u662f\u7070\u767d\u7684\uff0c\u56fe\u7247\u5c3a\u5bf8\u5982\u56fe\uff1b\u4e4b\u540e\u901a\u8fc7\u4e24\u6b21CONV-POOL\u7684Layer\u5904\u7406\uff0c\u5f97\u5230400\u4e2a\u7279\u5f81\uff0c\u6700\u540e\u901a\u8fc7FC3 FC4\u548csoftmax\u8f93\u51fa\u7c7b\u522b\u6982\u7387\u3002\u5f53\u7136\u6709\u5f88\u591a\u7ec6\u8282\uff1a\u5f53\u65f6\u4eba\u4eec\u8fd8\u4e0d\u5e38\u7528ReLU\uff0c\u66f4\u591a\u7684\u662f\u2014\u2014\u6b64\u5904\u4e5f\u662f\u2014\u2014sigmoid and tanh\uff1b\u751a\u81f3\u8fd9\u91cc\u8fd8\u8fd0\u7528\u4e86nonlinear pooling, \u5f53\u7136\u8fd9\u4e2a\u73b0\u5728\u4e0d\u5e38\u7528\u3002\u8fd9\u4e2a\u6a21\u578b\u5927\u698260000\u4e2a\u53c2\u6570\u8981\u5b66\u4e60</p> <p></p> <p>AlexNet : \u8fd9\u4e2a\u7f51\u7edc\u6a21\u578b\u66f4\u5938\u5f20\u4e86\uff0c\u670960000000\u4e2a\u53c2\u6570\u9700\u8981\u5b66\u4e60\uff1b\u53e6\u5916\uff0c\u8fd9\u4e2a\u6a21\u578b\u6b63\u5f0f\u4f7f\u7528\u4e86ReLU\u51fd\u6570\uff0c\u5e76\u4e14\u5f00\u521b\u6027\u5730\u5728\u4e24\u4e2aGPU\u4e0a\u9762\u8dd1\u8fd9\u4e2a\u6a21\u578b\uff1b\u8fd9\u4e2a\u6a21\u578b\u8fd8\u7528\u4e86LRN\uff08Local Response Normalization\uff09\u4f46\u5f88\u5c11\u7528\u4e86</p> <p></p> <p>VGG-16 \uff1a\u8fd9\u91cc\u9762\u5148CONV\uff0c\u518dsame pooling\uff0c\u4e4b\u540e\u518dmax pooling, \u670916\u5c42\uff1b\u5c3a\u5bf8\u7684\u4e0b\u964d\u548c\u901a\u9053\u6570\u7684\u589e\u52a0\u5448\u4e00\u5b9a\u89c4\u5f8b\uff1b\u8fd9\u4e2a\u6a21\u578b\u66f4\u52a0\u5e9e\u5927\uff0c\u67091.38\u4ebf\u7684\u53c2\u6570\u9700\u8981\u5b66\u4e60\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#resnet","title":"ResNet","text":"<p>\u6b8b\u5dee\u7f51\u7edc\u4e2d\u7684\u4e3b\u89d2\u662f\u6b8b\u5dee\u5757\uff08Residual Block\uff09, \u539f\u672ca[l+2]\u53ea\u548ca[l+1]\u6709\u5173\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u662fReLU function\uff09\uff0ca[l]\u7684\u4fe1\u606f\u60f3\u8981\u4f20\u5230[l+2]\u5c42\u9700\u8981\u8d70\u201cmain path\u201d\uff1b \u4f46\u662f\u73b0\u5728\u63d0\u4f9b\u4e86\u201cshort cut\u201d / \"skip connection\", \u4f7f\u5f97a[l]\u7684\u4fe1\u606f\u80fd\u591f\u76f4\u63a5\u5230\u8fbea[l+2]\uff1b\u5177\u4f53\u64cd\u4f5c\u4e2d\uff0c\u5148\u662fa[l+1]\u7b97\u51fa\uff0c\u4f20\u9012\u7ed9[l+2]\u5f97\u5230a[l+2], \u5728a[l]\u76f4\u63a5\u52a0\u5165\uff0c\u4e00\u8d77ReLU</p> <p></p> <p>\u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u6b8b\u5dee\u7f51\u7edc\u7684\u4f8b\u5b50\uff1a\u5982\u679c\u6ca1\u6709\u84dd\u7ebf\uff0c\u90a3\u4e48\u5c31\u662f\u666e\u901a\u7684\u795e\u7ecf\u7f51\u7edc\uff08Plain Network\uff09\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e86skip connection, \u90a3\u4e48\u2014\u2014\u4e3e\u4e2a\u4e0a\u56fe\u4e2d\u7684\u4f8b\u5b50\u2014\u2014\u8fd9\u4e2a\u7f51\u7edc\u5c31\u662f5\u4e2aresidual block\u6784\u6210\u7684residual network. \u8fd9\u5f88\u6709\u6548\u5730\u89e3\u51b3\u4e86\u7f51\u7edc\u5c42\u6570\u8fc7\u6df1\u800c\u5bfc\u81f4\u7684\u68af\u5ea6\u7206\u70b8\u548c\u68af\u5ea6\u6d88\u5931\uff0c\u5141\u8bb8\u6211\u4eec\u8bad\u7ec3\u5230\u5f88\u6df1\u7684\u5c42\u6570</p> <p>\u4e3a\u4ec0\u4e48residual network\u80fd\u591f\u5982\u6b64\u9ad8\u6548\u800c\u597d\u7528\uff1f </p> <p></p> <p>Let's assume one scenario: \u524d\u9762\u6709\u4e00\u4e2a\u7f51\u8def\uff0c\u5982\u679c\u6211\u6700\u540e\u52a0\u4e0a\u4e86\u4e00\u4e2aresidual block, \u90a3\u4e48\u901a\u8fc7\u5f0f\u5b50\u53ef\u4ee5\u77e5\u9053\uff1a\u5047\u5982\u8bf4\u6211\u8fd9\u4e00\u5c42\u5b66\u4e60\u7684\u5f88\u5dee\uff0cz[l+2] = 0\uff08\u6781\u7aef\u4f8b\u5b50\uff09\uff0c\u90a3\u4e48\u5982\u679c\u6ca1\u6709skip connection, \u90a3\u4e48\u8fd9\u4e00\u5c42\u7684\u5b66\u4e60\u5c31\u5f88\u574f\uff1b\u4f46\u662f\u5982\u679c\u6709skip connection, \u5728\u53d1\u751f\u8fd9\u79cd\u6781\u7aef\u4f8b\u5b50\u4e0b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6052\u7b49\u5f0f\u6765\u4fdd\u7559\u4e0ba[l]\u8fd9\u4e2a\u73cd\u8d35\u7684\u6570\u636e\uff0c\u800c\u65f6\u95f4\u4e5f\u8bc1\u660e\u4e86\uff0c\u8ba1\u7b97\u673a\u5b66\u4e60\u5230\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u6052\u7b49\u5f0f\uff08\u6781\u7aef\u60c5\u51b5\u4e0b\u65f6\uff09\u4e5f\u662f\u6bd4\u8f83\u5bb9\u6613\u5730\u3002\u56e0\u6b64\u6211\u4eec\u4fdd\u8bc1\u4e86\u52a0\u4e0a\u8fd9\u4e2aresidual block\u4e4b\u540e\u7f51\u7edc\u7684\u5b66\u4e60\u51c6\u786e\u5ea6\u4e0d\u4f1a\u53d7\u5f71\u54cd\uff0c\u751a\u81f3\u5b9e\u8df5\u8bc1\u660e\u5b66\u4e60\u6548\u7387\u8fd8\u53ef\u80fd\u9ad8\u4e00\u70b9\uff1b\u800c\u5982\u679c\u771f\u7684\u8fd9\u4e00\u4e2aresidual block\u8fd8\u5b66\u5230\u4e86\u989d\u5916\u7684\u65b0\u4e1c\u897f\uff0c\u90a3\u771f\u7684\u662f\u4e00\u9635\u610f\u60f3\u4e0d\u5230\u7684\u72c2\u559c\uff0c\u5c31\u4fdd\u7559\u4f4f\u4e86\u8fd9\u4e2a\u65b0\u5b66\u7684\u4e1c\u897f\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u77e9\u9635\u52a0\u6cd5\u8981\u4fdd\u8bc1\u7ef4\u5ea6\u76f8\u540c\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7f51\u7edc\u6a21\u578b\u4e2d\u6709\u5f88\u591a\"same\"\u5377\u79ef\uff0c\u4fdd\u8bc1\u4e86\u7ef4\u5ea6\u7684\u76f8\u540c\uff0c\u4f7f\u5f97\u76f8\u52a0\u80fd\u591f\u8fdb\u884c\uff1b\u5982\u679c\u7ef4\u5ea6\u4e0d\u76f8\u540c\u5462\uff1f \u524d\u9762\u4e58\u4ee5Ws\u77e9\u9635\uff0c\u5c06\u7ef4\u5ea6\u8fdb\u884c\u8f6c\u6362\uff0c\u800c\u8fd9\u4e2a\u77e9\u9635\u7684\u53c2\u6570\u6211\u4eec\u53ef\u4ee5\u8ba9\u7f51\u7edc\u53bb\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u81ea\u5df1\u8bbe\u5b9a\u7684\u4e00\u4e2afixed matrix, \u603b\u4e4b\u662f\u4fdd\u8bc1\u4e86\u7ef4\u5ea6\u7684\u76f8\u540c</p> <p></p> <p>\u90a3\u4e48\u4e0a\u9762\u5c31\u662fResNet-34\u7684\u793a\u610f\u56fe\uff0c\u6ce8\u610f\u5230\u5f88\u591asame CONV\u7528\u6765\u4fdd\u8bc1\u7ef4\u5ea6\u76f8\u540c\uff0c\u7136\u540e\u4e2d\u95f4\u4f1a\u6dfb\u52a0pooling\uff08/2\uff09\uff0c\u5927\u81f4\u662fconv-conv-...-pool-conv-...-conv-pool-...-FC(softmax)\uff0c \u8fd9\u548c\u4e4b\u524d\u7684\u7ecf\u5178\u4ea4\u9519\u6a21\u5f0f\u5f88\u4e0d\u4e00\u6837; \u90a3\u4e48\u8fd9\u6837\u7684\u7f51\u7edc\u5c31\u662fResNet, \u76f8\u6bd4\u4e8ePlain\u66f4\u597d\uff01</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#11","title":"1\u00d71\u5377\u79ef","text":"<p>\u554a\uff0c\u4f60\u8bf4\u4ec0\u4e48\uff1ffilter\u8fd8\u80fd\u662f1\u00d71\uff1f\u8fd9\u96be\u9053\u4e0d\u662f\u5f88\u641e\u7b11\u561b\uff1f\u6211\u4eec\u7528\u4e86filter\u662f\u4e3a\u4e86\u68c0\u6d4b\u7279\u5f81\uff0c1\u00d71\u80fd\u68c0\u6d4b\u4ec0\u4e48\u7279\u5f81\uff1f\u90a3\u4e48\u5377\u79ef\u64cd\u4f5c\u4e0d\u5c31\u662fscalar multiplication\u5417\uff1f</p> <p></p> <p>\u5f53\u7136\uff0cchannels\u4e3a1\u7684\u60c5\u51b5\u4e0b\u8fd9\u5f53\u7136\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff1b\u5728channels\u4e0d\u4e3a1\u7684\u60c5\u51b5\u4e0b\uff0c\u4f8b\u5982\u56fe\u4e2d\u7684\u6848\u4f8b\uff0c\u4e00\u4e2a1\u00d71\u00d732\u7684filter\u4f1a\u5f97\u5230\u4e00\u4e2a6\u00d76\u7684\u77e9\u9635\uff0c\u7136\u540e\u6709\u591a\u5c11\u79cd\u8fd9\u6837\u76841\u00d71\u5377\u79ef\u6838\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u7684channels\u5c31\u662f\u591a\u5c11\u3002\u8fd9\u4e2a1\u00d71\u5377\u79ef\u6838\u91cc\u9762\u53ef\u4ee5\u8bbe\u7f6e\u6743\u91cd\uff0c\u90a3\u4e48\u7528\u8fd9\u4e2a\u89c6\u89d2\u6765\u770b\uff0c\u8fd9\u79cd\u5377\u79ef\u6838\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u795e\u7ecf\u5143node, \u63a5\u53d7\u4e00\u4e2a\u4e2a\u4f4d\u7f6e\u768432\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u6309\u7167\u6743\u91cd\u8ba1\u7b97\uff0c\u6700\u7ec8\u8f93\u51fa\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e5f\u6210\u4e3anetwork to network\u3002</p> <p></p> <p>\u90a3\u4e48\u8fd9\u4e2a1\u00d71\u5377\u79ef\u6838\u7a76\u7adf\u6709\u4ec0\u4e48\u4f5c\u7528\u5462\uff1f\u4e4b\u524d\u63d0\u5230\uff0cpooling\u53ef\u4ee5\u51cf\u5c0fsize\uff0c\u4f46\u662fchannels\u4e0d\u53d7\u5f71\u54cd\uff1b\u4f46\u662f\u5982\u679c\u6211\u60f3\u51cf\u5c11channels\u6570\u91cf\u5462\uff1f\u90a3\u4e481\u00d71\u5c31\u662f\u4e00\u79cd\u624b\u6bb5\u4e86\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u51cf\u5c11\u8ba1\u7b97\u3002\u5f53\u7136\uff0c\u5982\u679c\u4e0d\u60f3\u6539\u53d8channels\uff0c\u90a3\u4e48\u8fd9\u79cd1\u00d71\u5377\u79ef\u6838\u5c31\u53ef\u4ee5\u89c6\u505a\u4e00\u4e2a\u6b63\u5e38\u7684\u3001\u7528\u6765\u62df\u5408\u6700\u7ec8\u51fd\u6570\u7684\u51fd\u6570\u3002\u518d\u8bf4\uff0c\u5982\u679c\u6211\u60f3\u8981\u589e\u52a0channels\u6570\u91cf\uff0c\u90a3\u4e481\u00d71\u5377\u79ef\u6838\u4f9d\u65e7\u53ef\u4ee5\u505a\u5230\uff0c\u53ea\u8981\u9009\u53d6\u81ea\u5df1\u5fc3\u4eea\u7684filter\u6570\u91cf\u5373\u53ef\u3002By the way, 1\u00d71\u5377\u79ef\u6838\u624b\u6cd5\u5728Inception\u7f51\u7edc\u4e2d\u6709\u5173\u952e\u4f5c\u7528\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#inception-network","title":"Inception Network","text":"<p>\u5728\u5377\u79ef\u7f51\u7edc\u4e2d\uff0c\u6709\u7684\u65f6\u5019\u4e0d\u77e5\u9053\u9009\u4ec0\u4e48filter\u597d\uff1f\u90a3\u4e48\u4e0d\u5982\u8ba9\u795e\u7ecf\u7f51\u7edc\u6765\u51b3\u5b9a\uff01</p> <p></p> <p>\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u4e09\u79cdfilter\u548c\u4e00\u79cdmax pooling\u90fd\u7528\u4e0a\u4e86\uff1b\u540c\u65f6\u5f53\u7136\u8981\u6ce8\u610f\u7ef4\u5ea6\uff0c\u56e0\u6b64CONV\u7c7b\u578b\u662fsame\uff1b\u7136\u540e\u63d0\u53d6\u5230\u7684\u7279\u5f81\u90fd\u5806\u53e0\u8d77\u6765\uff0c\u5e76\u4e14\u6309\u7167\u4e00\u5b9a\u6bd4\u4f8b\u5206\u914dchannels\u3002\u6700\u7ec8\u8ba9\u8ba1\u7b97\u673a\u7b97\u51fa\u90a3\u79cdfilter\u7684\u7ec4\u5408\u6bd4\u8f83\u597d\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u8ba1\u7b97\u6210\u672c\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u5149\u5149\u662f5\u00d75\u7684filter\u5377\u79ef\uff0c\u90fd\u89811.2\u4ebf\u6b21\u8ba1\u7b97\u3002\u5373\u4f7f\u662f\u5bf9\u4e8e\u73b0\u5728\u7684\u7b97\u529b\uff0c\u8fd9\u90fd\u662f\u96be\u4ee5\u63a5\u53d7\u7684\uff08\u8ba1\u7b97\u5f0f\u4e2d\uff0c\u524d\u9762\u4ee3\u8868\u6700\u7ec8\u5f97\u5230\u7684\u6570\u5b57\u6570\u91cf\uff0c\u4ee3\u8868\u4e86filter\u64cd\u4f5c\u6b21\u6570\uff0c\u540e\u9762\u4ee3\u8868\u7684\u662f\u4e00\u6b21filter\u64cd\u4f5c\u7684\u8ba1\u7b97\u6570\u91cf\uff09</p> <p>\u90a3\u4e48\u5982\u4f55\u7b80\u5316\u8ba1\u7b97\u6210\u672c\u5462\uff1f1\u00d71\u5377\u79ef\u7684\u51cf\u5c11channel\u6570\u91cf\u7684\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u5b9e\u73b0\uff1a</p> <p></p> <p>\u53d1\u73b0\u8fd9\u6837\u4e00\u6765\uff0c\u8ba1\u7b97\u91cf\u53d8\u6210\u4e861240\u4e07\uff0c\u5dee\u4e0d\u591a\u53d8\u6210\u4e86\u5341\u5206\u4e4b\u4e00</p> <p>\u90a3\u4e48\u6709\u4e86\u8fd9\u6837\u7684\u601d\u60f3\uff0c\u6765\u770b\u4e0binception\u7f51\u7edc\u7684\u7ed3\u6784\uff1a</p> <p></p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u6b21\u4e0a\u8ff0\u7f51\u7edc\u53ef\u4ee5\u5206\u4e3a\u4e00\u4e2a\u4e2a\u677f\u5757\uff0c\u4e00\u4e2a\u677f\u5757\u7684\u7ed3\u6784\u5982\u4e0a\u56fe\uff1a\u6ce8\u610f\u5230\u7528\u4e86\u5f88\u591a\u6b211\u00d71\u5377\u79ef\u7684\u624b\u6bb5\u6539\u53d8\u4e86channels\u6570\u91cf\u3002\u800c\u5728\u7f51\u7edc\u4e2d\u53ef\u4ee5\u53d1\u73b0\u6709\u51e0\u4e2a\u5206\u652f\uff0c\u8fd9\u4e9b\u5206\u652f\u90fd\u662f\u76f4\u63a5\u628a\u9690\u85cf\u5c42\u7684\u6570\u636e\u62ff\u6765\u8fdb\u884cFC\u6700\u540e\u901a\u8fc7softmax\u8f93\u51fa\u9884\u6d4b\u4e86\uff0c\u8fd9\u65e8\u5728\u8bf4\u660e\u8fd9\u6837\u7684\u7f51\u7edc\u7ed3\u6784\u80fd\u591f\u5f88\u597d\u7684\u6291\u5236\u8fc7\u62df\u5408</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#_32","title":"\u8fc1\u79fb\u5b66\u4e60","text":"<p>\u6709\u7684\u65f6\u5019\u4ece\u5934\u5f00\u59cb\u5b66\u4e60\u53c2\u6570\u6216\u8005\u662f\u642d\u5efa\u7f51\u7edc\u6846\u67b6\u662f\u4e00\u4ef6\u975e\u5e38\u56f0\u96be\u7684\u4e8b\u60c5\uff0c\u6216\u8005\u8bf4\u6211\u7684\u6570\u636e\u96c6\u975e\u5e38\u5c0f\uff0c\u4e0d\u8db3\u4ee5\u652f\u6301\u642d\u5efa\u975e\u5e38\u6df1\u7684\u7f51\u7edc\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8fc1\u79fb\u522b\u4eba\u5df2\u7ecf\u5b66\u4e60\u597d\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u7136\u540e\u62ff\u6765\u4f5c\u4e3a\u521d\u59cb\u5316\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u8282\u7701\u975e\u5e38\u591a\u7684\u65f6\u95f4</p> <p></p> <p>\u5047\u5982\u8bf4\u505a\u4e00\u4e2a\u732b\u732b\u5206\u7c7b\u5668\uff0c\u8f93\u51fa\u662ftigger\u8fd8\u662fmisty\u6216\u8005\u90fd\u4e0d\u662f\u3002\u4f46\u662f\u5173\u4e8e\u8fd9\u4e24\u79cd\u732b\u7684\u6570\u636e\u975e\u5e38\u5c11\uff0c\u56e0\u6b64\u642d\u5efa\u5927\u7f51\u7edc\u7ed3\u6784\u4e0d\u592a\u73b0\u5b9e\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u5176\u4ed6\u7f51\u7edc\u62ff\u8fc7\u6765\u2014\u2014\u5047\u5982\u8bf4\u662fImageNet\u7684dataset\u2014\u2014\u7136\u540e\u518d\u505a\u4e00\u4e9b\u6539\u8fdb\u2014\u2014\u5982\u5c06\u6700\u540e1000\u8f93\u51fa\u53ef\u80fd\u7684softmax\u6362\u6210\u8f93\u51fa\u4e09\u79cd\u60c5\u51b5\u7684softmax, \u7136\u540e\u8bad\u7ec3\u8fd9\u4e2asoftmax\u7684\u6743\u91cd\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528freeze\u53bb\u4fdd\u8bc1\u524d\u9762\u7ed3\u6784\u4e2d\u7684\u6743\u91cd\u4e0d\u6539\u53d8\u3002\u5982\u679c\u8bf4\u6211\u7684\u6570\u636e\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u4f46\u662f\u5c31\u662f\u4e0d\u60f3\u81ea\u5df1\u642d\u5efa\u7f51\u7edc\u7ed3\u6784\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8fd9\u4e2a\u7f51\u7edc\u7ed3\u6784\u62ff\u8fc7\u6765\u7136\u540e\u968f\u673a\u521d\u59cb\u5316\u53c2\u6570\u8fdb\u884c\u8bad\u7ec3\u2014\u2014\u4e00\u822c\u6765\u8bf4\uff0c\u6570\u636e\u91cf\u8d8a\u591a\uff0c\u9700\u8981freeze\u7684\u5c42\u6570\u8d8a\u5c11\u3002\u56e0\u4e3a\u6211\u4eec\u81ea\u5df1\u6709\u8db3\u591f\u591a\u7684\u6837\u672c\u70b9\u8ba9\u8ba1\u7b97\u673a\u53bb\u62df\u5408\u51fd\u6570\u4e86\u3002Transfer learning \u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u975e\u5e38\u5e38\u89c1\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#data-augmentation","title":"\u6570\u636e\u6269\u5145\uff08Data augmentation\uff09","text":"<p>\u8ba1\u7b97\u673a\u89c6\u89c9\u975e\u5e38\u9700\u8981\u6570\u636e\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u8fd9\u79cd\u6570\u636e\u4e00\u76f4\u4ee5\u6765\u4e0d\u662f\u975e\u5e38\u5145\u8db3\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u6570\u636e\u6269\u5145\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u624b\u6bb5</p> <p></p> <p>\u7b2c\u4e00\u7c7b\u5e38\u89c1\u7684\u624b\u6bb5\u5c31\u662f\u5bf9\u8fd9\u4e2a\u56fe\u7247\u7684\u201c\u56fe\u5f62\u201d\u8fdb\u884c\u6539\u53d8\uff0c\u4f8b\u5982\u955c\u50cf\u5bf9\u79f0\uff0c\u968f\u5373\u622a\u56fe\uff0c\u6216\u8005\u65cb\u8f6c\u3001sheering\u7b49\u7b49</p> <p></p> <p>\u7b2c\u4e8c\u79cd\u5e38\u89c1\u7684\u624b\u6bb5\u662f\u5bf9\u989c\u8272\u52a8\u624b\uff0c\u5bf9GRB channels\u7684\u6570\u503c\u8fdb\u884c\u6539\u53d8\uff0c\u4ece\u800c\u6a21\u4eff\u51fa\u2014\u2014\u4f8b\u5982\u9633\u5149\u6253\u5728\u4e86\u732b\u7684\u8eab\u4e0a\u2014\u2014\u8fd9\u79cd\u53ef\u80fd\u771f\u5b9e\u60c5\u666f\u4e0b\u7684\u732b\u7684\u56fe\u7247\uff0c\u4f46\u662f\u8fd9\u4e9b\u56fe\u7247\u90fd\u662f\u732b\u56fe</p> <p>\u5728\u5b9e\u6218\u4e2d\uff0c\u4e00\u822c\u53ef\u4ee5\u5728CPU\u4e2d\u5355\u72ec\u5f00\u4e00\u4e2a\u7ebf\u7a0b\uff08thread\uff09, \u8d1f\u8d23\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5b9a\u7684\u53d8\u5316\uff0c\u7136\u540e\u53d8\u5316\u540e\u7684\u6570\u636e\u90fd\u653e\u5728Mini batch\u91cc\u9762\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#object-detection","title":"\u76ee\u6807\u68c0\u6d4b\u2014\u2014Object detection","text":"<p>\u4e4b\u524d\u4e00\u76f4\u5b66\u4e60\u7684\u90fd\u662f\u5206\u7c7b\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d\u6211\u4eec\u4e0d\u4ec5\u5e0c\u671b\u80fd\u591f\u5bf9\u7269\u4f53\u8fdb\u884c\u5206\u7c7b\uff0c\u8fd8\u5e0c\u671b\u80fd\u5b9a\u4f4d\u8fd9\u4e2a\u7269\u4f53\u5728\u54ea\u91cc</p> <p>\u5148\u770b\u5173\u6ce8\u4e8e\u80cc\u666f\u4e2d\u7684\u4e00\u4e2a\u5f85\u68c0\u6d4b\u76ee\u6807\uff1a\uff08\u73b0\u5b9e\u573a\u666f\u4e2d\uff0c\u8981\u5173\u6ce8\u540c\u65f6\u591a\u4e2a\u76ee\u6807\uff09</p> <p></p> <p>\u5047\u5982\u8bf4\u662f\u5728\u9a7e\u9a76\u4efb\u52a1\u4e0b\uff0c\u90a3\u4e48\u8981\u5206\u7c7b\u7684\u53ef\u80fd\u5c31\u662f\u884c\u4eba\uff0c\u8f66\u8f86\uff0c\u975e\u673a\u52a8\u8f66\uff0c\u7b49\u7b49\u3002\u6ca1\u6709\u4ed6\u4eec\u7684\u8bdd\uff0c\u5c31\u8ba4\u4e3a\u662f\u6b63\u5e38\u80cc\u666f</p> <p>\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e0b\uff0c\u6211\u4eec\u7528\u8fd9\u6837\u4e00\u5957metrics\u6765\u5b9a\u4f4d\uff1abxby\u4ee3\u8868\u4e2d\u5fc3\u70b9\u7684\u4f4d\u7f6e\uff0cbwbh\u4ee3\u8868\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff1b\u540c\u65f6\u6ce8\u610f\uff0c\u6700\u5de6\u4e0a\u89d2\u548c\u6700\u53f3\u4e0b\u89d2\u5206\u522b\u4e3a\uff080\uff0c 0\uff09\uff081\uff0c 1\uff09\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u4e3a\u76d1\u7763\u5b66\u4e60\u4efb\u52a1\u5b9a\u4e49\u76ee\u7684\u6807\u7b7e\u5c31\u662f\u4e00\u4e2a\u5341\u5206\u5173\u952e\u7684\u95ee\u9898\u4e86\u3002</p> <p></p> <p>\u89c4\u5b9ay\u5982\u56fe\uff0c\u6ce8\u610f\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f1\u62160\uff0c\u7528\u6765\u51b3\u5b9a\u662f\u5426\u67091\u30012\u30013\u4e2d\u7684\u76ee\u6807\uff1b\u4e0b\u9762\u56db\u4e2a\u4f4d\u7f6e\u53c2\u6570\u548c\u4e09\u4e2a\u5206\u7c7b\u7684\u5404\u7ec4\u6982\u7387\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u635f\u5931\u51fd\u6570\u4e5f\u5982\u56fe\uff1a\uff08\u4f8b\uff09\u53ef\u4ee5\u662f\u5dee\u65b9\u6765\u8861\u91cf\uff0c\u5f53\u7136\u53ef\u4ee5\u66f4\u590d\u6742\u4e00\u4e0b\uff0c\u6bd4\u5982c1c2c3\u7528softmax\u800cpc\u7528logistic regression\u4e4b\u7c7b\u7684\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#landmark","title":"\u7279\u5f81\u70b9\uff08landmark\uff09\u68c0\u6d4b","text":"<p>\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u70b9\u5b9e\u73b0\u5f88\u591a\u4e8b\u60c5\uff0c\u4f8b\u5982\u6307\u51fa\u7ec6\u8282\uff08\u773c\u89d2\u5728\u54ea\u91cc\uff09\uff0c\u5e94\u7528\u7ec6\u8282\u7b49\u7b49\uff08\u6234\u7687\u51a0\uff0c\u5e26\u7684\u4f4d\u7f6e\uff1f\uff09\u3002\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5f81\u533a\u57df\uff0c\u4e00\u822c\u7528\u4e24\u4e2a\u7279\u5f81\u70b9\u6765\u4ee3\u8868\u3002\u5728Convnet\u4e2d\uff0c\u5e0c\u671b\u6700\u540e\u8f93\u51fa\u7684\u6709\u2014\u2014\u5047\u5982\u8bf4\u2014\u201464\u4e2a\u7279\u5f81\u4f4d\u7f6e\u548c\u662f\u5426\u6709\u4eba\u8138\uff0c\u90a3\u4e48\u8fd9\u4e2asoftmax\u4e2d\u6709129\u4e2a\u53ef\u80fd\uff0c\u7b2c\u4e00\u4e2a\u662f\u6709\u6ca1\u6709\u4eba\u8138\uff0c\u63a5\u4e0b\u6765\u5168\u90e8\u662f\u7279\u5f81\u70b9\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#object-detection_1","title":"Object Detection","text":"<p>\u7a97\u53e3\u6ed1\u52a8\u7b97\u6cd5\uff1a\u7528\u4e00\u4e2a\u5927\u5c0f\u7684\u6b63\u65b9\u5f62\u7a97\u53e3\u7136\u540e\u6309\u7167\u4e00\u5b9a\u6b65\u957f\u6ed1\u52a8\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5730\u65b9\u8fdb\u884c\u5377\u79ef\u8ba1\u7b97\uff0c\u8f93\u51fa1\u62160\uff1b\u7136\u540e\u4e00\u8f6e\u4e4b\u540e\uff0c\u7a97\u53e3\u53d8\u5927\uff0c\u7136\u540e\u7528\u53e6\u4e00\u4e2a\u6b65\u957f\u53bb\u8fdb\u884c\u6ed1\u52a8\u68c0\u6d4b\uff1b\u4e0d\u65ad\u8fd9\u6837\u4e0b\u53bb\uff0c\u4fdd\u8bc1\u603b\u6709\u5408\u9002\u5927\u5c0f\u7684\u7a97\u53e3\u68c0\u6d4b\u5230\u5b8c\u6574\u7684\u8f66\u3002</p> <p>\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8\u5230\u7206\u70b8\u3002\u90a3\u4e48\u5982\u4f55\u79d1\u5b66\u5730\u5b9e\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u5462\uff1f</p> <p>\uff08Convolutional implementation of sliding windows is the key\uff09</p> <p></p> <p>\u5728\u8fd9\u4e4b\u524d\uff0c\u6709\u4e00\u4e2a\u77e5\u8bc6\u70b9\u8981\u94fa\u57ab\u4e00\u4e0b\uff1a\u5982\u4f55\u5c06\u5168\u8fde\u63a5\u5c42\u8f6c\u6362\u4e3a\u5377\u79ef\u5c42\u5f62\u5f0f\uff1f \u90a3\u4e48\u5982\u56fe\u60f3\u5fc5\u7b54\u6848\u975e\u5e38\u6e05\u695a\u4e86\uff0c\u90a3\u5c31\u662f\u7528400\u79cd5\u00d75\uff08channel = 16\uff09\u7684filter\u53bb\u5377\u79ef\uff0c\u518d\u75284\u79cd1\u00d71\uff08channel = 400\uff09\u7684filter\u53bb\u904d\u5386\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5176\u5b9e\u662f\u7b49\u6548\u7684\uff0c\u56e0\u4e3afilter\u4e2d\u7684\u4e00\u4e2a\u4e2a\u53c2\u6570\u5176\u5b9e\u5c31\u662f\u5168\u8fde\u63a5\u6210\u4e2d\u7684\u53c2\u6570\u3002\u8fd9\u662f\u4e0d\u662f\u5f88\u5999\u5462\uff1f</p> <p></p> <p>\u90a3\u4e48\u73b0\u5728\u91c7\u7528\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u6211\u4eec\u5c1d\u8bd5\u8ba9\u6700\u540e\u7684\u5377\u79ef\u7684\u5bf9\u5e94\u4f4d\u7f6e\u5c31\u80fd\u591f\u5bf9\u5e94\u7b2c\u4e00\u6b21filter\uff08window\uff09\u7684\u611f\u53d7\u91ce\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u4e0d\u518d\u662f\u5c06\u4e00\u4e2a\u56fe\u7247\u5206\u5272\u6210\u5f88\u591a\u4e2a\u5b50\u56fe\u7247\uff0c\u800c\u662f\u6574\u4e2a\u56fe\u7247\u4f20\u8fdb\u53bb\uff0c\u6700\u540e\u7684\u5377\u79ef\u7ed3\u679c\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u80fd\u53cd\u5e94\u5bf9\u5e94\u7a97\u53e3\u7684\u611f\u53d7\u91ce\u7684\u7279\u5f81\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u662f\u6709\u70b9\u5c0f\u95ee\u9898\uff1a\u7531\u4e8efilter\u5927\u5c0f\u662f\u5b9a\u7684\uff0c\u90a3\u4e48\u4f4d\u7f6e\u7684\u68c0\u6d4b\u53ef\u80fd\u5c31\u5e76\u6ca1\u6709\u90a3\u4e48\u7cbe\u786e\u4e86\u3002\u6709\u6ca1\u6709\u6539\u8fdb\u5462\uff1f</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#bounding-box-prediction","title":"Bounding Box Prediction","text":"<p>\u5982\u4f55\u83b7\u5f97\u66f4\u7cbe\u786e\u7684\u4f4d\u7f6e\u6846\uff1f</p> <p>YOLO\u5b55\u80b2\u800c\u751f\uff0c\u4ee3\u8868\uff1aYou Only Look Once</p> <p></p> <p>YOLO\u7684\u4eae\u70b9\u5728\u4e8e\uff1a\u4e00\u4e2a\u7269\u4f53\u53ef\u80fd\u6a2a\u8de8\u5f88\u591a\u683c\u5b50\uff0c\u4f46\u662f\u4eba\u5de5\u6807\u6ce8\u4e4b\u540e\uff0c\u53d6\u8fd9\u4e2a\u6846\u7684\u4e2d\u5fc3\u70b9\uff0c\u7136\u540e\u8ba4\u4e3a\u70b9\u6240\u843d\u5728\u7684\u7f51\u683c\u7684\u5411\u91cf\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f1\u3002\u5728grid\u66f4\u52a0\u7cbe\u7ec6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u7269\u4f53\u7684\u4e2d\u5fc3\u70b9\u5728\u4e00\u4e2a\u6846\u5185\u7684\u6982\u7387\u5c31\u975e\u5e38\u5c0f\u4e86</p> <p></p> <p>\u6ce8\u610f\u5230bh bw\u4e24\u4e2a\u53c2\u6570\u53ef\u4ee5\u5927\u4e8e1\uff0c\u56e0\u4e3a\u5373\u4f7f\u662f\u5c0f\u683c\u5b50\u5de6\u4e0a\u89d2\u4e3a\uff080\uff0c0\uff09\u53f3\u4e0b\u89d2\u4e3a\uff081\uff0c1\uff09\uff0c\u8fd9\u4e2a\u8fb9\u6846\u4e5f\u80fd\u591f\u8d85\u51fa\u8fd9\u4e2a\u5c0f\u683c\u5b50\u3002\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528\u4f8b\u5982sigmoid function\u4e4b\u7c7b\u7684\u65b9\u6cd5\u5c06\u8fd9\u4e24\u4e2a\u53c2\u6570\u8303\u56f4\u9650\u5236\u57281\u4ee5\u5185\u3002\u5f53\u7136\u53c2\u6570\u5316\u65b9\u5f0f\u5f88\u591a\u3002</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#intersection-over-union","title":"\u4ea4\u5e76\u6bd4\uff08Intersection over union\uff09&amp; \u975e\u6781\u5927\u503c\u6291\u5236","text":"<p>\u5982\u4f55\u68c0\u6d4b\u76ee\u6807\u8bc6\u522b\u7b97\u6cd5\u662f\u5426\u8fd0\u884c\u826f\u597d\uff1f\u90a3\u4e48\u4ea4\u5e76\u6bd4\u51fd\u6570\u5c31\u80fd\u591f\u5e2e\u52a9\u8861\u91cf\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5426\u8868\u73b0\u826f\u597d\u3002</p> <p></p> <p>\u4ea4\u5e76\u6bd4\uff0c\u6070\u5982\u5b57\u9762\u610f\u601d\uff0c\u5c31\u662f\u4ea4\u53c9\u533a\u57df\u9664\u4ee5\u5e76\u96c6\u533a\u57df\u3002\u8fd9\u4e2a\u6bd4\u503c\u7528\u6765\u8861\u91cf\u76ee\u6807\u68c0\u6d4b\u7684\u8868\u73b0\u7a76\u7adf\u662f\u600e\u4e48\u6837\u3002\u6700\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u5b8c\u7f8e\u5b9a\u4f4d\uff0c\u90a3\u4e48\u6bd4\u503c\u5c31\u662f1\u3002\u5f53\u7136\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u822c\u8ba4\u4e3a\u9608\u503cthresold\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0.5\uff0c\u8fd9\u4e2a\u6570\u5b57\u4ee5\u4e0a\u5c31\u8ba4\u4e3a\u8868\u73b0\u5f97\u8fd8\u4e0d\u9519\uff08\u5f53\u7136\u6570\u503c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5730\u66f4stringent\u4e00\u70b9\uff09</p> <p></p> <p>\u90a3\u4e48\u5728\u843d\u5b9e\u201c\u8ba4\u4e3a\u4e2d\u5fc3\u70b9\u53ea\u843d\u5728\u4e00\u4e2a\u683c\u5b50\u201d\u5730\u65f6\u5019\uff0c\u73b0\u5b9e\u662f\u5468\u56f4\u5f88\u591a\u683c\u5b50\u90fd\u53ef\u80fd\u4f1a\u60f3\u6211\u8fd9\u91cc\u6709\u4e2a\u8f66\uff0c\u56e0\u6b64\u6211\u7684pc\u53c2\u6570\u5f88\u63a5\u8fd1\u4e8e1\uff0c\u56e0\u6b64\u6211\u4e5f\u5e94\u8be5\u7ed9\u51fa\u6211\u81ea\u5df1\u8fd9\u4e2a\u683c\u5b50\u9884\u6d4b\u7684\u6846\u7684\u4f4d\u7f6e\u3002\u4e3a\u4e86\u907f\u514d\u590d\u6742\u60c5\u51b5\uff0c\u76f4\u63a5\u53d6pc\u6700\u5927\u7684\u503c\u7684\u6846\uff0c\u800c\u653e\u5f03\u5176\u4ed6\u7684\u6846\u3002</p> <p></p> <p>\u5177\u4f53\u4e00\u70b9\u6765\u8bf4\uff0c\u5f88\u591a\u683c\u5b50\u90fd\u6709\u9884\u6d4b\uff0c\u9996\u5148pc\u4e0a\u9762\u8bbe\u7f6e\u9608\u503c\uff0c\u7136\u540e\u627epc\u6700\u5927\u503c\u7684\u9884\u6d4b\u6846\uff0c\u5269\u4e0b\u7684\u548c\u8fd9\u4e2a\u6846\u6bd4\u8f83\uff0c\u4ea4\u5e76\u6bd4\u5927\u4e8e0.5\u7684\u5168\u90e8\u53bb\u6389\uff08\u56e0\u4e3a\u8ba4\u4e3a\u6709\u8f83\u591a\u7684\u91cd\u53e0\uff0c\u53ef\u4ee5\u7b80\u5316\u6389\uff09</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#anchor-boxes","title":"Anchor Boxes","text":"<p>\u5982\u679c\u4e00\u4e2a\u683c\u5b50\u91cc\u9762\u80fd\u591f\u68c0\u6d4b\u51fa\u591a\u4e2a\u76ee\u6807\u5462\uff1f</p> <p></p> <p>\u6211\u4eec\u63d0\u524d\u8bbe\u5b9a\u597d\u51e0\u79cd\uff085-10\uff09anchor box\uff08\u8981\u8986\u76d6\u5230\u591a\u79cd\u60c5\u51b5\uff0c\u4f8b\u5982\u4eba\u7684anchor box\u5c31\u662f\u7626\u9ad8\u5f62\u72b6\uff0c\u8f66\u7684\u5c31\u662f\u5bbd\u5bbd\u7684\uff09\uff0c\u7136\u540e\u770b\u683c\u5b50\u7ed9\u51fa\u7684\u4e24\u79cd\u9884\u6d4b\u6846\u548c\u54ea\u79cdanchor box\u6709\u7740\u6700\u597d\u7684\u4ea4\u5e76\u6bd4\uff0c\u7136\u540e\u56e0\u6b64\u5c31\u5f52\u7c7b\u5230\u4e86\u4e0d\u540c\u7684anchor box\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u628a\u4e24\u4e2a\u6846\u90fd\u7ed9\u7406\u89e3\u4e3a\u4e00\u4e2a\u7269\u4f53\u7684\u6846\u7684\u4e24\u79cd\u53ef\u80fd\u60c5\u51b5\u4e86</p> <p></p> <p>\u5f53\u7136\u5982\u679c\u51fa\u73b0\u4e86\u4e24\u4e2a\u6846\u771f\u7684\u90fd\u548c\u4e00\u4e2aanchor box\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u5c31\u5f88\u96be\u5904\u7406\u4e86</p>"},{"location":"deeplearning_note/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%87%AA%E5%AD%A6.html#yolo","title":"YOLO\u6b63\u5f0f\u4ecb\u7ecd","text":"<p>\u6709\u4e86\u524d\u9762\u7684\u94fa\u57ab\uff0c\u6b63\u5f0f\u6765\u770bYOLO\u662f\u4ec0\u4e48\u4e1c\u897f\u3002\u8bad\u7ec3\u90e8\u5206\uff0c\u9996\u5148\uff08\u4f8b\u5b50\uff093\u00d73\u7f51\u683c\uff08filter\uff09\u94fa\u4e0a\uff0c\u7136\u540e\u8bad\u7ec3\u96c6\u7684\u5236\u4f5c\u4e0a\uff0c\u4e2d\u5fc3\u70b9\u6240\u843d\u5728\u7684\u7f51\u683c\u7684y\u5e94\u8be5pc_? = 1\uff0c \u7136\u540e\u5bf9\u5e94\u7684\u6846\u6846\u53c2\u6570\u90fd\u51c6\u5907\u597d\u3002\u6ce8\u610f\u52302\u00d78\u4ee3\u8868\u4ec0\u4e48\uff0c2\u4ee3\u8868anchor box\uff0c8\u4ee3\u8868\u4e00\u4e2a\u7c7b\u522b\u4f1a\u62e5\u6709\u7684\u53c2\u6570\uff0c\u8fd9\u91cc\u662f5+3\uff0cpc bxbybwbh + c1c2c3(\u6982\u7387)\u3002\u5b9e\u6218\u4e2d\uff0c\u66f4\u53ef\u80fd\u7684\u662f19\u00d719\u00d75\u00d78\u3002\u90a3\u4e48\u5377\u79ef\u7f51\u7edc\u8d1f\u8d23\u7684\u5c31\u662f\u628a\u4e00\u4e2aRGB\u4e09\u901a\u9053\u7684\u56fe\u7247\u8f6c\u5316\u4e3a3\u00d73\u00d716\uff08\u4f8b\u5b50\uff09\u3002</p> <p>\u90a3\u4e48\u5728\u9884\u6d4b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u8dd1\u4e00\u4e0b\u975e\u6700\u5927\u503c\u6291\u5236\u3002\u7efc\u5408\u6765\u8bf4\uff0cYOLO\u7b97\u6cd5\u5728\u68c0\u6d4b\u76ee\u6807\u4e0a\u662f\u5341\u5206\u6709\u6548\u7684\u3002</p> <p></p>"},{"location":"machine_learning/Datawhale/note.html","title":"Datawhale  X \u674e\u5b8f\u6bc5\u82f9\u679c\u4e66 AI\u590f\u4ee4\u8425","text":"<p>\u2014\u2014\u673a\u5668\u5b66\u4e60\u521d\u4f53\u9a8c</p>"},{"location":"machine_learning/Datawhale/note.html#_1","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":"<p>\u673a\u5668\u5b66\u4e60, \u5b66\u4e60\u7684\u7a76\u7adf\u662f\u4ec0\u4e48\u4e1c\u897f\u5462? \u6216\u8005\u8bf4, \u8ba9\u673a\u5668\u62e5\u6709\u5b66\u4e60\u4ec0\u4e48\u7684\u80fd\u529b\u5462? \u7b80\u800c\u8a00\u4e4b, \u673a\u5668\u5b66\u4e60\u5c31\u662f\u8ba9\u673a\u5668\u5177\u5907\u5bfb\u627e\u4e00\u4e2a\u51fd\u6570\u7684\u80fd\u529b. \u4f8b\u5982, \u6211\u4eec\u9700\u8981\u5224\u65ad\u8fd9\u5f20\u7167\u7247\u91cc\u9762\u6709\u6ca1\u6709\u732b, \u76f8\u5f53\u4e8e\u662f\u5c06\u4e00\u5f20\u7167\u7247\u8f93\u5165\u8fdb\u4eba\u8111, \u6700\u540e\u8f93\u51fa\u7684\u5c31\u662f\u4e00\u4e2a\u6570\u5b57: 1\u4ee3\u8868\u6709, 0\u4ee3\u8868\u6ca1\u6709. \u90a3\u4e48\u673a\u5668\u80fd\u4e0d\u80fd\u901a\u8fc7\u5b66\u4e60\u83b7\u5f97\u8fd9\u4e2a\u672c\u9886\u5417? \u7b54\u6848\u662f\u53ef\u4ee5\u7684. \u90a3\u4e48\u8fd9\u8bad\u7ec3\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u8bad\u7ec3\u4e86\u4e00\u4e2a\u51fd\u6570, \u8f93\u5165\u7684\u662f\u4e00\u5f20\u7167\u7247, \u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u6570\u5b57, \u7528\u6765\u5224\u65ad\u7167\u7247\u91cc\u9762\u6709\u6ca1\u6709\u732b. \u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50, AlphaGo\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570, \u8f93\u5165\u7684\u662f\u76ee\u524d\u4e3a\u6b62\u53cc\u65b9\u7684\u843d\u5b50, \u8f93\u51fa\u662f\u4e0b\u4e00\u6b65\u68cb\u5e94\u8be5\u843d\u5728\u7684\u4f4d\u7f6e. \u6216\u8005more specifically, \u5e94\u8be5\u662f\u4e0b\u4e00\u6b65\u68cb\u5728\u6bcf\u4e00\u4e2a\u7a7a\u4f4d\u7f6e\u7684\u83b7\u80dc\u53ef\u80fd\u6027, \u7136\u540e\u9009\u62e9\u53ef\u80fd\u6027\u6700\u5927\u7684.</p> <p>\u5f53\u7136, \u51fd\u6570\u7684\u7c7b\u578b\u4e5f\u6709\u53ef\u80fd\u53d8\u6362, \u800c\u968f\u7740\u5bfb\u627e\u51fd\u6570\u7684\u4e0d\u540c, \u673a\u5668\u5b66\u4e60\u4e5f\u5206\u4e3a\u4e0d\u540c\u7684\u7c7b\u522b. \u5047\u5982\u8bf4\u51fd\u6570\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u6570\u503c, \u4e00\u4e2a\u6807\u91cf(scalar), \u90a3\u4e48\u673a\u5668\u5b66\u4e60\u7684\u4efb\u52a1\u5c31\u79f0\u4e3a\u56de\u5f52(regression). \u4e3e\u4e00\u4e2a\u4f8b\u5b50: \u673a\u5668\u8981\u9884\u6d4b\u672a\u6765\u4e00\u4e2a\u65f6\u95f4\u7684PM2.5\u503c, \u8fd9\u4e2a\u51fd\u6570\u8f93\u5165\u7684\u662f\u79cd\u79cd\u548cPM2.5\u503c\u6709\u5173\u7684\u6307\u6570, \u4f8b\u5982\u8bf4\u4eca\u5929\u7684PM2.5\u503c, \u5e73\u5747\u6e29\u5ea6, \u5e73\u5747\u7684\u81ed\u6c27\u6d53\u5ea6\u7b49, \u8f93\u51fa\u7684\u5c31\u662f\u660e\u5929\u4e2d\u5348\u7684PM2.5\u503c.</p> <p>\u53e6\u5916\u4e00\u4e2a\u5e38\u89c1\u7684\u4efb\u52a1\u662f\u5206\u7c7b(classification). \u4eba\u7c7b\u5148\u51c6\u5907\u597d\u4e00\u4e9b\u9009\u9879, \u8fd9\u4e9b\u9009\u9879\u79f0\u4e3a\u7c7b\u522b, \u90a3\u4e48\u51fd\u6570\u7684\u8f93\u51fa\u5c31\u662f\u4ece\u8bbe\u5b9a\u7684\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u5f53\u4f5c\u8f93\u51fa. \u4f8b\u5982\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b, \u5224\u65ad\u7167\u7247\u4e2d\u5b58\u5728\u7684\u52a8\u7269\u662f\u732b, \u72d7, \u4ed3\u9f20, \u8fd8\u662f\u5176\u4ed6.\u53e6\u5916, \u9664\u4e86\u56de\u5f52\u548c\u5206\u7c7b, \u8fd8\u6709\u7ed3\u6784\u5316\u5b66\u4e60(structured learning). \u673a\u5668\u4e0d\u662f\u8f93\u51fa\u4e00\u4e2a\u6570\u5b57\u6216\u8005\u662f\u9009\u62e9\u4e00\u4e2a\u9009\u9879, \u800c\u662f\u4ea7\u751f\u4e00\u4e2a\u6709\u7ed3\u6784\u7684\u7269\u4f53, \u4f8b\u5982\u673a\u5668\u5199\u4e00\u7bc7\u6587\u7ae0.</p> <p>\u90a3\u4e48\u673a\u5668\u662f\u5982\u4f55\u5b66\u4e60\u4e00\u4e2a\u51fd\u6570\u7684\u5462? </p> <p>\u7b2c\u4e00\u6b65: \u5199\u51fa\u4e00\u4e2a\u5e26\u6709\u4f4d\u7f6e\u53c2\u6570\u7684\u51fd\u6570, \u5e0c\u671b\u5b83\u80fd\u591f\u7528\u6765\u5b9e\u73b0\u6211\u6240\u6709\u5e0c\u671b\u5b9e\u73b0\u7684\u529f\u80fd, \u4f8b\u5982:  \u90a3\u4e48w b\u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u672a\u77e5\u7684, \u7136\u540ex\u662f\u8f93\u5165\u7684\u53d8\u91cf, \u6700\u540e\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u6574\u6570, \u56e0\u6b64\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u56de\u5f52. \u4e0a\u9762\u8fd9\u4e2a\u5e26\u6709\u672a\u77e5\u53c2\u6570(parameter)\u7684\u51fd\u6570\u5c31\u79f0\u4e3a\u6a21\u578b(model). \u800c\u8fd9\u4e2ax\u5c31\u79f0\u4e3a\u7279\u5f81(feature), w\u79f0\u4e3a\u6743\u91cd(weight), b\u79f0\u4e3a\u504f\u7f6e(bias).</p> <p>\u7b2c\u4e8c\u6b65: \u5b9a\u4e49\u635f\u5931(loss). \u8fd9\u4e2a\u635f\u5931\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570, \u56e0\u6b64\u5e38\u79f0\u4e4b\u4e3a\u635f\u5931\u51fd\u6570, \u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u7684\u610f\u4e49\u5c31\u662f\u7528\u6765\u8861\u91cf\u673a\u5668\u76ee\u524d\u9009\u62e9\u7684\u6743\u91cd\u548c\u504f\u7f6e\u6709\u591a\u5408\u7406. \u56e0\u6b64\u635f\u5931\u51fd\u6570\u4e3a:   \u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u7684\u51fd\u6570. \u5728\u5b9e\u6218\u4e2d, \u5047\u5982\u8bf4\u8bad\u7ec3\u51fa\u6765\u4e00\u4e2a\u6743\u91cd\u4e00\u4e2a\u504f\u7f6e, \u90a3\u4e48\u5c31\u4f1a\u7528\u9886\u57df\u77e5\u8bc6(domain knowledge)\u5b9e\u9645\u7684instance\u6765\u5e26\u5165: \u4f8b\u5982\u8fd9\u91cc\u5c31\u662f\u8f93\u5165\u771f\u5b9e\u7684x, \u7136\u540e\u6bd4\u8f83\u4e00\u4e0b\u8f93\u51fa\u7684y\u548c\u771f\u5b9e\u7684y. \u5982\u4f55\u6bd4\u8f83\u5462? \u5e38\u89c1\u7684\u6709:   </p> \\[ e = (\\hat{y} - y)^2\\hspace{1cm}\u5747\u65b9\u8bef\u5dee(MSE) \\] <p>\u5728\u6709\u4e9b\u4efb\u52a1\u4e2d, y\u662f\u6982\u7387\u5206\u5e03, \u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u53ef\u80fd\u4f1a\u9009\u62e9\u4ea4\u53c9\u71b5(cross entropy loss). </p> <p>\u5728\u4e4b\u524d\u4e3e\u7684\u4f8b\u5b50\u4e2d, \u4e0d\u540c\u7684\u6743\u91cd\u548c\u504f\u7f6e\u6839\u636e\u9886\u57df\u77e5\u8bc6\u7684\u8f93\u5165\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u8f93\u51fa, \u6211\u4eec\u53ef\u4ee5\u753b\u4e00\u4e2a\u56fe\u6765\u8bb0\u5f55\u4e0bw b\u6240\u5bf9\u5e94\u7684Loss, \u5982\u4e0b: </p> <p></p> <p>\u5728\u8fd9\u5f20\u56fe\u4e2d, \u753b\u51fa\u6765\u7684\u7b49\u9ad8\u7ebf\u79f0\u4e3a\u8bef\u5dee\u8868\u9762(error surface), \u5728\u8fd9\u6761\u7b49\u9ad8\u7ebf\u4e0a, \u5904\u5904\u7684loss\u90fd\u662f\u76f8\u540c\u7684. \u90a3\u4e48\u6709\u4e86loss\u6765\u8861\u91cf\u76ee\u524d\u6743\u91cd\u548c\u504f\u7f6e\u7684\"\u8d28\u91cf\u5982\u4f55\", \u90a3\u4e48\u5982\u4f55\u66f4\u65b0\u8fd9\u4e9b\u53c2\u6570\u5462? </p> <p>\u9644: \u5b9e\u6218\u4e2d, \"\u9886\u57df\u77e5\u8bc6\u7684\u8f93\u5165\"\u5177\u4f53\u6765\u8bf4\u662f\u5728\u8bad\u7ec3\u7684\u65f6\u5019, \u8f93\u5165\u8bad\u7ec3\u96c6\u7684\u8f93\u5165, \u5f97\u5230\u5bf9\u5e94\u7684\u7ed3\u679c, \u7136\u540e\u6839\u636e\u8bad\u7ec3\u96c6\u7684ground truth, \u4ee5loss\u7684\u65b9\u5f0f\u8fdb\u884c\u76d1\u7763\u8bad\u7ec3 </p> <p>\u7b2c\u4e09\u6b65: \u89e3\u4e00\u4e2a\u6700\u4f18\u5316\u7684\u95ee\u9898. \u4e3a\u4e86\u66f4\u65b0\u53c2\u6570, \u6211\u4eec\u9700\u8981\u5bf9\u504f\u7f6e\u548c\u6743\u91cd\u8fdb\u884c\u52a0\u52a0\u51cf\u51cf, \u90a3\u4e48\u4f9d\u636e\u662f\u4ec0\u4e48\u5462? \u80af\u5b9a\u9700\u8981\u5229\u7528\u4e0a\u4e4b\u524d\u7b97\u51fa\u6765\u7684Loss\u51fd\u6570. \u6211\u4eec\u7ecf\u5e38\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d(gradient descent)\u6765\u8fdb\u884c\u4f18\u5316. \u9996\u5148\u6211\u4eec\u8003\u8651\u9996\u5148\u66f4\u65b0\u6743\u91cd, \u800c\u4e0d\u662f\u504f\u7f6e. \u5982\u679cbias\u89c6\u4e3a\u5e38\u6570, \u90a3\u4e48\u635f\u5931\u51fd\u6570\u5c06\u4f1a\u662f\u5173\u4e8ew\u7684\u51fd\u6570, \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\\(L-W\\)\u7684\u51fd\u6570\u56fe\u50cf. \u5728\u76ee\u524d\u7684w\u4e0b, \u4f1a\u6709\u5bf9\u5e94\u7684\u659c\u7387,  \u6211\u4eec\u9700\u8981\u6839\u636e\u8fd9\u4e2a\u659c\u7387\u6765\u66f4\u65b0w\u7684\u6570\u503c. \u6211\u4eec\u4f7f\u7528\u516c\u5f0f\u5982\u4e0b:   \u5728\u56fe\u4e2d\u7684\u76f4\u89c2\u8868\u793a\u5c31\u662f: </p> <p></p> <p>\u5728\u4e0a\u8ff0\u7684\u516c\u5f0f\u4e2d, \\(\\eta\\)\u662f\u4e00\u4e2a\u81ea\u5df1\u8bbe\u7f6e\u7684\u53c2\u6570, \u53eb\u505a\u5b66\u4e60\u7387(learning rate). \u8fd9\u4e0d\u662f\u673a\u5668\u81ea\u5df1\u627e\u51fa\u6765\u7684, \u56e0\u6b64\u8981\u548c\u88ab\u79f0\u4e3a\u8d85\u53c2\u6570(hyperparameter). \u90a3\u4e48\u4e00\u6b65\u4e00\u6b65, \u6211\u4eec\u5e0c\u671bw\u80fd\u591f\u53d6\u4e2d\u4f4e\u70b9. \u4f46\u662f\u5728\u4e0a\u9762\u8fd9\u4e2a\u56fe\u4e2d, \u6211\u4eec\u770b\u5230: \u6709\u5c40\u90e8\u6700\u5c0f\u503c\u548c\u5168\u5c40\u6700\u5c0f\u503c. \u5982\u679c\u5148\u5230\u8fbe\u4e86\u5c40\u90e8\u6700\u5c0f\u503c, \u90a3\u4e48\u659c\u7387\u51e0\u4e4e\u4e3a\u96f6, \u6b65\u957f\u51e0\u4e4e\u4e3a\u96f6, \u8fd9\u4e0d\u5c31\u662f\u610f\u5473\u7740w\u7684\u53d6\u503c\u6c38\u8fdc\u505c\u5728\u4e86\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u9636\u6bb5\u5417? \u4f46\u662f\u4e8b\u5b9e\u4e0a\u5c40\u90e8\u6700\u5c0f\u503c\u662f\u4e00\u4e2a\u5047\u95ee\u9898, \u56e0\u4e3a\u635f\u5931\u51fd\u6570\u6211\u4eec\u4f1a\u6545\u610f\u8bbe\u8ba1\u6210\u51f8\u51fd\u6570, \u4ece\u800c\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u7a7a\u95f4\u6ca1\u6709\u5f2f\u66f2, \u5c40\u90e8\u6700\u4f4e\u70b9\u5c31\u662f\u5168\u5c40\u6700\u4f4e\u70b9. \u5728\u4e24\u4e2a\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d, \u5176\u5b9e\u548c\u4e4b\u524d\u4e00\u4e2a\u53c2\u6570\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c, \u56e0\u6b64\u53ef\u4ee5\u63a8\u5e7fbias\u53c2\u6570\u7684\u66f4\u65b0. \u5728Pytorch\u4e2d, \u68af\u5ea6\u56de\u4f20\u4f1a\u81ea\u52a8\u5e2e\u5fd9\u8ba1\u7b97.</p>"},{"location":"machine_learning/Datawhale/note.html#_2","title":"\u7ebf\u6027\u6a21\u578b","text":""},{"location":"machine_learning/Datawhale/note.html#_3","title":"\u57fa\u672c\u6982\u5ff5\u539f\u7406","text":"<p>\u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u4f7f\u7528\u7684\u51fd\u6570\u662f\uff1a \\(\\(y = kx + b\\)\\)\u7528\u6765\u62df\u5408\u6570\u636e\uff1b\u90a3\u4e48\u6211\u80fd\u4e0d\u80fd\u8003\u8651\u66f4\u590d\u6742\u7684\u60c5\u51b5\uff0c\u5373\u8bbe\u8ba1\u66f4\u590d\u6742\u7684\u51fd\u6570\u5462\uff1f\u5f53\u7136\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u8bbe\u8ba1\u4e0a\u6709\u5927\u5b66\u95ee\uff1a</p> <p>\u5047\u5982\u8bf4\u6211\u8bbe\u8ba1\uff1a\\(y = \\sum_{i=1}^{t}k_i+\\sum_{i=1}^{t}b_i\\), \u76f8\u5f53\u4e8e\u662f\\(\\overline{y}=\\sum_{i=1}^{t}y_i\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u771f\u7684\u80fd\u62df\u5408\u5230\u66f4\u591a\u7684\u4fe1\u606f\u5417\uff1f\u4e8b\u5b9e\u4e0a\u662f\u4e0d\u80fd\u7684\uff0c\u56e0\u4e3a\u4e8b\u5b9e\u4e0a\u6c42\u5bfc\u516c\u5f0f\u4f9d\u7136\u662f\\(w^1 \\leftarrow w^0 - \\eta \\frac{\\partial L}{\\partial W}\\Bigg|_{w=w^0}\\)\uff0c\u90a3\u4e48\u7ad9\u5728gradient descent\u7684\u89d2\u5ea6\u4e0a\uff0c\u6839\u672c\u5c31\u662f\u6362\u6c64\u4e0d\u6362\u836f\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u201c\u6ca1\u6709\u5f15\u5165\u975e\u7ebf\u6027\u6027\u201d\uff0c\u800c\u201c\u628a\u8f93\u5165\u7684\u7279\u5f81x\u4e58\u4e0a\u4e00\u4e2a\u6743\u91cd\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u504f\u7f6e\u5c31\u5f97\u5230\u9884\u6d4b\u6548\u679c\u201d\u7684\u6a21\u578b\u79f0\u4e3a\u7ebf\u6027\u6a21\u578b\uff08linear model\uff09\u3002\u7ebf\u6027\u6a21\u578b\u6709\u5f88\u5927\u7684\u9650\u5236\uff0c\u8fd9\u4e00\u79cd\u6765\u81ea\u4e8e\u6a21\u578b\u7684\u9650\u5236\u79f0\u4e3a\u6a21\u578b\u7684\u504f\u5dee\uff0c\u65e0\u6cd5\u6a21\u62df\u771f\u5b9e\u7684\u60c5\u51b5\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u5f15\u5165\u975e\u7ebf\u6027\u6027\u5462\uff1f\u4e0d\u59a8\u4ece\u7b80\u5355\u7684\u89d2\u5ea6\u8fdb\u884c\u601d\u8003\uff1a\u80fd\u4e0d\u80fd\u5728\u7ebf\u6027\u6a21\u578b\u4e0a\u5f15\u5165\u975e\u7ebf\u6027\u6027\u5462\uff1f\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5206\u6bb5\u7ebf\u6027\u66f2\u7ebf\u3002\u4e0d\u59a8\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u975e\u7ebf\u6027\u51fd\u6570\uff1a\u5f53 x \u8f74\u7684\u503c\u5c0f\u4e8e\u67d0\u4e00\u4e2a\u9608\u503c\uff08\u67d0\u4e2a\u5b9a\u503c\uff09\u7684\u65f6\u5019\uff0c\u5927\u4e8e\u53e6\u5916\u4e00\u4e2a\u5b9a\u503c\u9608\u503c\u7684\u65f6\u5019\uff0c\u4e2d\u95f4\u6709\u4e00\u4e2a\u659c\u5761\uff1b\u6240\u4ee5\u5b83\u662f\u5148\u6c34\u5e73\u7684\uff0c\u518d\u659c\u5761\uff0c\u518d\u6c34\u5e73\u7684\u3002\u66f4\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u79cd\u51fd\u6570\u53eb\u505ahard sigmoid\u51fd\u6570\uff0c\u6df1\u5ea6\u5b66\u4e60\u4e2dpytorch\u5177\u4f53\u5b9a\u4e49\u5982\u4e0b\uff1a  \u8fd9\u5176\u5b9e\u5f88\u50cfReLU(Rectified Linear Unit)\u7684\u53d8\u4f53\u3002\u90a3\u4e48\u901a\u8fc7\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff0c\u53ef\u4ee5\u76f4\u89c2\u7684\u770b\u51fa\uff1a\u4e3a\u4ec0\u4e48\u4e00\u5806\u8fd9\u79cd\u975e\u7ebf\u6027\u51fd\u6570\u53ef\u4ee5\u62df\u5408\u5404\u79cd\u5404\u6837\u7684\u51fd\u6570\uff1a</p> <p></p> <p>\u5206\u6bb5\u7ebf\u6027\u66f2\u7ebf\u5c31\u53ef\u4ee5\u903c\u8fd1\u8fd9\u4e00\u4e2a\u8fde\u7eed\u7684\u66f2\u7ebf\uff0c\u5c31\u53ef\u4ee5\u903c\u8fd1\u6709\u89d2\u5ea6\u7684\u3001\u6709\u5f27\u5ea6\u7684\u8fd9\u4e00\u6761\u66f2\u7ebf\u3002 \u6240\u4ee5\u53ef\u4ee5\u7528\u5206\u6bb5\u7ebf\u6027\u66f2\u7ebf\u53bb\u903c\u8fd1\u4efb\u4f55\u7684\u8fde\u7eed\u7684\u66f2\u7ebf\uff0c\u800c\u6bcf\u4e2a\u5206\u6bb5\u7ebf\u6027\u66f2\u7ebf\u90fd\u53ef\u4ee5\u7528\u4e00\u5927\u5806\u84dd\u8272\u7684\u51fd\u6570\u7ec4\u5408\u8d77\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u84dd\u8272\u51fd\u6570\u628a\u5b83\u52a0\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u53d8\u6210\u4efb\u4f55\u8fde\u7eed\u7684\u66f2\u7ebf\u3002</p> <p>\u5f53\u7136\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684\u975e\u7ebf\u6027\u6027\u51fd\u6570\u4e0d\u6b62\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\u3002\u6bd4\u5982sigmoid\uff1a  \u5b83\u7684\u56fe\u50cf\u548chard sigmoid\u7684\u56fe\u50cf\u5982\u4e0b\uff0c\u80fd\u591f\u76f4\u89c2\u770b\u5230\uff0c\u4e3a\u4ec0\u4e48hard sigmoid\u79f0\u4e3a\"hard\"\u4e86\uff1a</p> <p></p> <p>\u8fd9\u91cc\u5229\u7528b w c\u53c2\u6570\u53ef\u4ee5\u63a7\u5236sigmoid\u51fd\u6570\u7684\u5f62\u72b6\u3002\u5176\u4e2d\uff0cw\u53ef\u4ee5\u63a7\u5236\u201c\u659c\u7387\u201d\uff0cb\u53ef\u4ee5\u63a7\u5236\u504f\u79fb\u91cf\uff0cc\u53ef\u4ee5\u63a7\u5236\u9ad8\u5ea6\u3002\u5177\u4f53\u6548\u679c\u5982\u4e0b\uff1a </p> <p></p> <p>\u53ef\u60f3\u800c\u77e5\uff0c\u628a\u5404\u79cd\u4e0d\u4e00\u6837\u7684sigmoid\u51fd\u6570\u53e0\u52a0\u8d77\u6765\uff0c\u5c31\u80fd\u591f\u53bb\u903c\u8fd1\u5404\u79cd\u4e0d\u540c\u7684\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff0c\u800c\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\u53ef\u7528\u6765\u8fd1\u4f3c\u5404\u79cd\u4e0d\u540c\u7684\u8fde\u7eed\u51fd\u6570\u3002\u6240\u4ee5\u6362\u800c\u8a00\u4e4b\uff0c\u4e0d\u540c\u7684sigmoid\u51fd\u6570\u53e0\u52a0\u8d77\u6765\u53ef\u4ee5\u62df\u5408\u5404\u79cd\u8fde\u7eed\u7684\u51fd\u6570\u3002</p>"},{"location":"machine_learning/Datawhale/note.html#_4","title":"\u77e9\u9635\u8868\u793a","text":"<p>\u5047\u5982\u8bf4\u7528\u4e09\u4e2ahard sigmoid\u51fd\u6570\u6765\u8fdb\u884c\u62df\u5408\uff1a</p> <p></p> <p>\u90a3\u4e48\u6362\u4e00\u4e2a\u7b80\u5355\u7684scenario\uff1a\u4f7f\u7528\u4e09\u4e2asigmoid function\u8fdb\u884c\u62df\u5408\u3002\u8003\u8651\u4e09\u4e2a\u6570\u636e\u5582\u8fdb\u53bb\uff1a \\((x_i,y_i)\\hspace{0.3cm}i=1,2,3\\), \u90a3\u4e48\u6211\u5c31\u5e0c\u671b\u80fd\u591f\u627e\u5230\u5408\u9002\u7684\\(b_i\\)\u548c\\(w_{ij}\\)\uff08\u4ee3\u8868\u7b2ci\u4e2asigmoid\u91cc\u9762\u4e58\u7ed9\u7b2cj\u4e2a\u7279\u5f81\u7684\u6743\u91cd\uff09\u3002\u9996\u5148\u5bf9\u6570\u636e\u8fdb\u884c\u6743\u91cd\u5206\u914d\uff08\u6216\u8005\u8bf4\uff0c\u5bf9\u7279\u5f81\u5206\u914d\u6743\u91cd\uff0c\u8fd9\u65f6\u5019\u90fd\u8fd8\u662f\u7ebf\u6027\u64cd\u4f5c\uff09  \u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u77e9\u9635\u5c31\u6392\u5f97\u4e0a\u7528\u573a\u4e86\uff1a  \u5728\u8fd9\u91cc\uff1a\\(r = b + Wx\\), \u4e4b\u540e\u7ecf\u8fc7sigmoid\u51fd\u6570\u4ee5\u5f15\u5165\u975e\u7ebf\u6027\u6027\u3002\uff08\u8fd9\u4e00\u6b65\u53c8\u79f0\u4e3a\uff1a\u7ecf\u8fc7\u6fc0\u6d3b\u51fd\u6570\uff09\uff0c\u8868\u793a\u4e3a\uff1a\\(a = \\sigma(r)\\)</p> <p></p> <p>\u5f15\u5165\u4e86\u975e\u7ebf\u6027\u6027\uff0c\u6700\u540e\u7684\u4e09\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\u4e5f\u5e94\u8be5\u53c8\u6743\u91cd\u5206\u914d\uff0c\u56e0\u6b64\u5f15\u5165\u7ebf\u6027\u6027\u5206\u914d\u4e09\u4e2a\u975e\u7ebf\u6027\u6027\u51fd\u6570\u7684\u6743\u91cd\uff0c\u5e76\u914d\u4e0a\u504f\u7f6e\uff1a\\(y=b+\\textbf{c}^{T}\\textbf{a}\\)</p> <p></p> <p>\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u628a\u6240\u6709\u7684\u672a\u77e5\u53c2\u6570\u90fd\u8fdb\u884c\u62fc\u63a5\uff0c\u7528\\(\\theta\\)\u8868\u793a\u3002</p> <p></p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u4e09\u4e2asigmoid\u51fd\u6570\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u53ef\u4ee5\u9009\u62e9\u5f88\u591a\u4e2asigmoid\u51fd\u6570\uff0c\u5b83\u7684\u6570\u91cf\u5176\u5b9e\u4e5f\u662f\u8d85\u53c2\u6570\u3002\u4e00\u822csigmoid\u8d8a\u591a\u53ef\u4ee5\u4ea7\u751f\u6709\u8d8a\u591a\u6bb5\u7ebf\u7684\u5206\u6bb5\u7ebf\u6027\u51fd\u6570\uff0c\u53ef\u4ee5\u903c\u8fd1\u8d8a\u590d\u6742\u7684\u51fd\u6570\u3002</p>"},{"location":"machine_learning/Datawhale/note.html#_5","title":"\u5b9a\u4e49\u635f\u5931\u3001\u4f18\u5316\u3001\u68af\u5ea6\u66f4\u65b0","text":"<p>\u63a5\u4e0b\u6765\u8981\u5b9a\u4e49\u635f\u5931\u3002\u4e4b\u524d\u662f L(w, b)\uff0c\u56e0\u4e3a w \u8ddf b \u662f\u672a\u77e5\u7684\u3002\u73b0\u5728\u672a\u77e5\u7684\u53c2\u6570\u5f88\u591a\u4e86\uff0c\u518d\u628a\u5b83\u4e00\u4e2a\u4e00\u4e2a\u5217\u51fa\u6765\u592a\u7d2f\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 \u03b8 \u6765\u7edf\u8bbe\u6240\u6709\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u635f\u5931\u51fd\u6570\u5c31\u53d8\u6210 L(\u03b8)\u3002\u635f\u5931\u51fd\u6570\u80fd\u591f\u5224\u65ad \u03b8 \u7684\u597d\u574f\uff0c\u5176\u8ba1\u7b97\u65b9\u6cd5\u8ddf\u521a\u624d\u53ea\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u65f6\u5019\u662f\u4e00\u6837\u7684\u3002\u5148\u7ed9\u5b9a \u03b8 \u7684\u503c\uff0c\u5373\u67d0\u4e00\u7ec4 \\(\\textbf{W}, \\textbf{b}, c^T, b\\)\u7684\u503c\uff0c\u518d\u628a\u4e00\u79cd\u7279\u5f81 x \u4ee3\u8fdb\u53bb\uff0c\u5f97\u5230\u4f30\u6d4b\u51fa\u6765\u7684 y\uff0c\u518d\u8ba1\u7b97\u4e00\u4e0b\u8ddf\u771f\u5b9e\u7684\u6807\u7b7e\u4e4b\u95f4\u7684\u8bef\u5dee e\u3002\u628a\u6240\u6709\u7684\u8bef\u5dee\u901a\u901a\u52a0\u8d77\u6765\uff0c\u5c31\u5f97\u5230\u635f\u5931\u3002</p> <p>\u4e00\u5f00\u59cb\u968f\u673a\u521d\u59cb\u5316\u53c2\u6570\uff0c\u7136\u540e\u5f97\u5230\u4e86\u7b2c\u4e00\u4e2a\\(\\theta_0\\)\uff0c\u7136\u540e\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u672a\u77e5\u53c2\u6570\u5bf9L\u7684\u5fae\u5206\uff0c\u5f97\u5230\u5411\u91cfg:</p> <p></p> <p>\u5047\u8bbe\u6709 1000 \u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u5411\u91cf\u7684\u957f\u5ea6\u5c31\u662f 1000\uff0c\u8fd9\u4e2a\u5411\u91cf\u4e5f\u79f0\u4e3a\u68af\u5ea6\uff0c\\(\u2207L\\) \u4ee3\u8868\u68af\u5ea6\u3002\\(L(\u03b80) (\u662f\u6307\u8ba1\u7b97\u68af\u5ea6\u7684\u4f4d\u7f6e\uff0c\u662f\u5728 \u03b8 \u7b49\u4e8e \\(\u03b8_0\\)\u7684\u5730\u65b9\u3002\u8ba1\u7b97\u51fa g \u540e\uff0c\u63a5\u4e0b\u6765\u8ddf\u65b0\u53c2\u6570\uff0c\\)\u03b8_0\\) \u4ee3\u8868\u5b83\u662f\u4e00\u4e2a\u8d77\u59cb\u7684\u503c\uff0c\u5b83\u662f\u4e00\u4e2a\u968f\u673a\u9009\u7684\u8d77\u59cb\u7684\u503c\uff0c\u4ee3\u8868 \\(\u03b8_1\\)\u66f4\u65b0\u8fc7\u4e00\u6b21\u7684\u7ed3\u679c\uff0c\\(\u03b8_2^0\\) \u51cf\u6389\u5fae\u5206\u4e58\u4ee5\uff0c\u51cf\u6389 \u03b7 \u4e58\u4e0a\u5fae\u5206\u7684\u503c\uff0c\u5f97\u5230 \\(\u03b8_2^1\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5c31\u53ef\u4ee5\u628a 1000 \u4e2a\u53c2\u6570\u90fd\u66f4\u65b0\u4e86\u3002</p> <p></p> <p>\u8fd9\u79cd\u64cd\u4f5c\u4f1a\u91cd\u590d\u66f4\u65b0\u672a\u77e5\u53c2\u6570\uff0c\u76f4\u5230\u8ba1\u7b97\u51fa\u68af\u5ea6\u4e3a\u96f6\uff0c\u867d\u7136\u8bf4\u5b9e\u73b0\u4e0a\u51e0\u4e4e\u4e0d\u53ef\u80fd\u505a\u5230\uff0c\u4f46\u662f\u5e94\u8be5\u4f1a\u5c3d\u53ef\u80fd\u7684\u903c\u8fd1\u3002</p> <p>\u5b9e\u9645\u4e0a\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u65f6\u5019\uff0c\u4f1a\u628aN\u7b14\u6570\u636e\u968f\u673a\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u6279\u91cf\uff08batch\uff09\u3002\u6bcf\u4e00\u4e2abatch\u91cc\u9762\u6709B\u7b14\u6570\u636e\u3002\u672c\u6765\u662f\u6574\u4e2aN\u7b14\u6570\u636e\u7528\u6765\u8ba1\u7b97\u4e00\u4e2a\u635f\u5931\uff0c\u4f46\u662f\u73b0\u5728\u4e00\u4e2aBatch\u4e00\u4e2a\u635f\u5931\u3002\u6240\u4ee5\u5b9e\u6218\u4e2d\uff0c\\(B_1\\)\u62ff\u51fa\u6765\uff0c\u8ba1\u7b97\u635f\u5931\uff0c\u66f4\u65b0\u53c2\u6570\uff0c\u7136\u540e\u62ff\u51fa\\(B_2\\), \u518d\u8ba1\u7b97\u4e00\u6b21\u635f\u5931\uff0c\u66f4\u65b0\u53c2\u6570\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6700\u7ec8\u4f1a\u628a\u6240\u6709\u7684\u6279\u91cf\u90fd\u4f7f\u7528\u8fc7\uff0c\u8fd9\u6837\u79f0\u4e3a\u4e00\u4e2a\u56de\u5408\uff08epoch\uff09\u3002</p> <p>\u901a\u5e38\uff0c\\(\u6279\u91cf\u5927\u5c0f\uff08batch size\uff09*\u6279\u91cf\u6570\u91cf=\u603b\u6837\u672c\uff08example\uff09\u6570\u91cf\\)\uff0c\u800cbatch size\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u8d85\u53c2\u6570\u3002</p>"},{"location":"machine_learning/Datawhale/note.html#_6","title":"\u6a21\u578b\u53d8\u5f62","text":"<p>\u4ecb\u7ecd\u53e6\u4e00\u79cd\u6fc0\u6d3b\u51fd\u6570\uff1a\u4fee\u6b63\u7ebf\u6027\u5355\u5143(Rectified Linear Unit, ReLU)\u3002\u56fe\u50cf\u6709\u4e00\u4e2a\u6c34\u5e73\u7684\u7ebf\uff0c\u8d70\u5230\u67d0\u4e2a\u5730\u65b9\u6709\u4e00\u4e2a\u8f6c\u6298\u7684\u70b9\uff0c\u53d8\u6210\u4e00\u4e2a\u659c\u5761\uff0c\u516c\u5f0f\u4e3a\uff1a  \u673a\u5668\u5b66\u4e60\u4e2d\uff0cSigmoid\u6216ReLU\u79f0\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff08activation function\uff09\uff0c\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\uff0c\u8fd8\u88ab\u79f0\u4e3a\u795e\u7ecf\u5143\uff08neuron\uff09\uff0c\u5f88\u591a\u795e\u7ecf\u5143\u7684\u7f51\u7edc\u79f0\u4e3a\u795e\u7ecf\u7f51\u7edc\uff08neural network\uff09\u3002\u6bcf\u4e00\u6392\u79f0\u4e3a\u4e00\u5c42\uff0c\u79f0\u4e3a\u9690\u85cf\u5c42\uff08hidden layer\uff09\u3002</p> <p></p> <p>\u4f46\u662f\u4e0d\u662f\u76f2\u76ee\u52a0\u6df1\u5ea6\u5c42\u6570\u5c31\u4e00\u5b9a\u6709\u66f4\u597d\u7684\u8868\u73b0\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u8fc7\u62df\u5408\uff08overfitting\uff09: \u5728\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\u4e0a\u7684\u7ed3\u679c\u662f\u4e0d\u4e00\u81f4\u7684\u3002\u5728\u5c42\u6570\u9ad8\u7684\u7f51\u7edc\u4e2d\uff0c\u672a\u77e5\u53c2\u6570\u7684\u66f4\u65b0\u5c31\u8981\u7528\u5230\u53cd\u5411\u4f20\u64ad\uff08Backward Propagation, BP\uff09\u3002</p> <p>\u4e00\u5f20\u56fe\u603b\u7ed3\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff1a </p> <p></p>"},{"location":"machine_learning/Datawhale/note.html#_7","title":"\u5b9e\u8df5\u65b9\u6cd5\u8bba","text":""},{"location":"machine_learning/Datawhale/note.html#_8","title":"\u6a21\u578b\u504f\u5dee\u95ee\u9898","text":"<p>\u5047\u8bbe\u6a21\u578b\u8fc7\u4e8e\u7b80\u5355\uff0c\u4f8b\u5982\\(\\theta_i, i=1,2,...\\)\u5f97\u5230\u7684\\(f_{\\theta_i}(x)\\)\u51fd\u6570\u96c6\u5408\uff0c\u8fd9\u4e2a\u51fd\u6570\u96c6\u5408\u4e5f\u53ef\u80fd\u592a\u5c0f\u4e86\uff0c\u53ef\u4ee5\u8ba9\u635f\u5931\u53d8\u4f4e\u7684\u51fd\u6570\u4e0d\u5728\u6a21\u578b\u63cf\u8ff0\u8303\u56f4\u5185\uff08\u6216\u8005\u635f\u5931\u8db3\u591f\u4f4e\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u627e\u5230\u4e86\\(\\theta^*\\)\uff0c\u635f\u5931\u8fd8\u662f\u4e0d\u591f\u4f4e\u3002\u8fd9\u79cd\u60c5\u51b5\u5c31\u7c7b\u4f3c\u4e8e\u60f3\u8981\u5728\u5927\u6d77\u91cc\u9762\u635e\u9488\uff0c\u4f46\u662f\u7ed3\u679c\u9488\u6839\u672c\u4e0d\u5728\u6d77\u91cc\u9762\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u91cd\u65b0\u8bbe\u8ba1\u6a21\u578b\u4e86\u3002</p> <p></p>"},{"location":"machine_learning/Datawhale/note.html#_9","title":"\u4f18\u5316\u95ee\u9898","text":"<p>\u68af\u5ea6\u4e0b\u964d\u8fdb\u884c\u4f18\u5316\u53ef\u80fd\u6709\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u5361\u5728\u5c40\u90e8\u6700\u4f18\u89e3\u91cc\u9762\u3002\u8fd9\u5c31\u50cf\u662f\u5927\u6d77\u635e\u9488\uff0c\u9488\u786e\u5b9e\u5728\u6d77\u91cc\uff0c\u4f46\u662f\u635e\u4e0d\u8d77\u6765\u3002\u90a3\u4e48\u635f\u5931\u4e0d\u591f\u4f4e\u7684\u65f6\u5019\uff0c\u5230\u5e95\u662f\u6a21\u578b\u504f\u5dee\u8fd8\u662f\u4f18\u5316\u95ee\u9898\u5462\uff1f\u4e00\u4e2a\u5224\u65ad\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u6bd4\u8f83\u4e0d\u540c\u7684\u6a21\u578b\u6765\u5224\u65ad\u6a21\u578b\u591f\u4e0d\u591f\u5927\u3002\u4f8b\u5982\u6b8b\u5dee\u7f51\u7edc\u4e2d\u7684\u4e00\u4e2a\u5b9e\u9a8c\u91cc\u9762\uff0c\u4e00\u4e2a\u7f51\u7edc20\u5c42\uff0c\u4e00\u4e2a\u7f51\u7edc56\u5c42\uff0c\u4f46\u662f\u53d1\u73b0\u8bad\u7ec3\u6570\u636e\u4e0a\u976256\u5c42\u7684loss\u53cd\u800c\u66f4\u9ad8\u3002\u4ece\u4e0b\u56fe\u6765\u770b\uff0c\u8bf4\u660e\u662f56\u5c42\u7684\u7f51\u7edc\u4f18\u5316\u505a\u7684\u4e0d\u597d\uff1a</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u80fd\u4e0b\u8fd9\u4e2a\u5224\u65ad\uff1f\u56e0\u4e3a56\u5c42\u7f51\u7edc\u7406\u8bba\u4e0a\u7b1420\u5c42\u66f4\u7075\u6d3b\uff0c\u4f46\u662floss\u5374\u964d\u4e0d\u4e0b\u6765\uff0c\u8bf4\u660e\u53ea\u80fd\u662f\u4f18\u5316\u8fc7\u7a0b\u7684\u95ee\u9898\u4e86\u3002</p> <p>\u4e00\u4e2a\u5efa\u8bae\u662f\u770b\u5230\u4e00\u4e2a\u4ece\u6765\u6ca1\u6709\u505a\u8fc7\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5148\u8dd1\u4e00\u4e9b\u6bd4\u8f83\u5c0f\u7684\u3001\u6bd4\u8f83\u6d45\u7684\u7f51\u7edc\uff0c\u6216\u751a\u81f3\u7528\u4e00\u4e9b\u975e\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u7ebf\u6027\u6a21\u578b\u3001\u652f\u6301\u5411\u91cf\u673a\uff08Support Vector Machine\uff0cSVM\uff09\uff0cSVM \u53ef\u80fd\u662f\u6bd4\u8f83\u5bb9\u6613\u505a\u4f18\u5316\u7684\uff0c\u5b83\u4eec\u6bd4\u8f83\u4e0d\u4f1a\u6709\u4f18\u5316\u5931\u8d25\u7684\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8fd9\u4e9b\u6a21\u578b\u5b83\u4f1a\u7aed\u5c3d\u5168\u529b\u7684\uff0c\u5728\u5b83\u4eec\u7684\u80fd\u529b\u8303\u56f4\u4e4b\u5185\uff0c\u627e\u51fa\u4e00\u7ec4\u6700\u597d\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u6bd4\u8f83\u4e0d\u4f1a\u6709\u5931\u8d25\u7684\u95ee\u9898\u3002\u56e0\u6b64\u53ef\u4ee5\u5148\u8bad\u7ec3\u4e00\u4e9b\u6bd4\u8f83\u6d45\u7684\u6a21\u578b\uff0c\u6216\u8005\u662f\u4e00\u4e9b\u6bd4\u8f83\u7b80\u5355\u7684\u6a21\u578b\uff0c\u5148\u77e5\u9053\u8fd9\u4e9b\u7b80\u5355\u7684\u6a21\u578b\uff0c\u5230\u5e95\u53ef\u4ee5\u5f97\u5230\u4ec0\u4e48\u6837\u7684\u635f\u5931\u3002</p> <p>\u4f46\u662f\u540c\u65f6\u4e5f\u8981\u5224\u65ad\u6709\u6ca1\u6709\u53ef\u80fd\u8fc7\u62df\u5408\u4e86\uff1a\u5982\u679c\u8bad\u7ec3\u6570\u636e\u4e0a\u9762\u635f\u5931\u5c0f\uff0c\u4f46\u662f\u6d4b\u8bd5\u6570\u636e\u635f\u5931\u5927\uff0c\u90a3\u4e48\u53ef\u80fd\u771f\u7684\u8fc7\u62df\u5408\u4e86\u3002\u56de\u5230\u6b8b\u5dee\u7f51\u7edc\u7684\u5b9e\u9a8c\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c56\u5c42\u7684\u7f51\u7edc\u662f\u8fc7\u62df\u5408\uff0c\u90a3\u4e48\u5e94\u8be5\u8bad\u7ec3\u7684\u65f6\u5019\uff0c56\u5c42\u7f51\u7edc\u7684loss\u5c31\u5f88\u4f4e\uff0c\u81f3\u5c11\u548c20\u5c42\u7f51\u7edc\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u5bf9\u4e8e56\u5c42\u7f51\u7edc\u6765\u8bf4\uff0c\u8bad\u7ec3\u635f\u5931\u548c\u6d4b\u8bd5\u635f\u5931\u90fd\u5f88\u9ad8\u3002\u6240\u4ee5\u8fd9\u4e0d\u662f\u8fc7\u62df\u5408\uff0c\u8fdb\u800c\u5e2e\u52a9\u63a8\u51fa\u7ed3\u8bba\uff1a56\u5c42\u7f51\u7edc\u7684\u4f18\u5316\u51fa\u95ee\u9898\u4e86\u3002</p>"},{"location":"machine_learning/Datawhale/note.html#_10","title":"\u8fc7\u62df\u5408","text":"<p>\u4e3e\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\uff1a\u673a\u5668\u5b66\u4e60\u5230\u4e86\u4e00\u4e2a\u5f88\u5783\u573e\u7684\u51fd\u6570\uff1a\u4ec5\u4ec5\u662f\u6ee1\u8db3\u4e86\u8f93\u5165\u8bad\u7ec3\u96c6\u6570\u636ex\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u7684\u662f\u8bad\u7ec3\u96c6\u5bf9\u5e94\u7684y\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u8f93\u5165x\u6839\u672c\u4e0d\u600e\u4e48\u7ba1\u7ed3\u679c\u548b\u6837\u3002\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u662f\u5bf9\u8bad\u7ec3\u96c6\u6570\u636e\u62df\u5408\u8f83\u597d\uff0c\u4f46\u662f\u5bf9\u6d4b\u8bd5\u673a\u6570\u636e\u62df\u5408\u8f83\u5dee\u3002\u89c1\u4e0b\u56fe\uff1a </p> <p>\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u8fc7\u62df\u5408\u7684\u95ee\u9898\u5462\uff1f\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u65b9\u5411\uff1a</p> <p>\u4e00\u662f\u589e\u52a0\u8bad\u7ec3\u96c6\uff0c\u84dd\u8272\u7684\u70b9\u53d8\u591a\u4e86\uff0c\u867d\u7136\u6a21\u578b\u7075\u6d3b\u6027\u5f88\u5927\uff0c\u4f46\u662f\u7531\u4e8e\u70b9\u6570\u91cf\u591a\u7684\u539f\u56e0\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u88ab\u9650\u5236\u4f4f\u3002\u5982\u679c\u8bad\u7ec3\u96c6\u5b9a\u6b7b\u4e86\uff0c\u53ef\u4ee5\u8003\u8651\u6570\u636e\u589e\u5f3a\uff08data augmentation\uff09\u3002\u6570\u636e\u589e\u5f3a\u5c31\u662f\u6839\u636e\u95ee\u9898\u7684\u7406\u89e3\u521b\u9020\u51fa\u65b0\u7684\u6570\u636e\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u505a\u56fe\u50cf\u8bc6\u522b\u7684\u65f6\u5019\uff0c\u5e38\u505a\u7684\u4e00\u4e2a\u62db\u5f0f\u662f\uff0c\u5047\u8bbe\u8bad\u7ec3\u96c6\u91cc\u9762\u6709\u67d0\u4e00\u5f20\u56fe\u7247\uff0c\u628a\u5b83\u5de6\u53f3\u7ffb\u8f6c\uff0c\u6216\u8005\u662f\u628a\u5b83\u5176\u4e2d\u4e00\u5757\u622a\u51fa\u6765\u653e\u5927\u7b49\u7b49\u3002\u5bf9\u56fe\u7247\u8fdb\u884c\u5de6\u53f3\u7ffb\u8f6c\uff0c\u6570\u636e\u5c31\u53d8\u6210\u4e24\u500d\u3002\u4f46\u662f\u6570\u636e\u589e\u5f3a\u4e0d\u80fd\u591f\u968f\u4fbf\u4e71\u505a\u3002\u5728\u56fe\u50cf\u8bc6\u522b\u91cc\u9762\uff0c\u5f88\u5c11\u770b\u5230\u6709\u4eba\u628a\u56fe\u50cf\u4e0a\u4e0b\u98a0\u5012\u5f53\u4f5c\u589e\u5f3a\u3002\u56e0\u4e3a\u8fd9\u4e9b\u56fe\u7247\u90fd\u662f\u5408\u7406\u7684\u56fe\u7247\uff0c\u5de6\u53f3\u7ffb\u8f6c\u56fe\u7247\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u91cc\u9762\u7684\u5185\u5bb9\u3002\u4f46\u628a\u56fe\u50cf\u4e0a\u4e0b\u98a0\u5012\uff0c\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u8bad\u7ec3\u96c6\u6216\u771f\u5b9e\u4e16\u754c\u91cc\u9762\u4f1a\u51fa\u73b0\u7684\u56fe\u50cf\u3002\u5982\u679c\u7ed9\u673a\u5668\u6839\u636e\u5947\u602a\u7684\u56fe\u50cf\u5b66\u4e60\uff0c\u5b83\u53ef\u80fd\u5c31\u4f1a\u5b66\u5230\u5947\u602a\u7684\u4e1c\u897f\u3002\u6240\u4ee5\u6570\u636e\u589e\u5f3a\uff0c\u8981\u6839\u636e\u5bf9\u6570\u636e\u7684\u7279\u6027\u4ee5\u53ca\u8981\u5904\u7406\u7684\u95ee\u9898\u7684\u7406\u89e3\uff0c\u6765\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u589e\u5f3a\u7684\u65b9\u5f0f\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u65b9\u5411\u662f\u7ed9\u6a21\u578b\u4e00\u4e9b\u9650\u5236\uff0c\u8ba9\u6a21\u578b\u4e0d\u8981\u6709\u8fc7\u5927\u7684\u7075\u6d3b\u6027\u3002\u9650\u5236\u53ef\u4ee5\u6709\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <ul> <li>\u7ed9\u6a21\u578b\u6bd4\u8f83\u5c11\u7684\u53c2\u6570\u3002\u5bf9\u4e8e\u6df1\u5ea6\u5b66\u4e60\u6765\u8bf4\uff0c\u5c31\u662f\u51cf\u5c11\u795e\u7ecf\u5143\u7684\u6570\u91cf\uff0c\u6216\u8005\u6a21\u578b\u5171\u7528\u53c2\u6570\u3002\u4f8b\u5982\u5168\u8fde\u63a5\u7f51\u7edc\u7075\u6d3b\u6027\u5f88\u9ad8\uff0c\u800cCNN\u5c31\u6709\u4e00\u5b9a\u9650\u5236\uff0c\u6240\u4ee5\u5168\u8fde\u63a5\u7f51\u7edc\u627e\u51fa\u6765\u7684\u51fd\u6570\u96c6\u5408\u5176\u5b9e\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u800cCNN\u627e\u51fa\u6765\u7684\u51fd\u6570\u96c6\u5408\u5c31\u6bd4\u8f83\u5c11\u3002CNN\u5728\u56fe\u50cf\u4e0a\u53cd\u800c\u505a\u5f97\u66f4\u597d\u3002</li> <li>\u65e9\u505c\uff08early stopping\uff09\u3001\u6b63\u5219\u5316\uff08regularization\uff09\u3001\u4e22\u5f03\uff08dropout\uff09(\u795e\u7ecf\u5143\u968f\u673a\u5931\u6d3b)</li> </ul>"},{"location":"machine_learning/Datawhale/note.html#_11","title":"\u4ea4\u53c9\u9a8c\u8bc1","text":"<p>\u6bd4\u8f83\u5408\u7406\u7684\u662f\uff1a\u8bad\u7ec3\u7684\u6570\u636e\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0ctraining set and validation set\u3002\u6bd4\u5982\u8bf490%\u8bad\u7ec3\u96c6\uff0c10%\u9a8c\u8bc1\u96c6\u3002\u5728\u8bad\u7ec3\u96c6\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u4f1a\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6765\u8861\u91cf\u5b83\u4eec\u7684\u5206\u6570\uff0c\u7136\u540e\u6839\u636e\u9a8c\u8bc1\u96c6\u4e0a\u7684\u5206\u6570\u53bb\u6311\u9009\u5408\u9002\u7684\u6a21\u578b\uff0c\u5bf9testing set\u8fdb\u884c\u6d4b\u8bd5\u3002</p>"},{"location":"machine_learning/Datawhale/note.html#_12","title":"\u4e0d\u5339\u914d","text":"<p>\u6709\u7684\u65f6\u5019\u67d0\u4e00\u4e2a\u9884\u6d4b\u7684\u7ed3\u679c\u548c\u771f\u5b9e\u7ed3\u679c\u6709\u8f83\u5927\u7684\u4e0d\u540c\uff0c\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u589e\u52a0\u6570\u636e\u4e0d\u4e00\u5b9a\u80fd\u8ba9\u6a21\u578b\u505a\u7684\u66f4\u597d\uff0c\u8fd9\u79cd\u95ee\u9898\u7684\u89e3\u51b3\u9700\u8981\u770b\u5339\u4e0d\u5339\u914d\u5bf9\u6570\u636e\u672c\u8eab\u7684\u7406\u89e3\u3002\u6211\u4eec\u53ef\u80fd\u8981\u5bf9\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u4ea7\u751f\u65b9\u5f0f\u6709\u4e00\u4e9b\u7406\u89e3\uff0c\u624d\u80fd\u5224\u65ad\u662f\u4e0d\u662f\u51fa\u73b0\u4e86\u4e0d\u5339\u914d\u60c5\u51b5\u3002\u6216\u8005\u8bf4\uff1a\u5224\u65ad\u6d4b\u8bd5\u673a\u548c\u8bad\u7ec3\u96c6\u7684distribution.</p> <p></p>"},{"location":"sequence%20model/sequence_model.html","title":"Sequence Model","text":"<p>\u5e8f\u5217\u6a21\u578b\u65e0\u5904\u4e0d\u5728, \u4f8b\u5982\u97f3\u9891, \u751f\u6210\u6587\u5b57\u6bb5\u843d, \u7b49\u7b49, \u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u8ddf\u5e8f\u5217\u606f\u606f\u76f8\u5173 </p>"},{"location":"sequence%20model/sequence_model.html#notation","title":"Notation","text":"<p>\u5047\u5982\u8bf4\u6709\u4e00\u4e2a\u5728\u53e5\u5b50\u4e2d\u627e\u5230\u4eba\u540d\u7684\u4efb\u52a1, \u8f93\u5165\u7684\u662f\u4e00\u4e2a\u5305\u542b\u4e869\u4e2a\u5355\u8bcd\u7684token, \u8f93\u51fa\u7684\u662f, \u5047\u5982\u8bf4, \u662f9\u4e2atoken\u6765\u8868\u793a\u5404\u81ea\u662f\u5426\u662f\u4eba\u540d\u7684\u4e00\u90e8\u5206. \u90a3\u4e48\u5728\u8fd9\u4e2a\u60c5\u666f\u4e2d, \u8f93\u5165\u7684x\u6bcf\u4e00\u4e2a\u90fd\u662f<code>x^&lt;i&gt;</code>\u8bb0\u53f7\u7528\u6765\u8868\u793a, y\u540c\u7406. \u90a3\u4e48\u6709\u7684\u662f\u65f6\u5019\u5904\u7406\u7684\u6570\u636e\u5f88\u591a, \u90a3\u4e48\u5706\u62ec\u53f7\u5c31\u662f\u4ee3\u8868\u7b2c\u51e0\u4e2a\u6837\u672c, \u7136\u540e\u5c16\u62ec\u53f7\u4ee3\u8868\u7b2c\u51e0\u4e2atoken. </p> <p>\u90a3\u4e48\u5f88\u81ea\u7136\u7684\u5c31\u80fd\u63d0\u51fa\u7591\u95ee: \u5982\u4f55\u7528<code>x&lt;i&gt;</code>, \u6765\u4ee3\u8868\u4e00\u4e2a\u5355\u8bcd\u5462? </p> <p>\u4e00\u79cd\u76f4\u89c2\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u521b\u5efa\u4e00\u4e2a\u5b57\u5178, \u4ecea, \u7b2c\u4e00\u4e2a\u5355\u8bcd\u5f00\u59cb, \u4e00\u76f4\u5230\u6700\u540e, \u5047\u5982\u8bf4\u662fZulu, \u6bcf\u4e00\u4e2a\u90fd\u7f16\u4e0a\u53f7. \u4e00\u822c\u6765\u8bf4, \u5e38\u89c1\u7684\u5546\u52a1\u516c\u53f8\u6240\u4f7f\u7528\u7684\u5b57\u5178, \u5dee\u4e0d\u591a\u6570\u91cf\u572830000-50000, \u90a3\u4e48100000\u4ee5\u4e0a\u7684\u4e5f\u5e76\u4e0d\u5c11\u89c1. </p> <p>\u90a3\u4e48\u6709\u4e86\u8fd9\u4e2a\u5b57\u5178, \u90a3\u4e48\u5c31\u53ef\u4ee5\u91c7\u7528\u72ec\u70ed\u7f16\u7801(One Hot). \u5047\u5982\u8bf4\u6211\u4eec\u91c7\u7528\u7684\u5b57\u5178\u662f10000\u7684\u4f53\u91cf, \u90a3\u4e48\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d, \u8f93\u5165\u76849\u4e2a\u5355\u8bcd\u4e2d, \u6bcf\u4e00\u4e2a\u5355\u8bcd\u90fd\u53ef\u4ee5\u752810000\u7ef4\u7684\u5411\u91cf\u8868\u793a, \u5176\u4e2d\u53ea\u6709\u5355\u8bcd\u6240\u5bf9\u5e94\u7684\u7d22\u5f15\u7684\u884c\u6570\u4e3a1, \u5176\u4ed6\u5730\u65b9\u90fd\u662f0. </p> <p></p> <p>\u90a3\u4e48\u76f8\u5f53\u4e8e\u6700\u540e\u662f\u8bad\u7ec3\u4e00\u4e2a\u4ecex\u5230y\u7684\u4e00\u4e2a\u6620\u5c04. \u90a3\u4e48\u5982\u4f55\u8bad\u7ec3\u8fd9\u6837\u7684\u4e00\u4e2a\u6620\u5c04\u5462? \u503c\u5f97\u6ce8\u610f\u7684\u662f, \u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u76d1\u7763\u5b66\u4e60, \u56e0\u4e3ax y \u5176\u5b9e\u90fd\u5e94\u8be5\u662f\u6709\u6807\u51c6\u7b54\u6848, \u4e14\u6211\u4eec\u4f1a\u4eba\u5de5\u6807\u8bb0\u4e0a\u53bb\u7684. \u90a3\u4e48\u56e0\u6b64, \u6211\u4eec\u5f15\u51fa\u4e86RNN</p>"},{"location":"sequence%20model/sequence_model.html#recurrent-neural-network","title":"Recurrent Neural Network","text":"<p>\u90a3\u4e48\u9996\u5148\u76f4\u89c9\u4e0a\u53ef\u80fd\u63d0\u51fa\u7591\u95ee: \u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e4b\u524d\u73b0\u6709\u7684network frame\u5462? \u4e4b\u524d\u7684MLP\u4e0d\u662f\u633a\u597d\u7684\u561b? \u4f46\u662f\u4e3b\u8981\u662f\u6709\u4e24\u4e2a\u95ee\u9898: \u7b2c\u4e00\u4e2a\u662f\u8f93\u51fa\u7684y\u7684feature\u7684\u6570\u91cf\u5176\u5b9e\u662f\u4e0d\u786e\u5b9a\u7684(\u4e0d\u662f\u6240\u6709\u7684\u4efb\u52a1\u90fd\u662f\u50cf\u8fd9\u4e00\u4e2a\u4efb\u52a1\u4e00\u6837, y\u8f93\u51fa\u7684feature\u7684\u6570\u91cf\u548cx\u7684\u4e00\u6837); \u7b2c\u4e8c\u4e2a\u662f\u8fd9\u6837\u7684\u795e\u7ecf\u7f51\u7edc\u65e0\u6cd5\u5b66\u4e60positional information, \u56e0\u4e3a\u539f\u6765\u7684\u795e\u7ecf\u7f51\u7edc\u662fpermutation-insensitive\u7684, \u4f46\u662f\u5e8f\u5217\u5374\u5bf9permutation\u5f02\u5e38\u654f\u611f. </p> <p></p> <p>\u90a3\u4e48\u4ec0\u4e48\u662fRNN ? </p> <p></p> <p>y1\u7684\u8f93\u51fa\u6765\u6e90\u4e8ex1, \u4f46\u662f\u5230\u4e86y2\u7684\u65f6\u5019, \u4e0d\u4ec5\u4ec5\u5b83\u7684\u63a8\u7406\u6765\u6e90\u4e8ex2, \u8fd8\u8981\u6e90\u4e8e\u524d\u4e00\u4e2a\u6a21\u5757\u6240\u4f20\u9012\u8fc7\u6765\u7684a1, \u7136\u540e\u5c31\u8fd9\u6837\u4e00\u76f4\u4ee5\u6b64\u7c7b\u63a8. \u90a3\u4e48\u5bf9\u4e8ey1\u6765\u8bf4, \u5b83\u7684\u63a8\u7406\u5176\u5b9e\u4e5f\u9700\u8981\u4e00\u4e2aa0, \u4f46\u662f\u4e00\u822c\u8fd9\u4e2aa0\u90fd\u662f\u96f6\u521d\u59cb\u5316. </p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f, \u8f93\u5165\u7684x\u9700\u8981\u7ecf\u8fc7\u4e00\u5c42\u6620\u5c04\u5904\u7406, \u624d\u80fd\u8fdb\u5165\u7f51\u7edc, \u800c\u8fd9\u4e2a\u6620\u5c04\u77e9\u9635\u7684\u53c2\u6570\u662f\u5171\u4eab\u7684; \u540c\u6837, \u8f93\u51fay\u7684\u65f6\u5019, \u5176\u5b9e\u662f\u8f93\u51fa\u5185\u5bb9\u7ecf\u8fc7\u4e00\u5c42\u6620\u5c04\u5904\u7406\u624d\u53d8\u6210y\u7684, \u800c\u8fd9\u5c42\u6620\u5c04\u77e9\u9635\u4e5f\u662f\u53c2\u6570\u5171\u4eab\u7684; \u66f4\u662f\u4e0d\u4ec5\u4ec5\u5982\u6b64, \u4f20\u9012<code>a&lt;t&gt;</code>\u7684\u65f6\u5019, \u4e5f\u662f\u67d0\u79cd\u8f93\u51fa\u7ecf\u8fc7\u6620\u5c04\u77e9\u9635\u53d8\u6210\u7684, \u800c\u8fd9\u5c42\u6620\u5c04\u77e9\u9635\u7684\u53c2\u6570\u4e5f\u662f\u5171\u4eab\u7684. \u5171\u4eab\u662f\u4ec0\u4e48\u610f\u601d? \u610f\u601d\u6307\u7684\u662f\u6bcf\u4e00\u4e2a\u6a21\u5757\u4e2d\u7684\u8fd9\u4e2a\u77e9\u9635\u7684\u53c2\u6570\u603b\u662f\u4e00\u6837\u7684</p> <p>\u5728\u6709\u4e9b\u6559\u79d1\u6216\u8005\u8bba\u6587\u4e2d, \u4e3a\u4e86\u65b9\u4fbf, \u5c06RNN\u8868\u793a\u6210\u53f3\u8fb9\u8fd9\u4e2a\u6837\u5b50. </p> <p>\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d, \u53d1\u73b0y3\u7684\u8f93\u51fa\u4e0ex1 x2 x3\u6709\u5173, \u8fd9\u662f\u4e00\u4ef6\u975e\u5e38\u4e50\u4e8e\u89c1\u5230\u7684\u4e8b\u60c5. \u4f46\u662f\u4e5f\u6709\u7f3a\u70b9. \u6709\u7684\u65f6\u5019, \u5176\u5b9e\u5e8f\u5217\u6a21\u578b\u7684\"\u5e8f\u5217\u95ee\u9898\"\u4e0d\u4ec5\u4ec5\u662f\u540e\u9762\u7684token\u548c\u524d\u9762\u7684\u6709\u5173, \u6709\u7684\u65f6\u5019(\u4e14\u4e0d\u5c11\u89c1)\u524d\u9762token\u7684\u542b\u4e49\u4e5f\u548c\u540e\u9762\u7684token\u6709\u5173, \u4f46\u662f\u8fd9\u4e00\u70b9\u5728\u6a21\u578b\u4e2d\u6ca1\u6709\u4f53\u73b0. \u56fe\u4e2d\u5217\u4e3e\u51fa\u4e86\u4e00\u4e2a\u5f88\u751f\u52a8\u7684\u4f8b\u5b50, \u5173\u4e8eTeddy\u7a76\u7adf\u662f\u4e0d\u662f\u4eba\u540d. </p> <p>\u90a3\u4e48\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u5f0a\u7aef, \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u53cc\u5934\u5faa\u73af\u7f51\u7edc(BRNN), \u8fd9\u4e2a\u4e4b\u540e\u4f1a\u4ecb\u7ecd. </p> <p>\u90a3\u4e48<code>Wax Waac Wya</code>\u53c2\u6570\u8d77\u5230\u7684\u4f5c\u7528\u7a76\u7adf\u662f\u4ec0\u4e48\u5462?  \u6ce8\u610f\u5230\u5b57\u6bcd\u7684\u6392\u5217\u6709\u70b9\u5947\u602a, \u56e0\u6b64\u9996\u5148\u5148\u660e\u786e\u5b57\u6bcd\u7684\u542b\u4e49: \u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4ee3\u8868: \u7528\u6765\u8ba1\u7b97\u4ec0\u4e48; \u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4ee3\u8868: \u8fd9\u4e2a\u77e9\u9635\u662f\u4e58\u5728\u8c01\u8eab\u4e0a. </p> <p></p> <p><code>a&lt;t&gt; y&lt;t&gt;</code>\u7684\u8ba1\u7b97\u5f0f\u5b50\u5df2\u7ecf\u653e\u5728\u4e86\u56fe\u7247\u91cc\u9762, \u5176\u4e2dg\u4ee3\u8868\u6fc0\u6d3b\u51fd\u6570, \u90a3\u4e48\u8fd9\u4e2a\u6fc0\u6d3b\u51fd\u6570\u5728\u8ba1\u7b97<code>a&lt;t&gt;</code>\u7684\u65f6\u5019\u5927\u591a\u662ftanh\u51fd\u6570, \u5f88\u5c11\u4f46\u662f\u4e5f\u53ef\u4ee5\u7528ReL:U\u51fd\u6570; \u800c\u5bf9\u4e8e<code>y&lt;t&gt;</code>\u6765\u8bf4, \u4e3b\u8981\u53d6\u51b3\u4e8e\u8f93\u51fa\u7c7b\u578b\u662f\u4ec0\u4e48, \u662fsoftmax\u8fd8\u662fsigmoid, \u90fd\u6709\u53ef\u80fd. </p> <p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7b80\u5316\u7b26\u53f7\u4ee5\u7528\u6765\u8868\u793a\u590d\u6742\u7684\u7f51\u7edc, \u7528\u5411\u91cf\u5316\u7684\u5f62\u5f0f\u8fdb\u4e00\u6b65\u7b80\u5316: </p> <p></p> <p>## Backward Propagation through time </p> <p>\u867d\u7136\u8bf4\u5728\u5b9e\u9645\u7684\u7f16\u7a0b\u4e2d, \u6211\u4eec\u5b8c\u5168\u4e0d\u9700\u8981\u77e5\u9053backward propagation\u7a76\u7adf\u662f\u600e\u4e48\u8fdb\u884c\u7684, \u56e0\u4e3apytorch\u529f\u80fd\u8fc7\u4e8e\u5f3a\u5927. \u4f46\u662f\u6700\u597d\u8fd8\u662f\u7a0d\u5fae\u4e86\u89e3\u4e00\u4e0b\u53cd\u5411\u4f20\u64ad\u7a76\u7adf\u662f\u5982\u4f55\u8fdb\u884c\u7684</p> <p></p> <p>\u5411\u524d\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e4b\u524d\u5df2\u7ecf\u8bf4\u8fc7, \u90a3\u4e48\u5173\u4e8e\u635f\u5931\u51fd\u6570, \u4f9d\u7136\u4f7f\u7528\u7684\u662f\u5404\u81ea\u7684\u4ea4\u53c9\u71b5\u51fd\u6570; \u4e4b\u540e\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u7684\u65b9\u5411\u5b8c\u5168\u76f8\u53cd, \u4ee5\u8fd9\u4e2a\u6765\u5b9e\u73b0\u94fe\u5f0f\u6cd5\u5219\u7684\u6c42\u5bfc, \u6765\u8ba1\u7b97\u51fa\u5404\u4e2a\u8282\u70b9\u7684\u53c2\u6570\u7684delta\u503c, \u6700\u540e\u5b9e\u73b0\u68af\u5ea6\u4e0b\u964d\u548c\u53c2\u6570\u66f4\u65b0. \u56e0\u4e3a\u4e4b\u524d\u6b63\u5411\u4f20\u64ad\u7684\u65b9\u5411\u6b63\u597d\u662f\u65f6\u95f4\u65b9\u5411, \u56e0\u6b64\u53cd\u5411\u4f20\u64ad\u5c31\u6709\u4e86\u4e00\u4e2a\u975e\u5e38fancy\u7684\u540d\u5b57: Backward Propagation through time.</p>"},{"location":"sequence%20model/sequence_model.html#rnn","title":"\u4e0d\u4e00\u6837\u7684RNN","text":"<p>\u4e4b\u524d\u4ecb\u7ecd\u548c\u5206\u6790\u7684\u8fd9\u79cd\u60c5\u51b5\u90fd\u662fTx = Ty, \u5373\u8f93\u5165\u7684token\u6570\u91cf\u548c\u8f93\u51fa\u7684token\u6570\u91cf\u4e00\u81f4. \u4f46\u662f\u5f88\u591a\u60c5\u51b5\u5e76\u4e0d\u662f\u8fd9\u6837. architecture\u5206\u4e3a\u5f88\u591a\u79cd, \u4f8b\u5982many-to-many(\u4e4b\u524d\u7684\u90a3\u4e2a\u5c31\u662f), \u4e5f\u6709many-to-one(\u4f8b\u5982sentiment classification, \u6700\u540e\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u6b63\u6574\u6570, \u4ee3\u8868\u5fc3\u60c5\u597d\u574f\u7a0b\u5ea6)</p> <p></p> <p>\u5f53\u7136\u8fd8\u6709one-to-many, \u4f8b\u5982\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u4ee3\u8868\u97f3\u4e50\u98ce\u683c, \u7136\u540e\u8f93\u51fa\u662f\u4e00\u6bb5\u97f3\u9891. \u5728many-to-many\u4e2d\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u7279\u6b8a\u7684\u7ed3\u6784, \u9996\u5148\u7528encoder\u8bfb\u5165\u8fd9\u53e5\u8bdd, \u7136\u540e\u518d\u7528decoder\u8f93\u51fa\u7ffb\u8bd1\u7684\u5185\u5bb9, \u8fd9\u79cd\u7ed3\u6784\u6700\u51fa\u540d\u7684\u4f7f\u7528\u5728\u4e0d\u540c\u4e8e\u8bed\u8a00\u4e4b\u95f4\u7684\u7ffb\u8bd1, \u56e0\u4e3a\u7ffb\u8bd1\u7684\u53e5\u5b50\u4e4b\u95f4\u7684token\u6570\u91cf\u975e\u5e38\u6709\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684. </p> <p></p>"},{"location":"sequence%20model/sequence_model.html#language-model-and-sequence-generation","title":"Language model and sequence generation","text":"<p>\u4e00\u4e2a\u826f\u597d\u7684\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u5728\u542c\u5230\u4e00\u53e5\u8bdd\u4e4b\u540e\u4f1a\u8ba1\u7b97\u51fa\u5404\u79cd\u53ef\u80fd\u53e5\u5b50\u7684\u6982\u7387, \u7136\u540e\u518d\u6bd4\u8f83\u6982\u7387\u6700\u540e\u8f93\u51fa\u6700\u6709\u53ef\u80fd\u7684\u6587\u672c. \u90a3\u4e48\u5982\u4f55\u5efa\u7acb\u8fd9\u6837\u7684\u6a21\u578b\u5462? \u9996\u5148, Training set\u9700\u8981\u662f\u4e00\u4e2a\u5305\u542b\u82f1\u8bed\u6587\u672c\u7684\u975e\u5e38\u5927\u7684\u8bed\u6599\u5e93(corpus). </p> <p>\u5bf9\u4e8e\u8bed\u6599\u5e93\u7684\u6bcf\u4e00\u4e2a\u53e5\u5b50, \u9996\u5148\u6211\u4eec\u9700\u8981tokenize, \u5373\u7528one hot\u7f16\u7801. \u4f46\u662f\u503c\u5f97\u6ce8\u610f\u7684\u662f, \u6700\u540e\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a<code>&lt;EOS&gt;</code>\u7684token, \u4ee3\u8868\u6b64\u5904\u662fEnd of Sentence. \u540c\u65f6, \u5982\u679c\u53d1\u73b0\u4e86\u5b57\u5178\u91cc\u9762\u6ca1\u6709\u7684\u5355\u8bcd, \u53ef\u4ee5\u7528<code>&lt;UNK&gt;</code>token\u4ee3\u8868Unknown</p> <p></p> <p></p> <p>\u8fd9\u91cc\u8bad\u7ec3\u7684\u76ee\u7684\u662f: \u544a\u8bc9Cat, \u7136\u540e\u751f\u6210\u540e\u9762\u4e00\u4e2a\u5355\u8bcd; \u9519\u4e86\u6ca1\u5173\u7cfb, \u6211\u518d\u544a\u8bc9\u4f60, Cat \u540e\u9762\u662f Average, \u90a3\u4e48Average\u540e\u9762\u53c8\u662f\u4ec0\u4e48\u5462? \u8fd9\u6837\u7684\u8bdd\u5c31\u80fd\u8ba1\u7b97\u4e00\u5806\u7684\u6761\u4ef6\u6982\u7387. </p>"},{"location":"sequence%20model/sequence_model.html#vanishing-gradient-gru","title":"Vanishing Gradient &amp; GRU","text":"<p>\u82f1\u8bed\u7684\u53e5\u5b50\u80fd\u505a\u5230\u975e\u5e38\u957f, \u4f8b\u5982\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50, \u6211\u4eec\u5e0c\u671b\u7f51\u7edc\u80fd\u591f\u5b66\u5230: \u540e\u9762\u662fwas \u8fd8\u662f were\u662f\u9700\u8981\u6839\u636e\u524d\u9762cat\u7684\u5355\u590d\u6570\u6765\u51b3\u5b9a\u7684, \u4f46\u662f\u7f51\u7edc\u975e\u5e38\u6df1, \u56e0\u4e3a\u4e2d\u95f4\u5355\u8bcd\u975e\u5e38\u591a, \u4e8e\u662f\u6df1\u5ea6\u5f88\u9ad8,\u5bfc\u81f4\u68af\u5ea6\u5bb9\u6613\u7206\u70b8, \u56e0\u6b64\u53cd\u5411\u8bad\u7ec3\u5f88\u96be\u8fdb\u884c. </p> <p>\u4e3a\u4e86\u7ed3\u5c40\u8fd9\u4e2a\u95ee\u9898, GRU(Gated Recurrent Unit)\u5e94\u8fd0\u800c\u751f, \u5b83\u6539\u53d8\u4e86RNN\u7684\u9690\u85cf\u5c42, \u80fd\u654f\u611f\u6355\u6349\u6df1\u5c42\u8fde\u63a5, \u5e76\u4e14\u6781\u5927\u7f13\u89e3\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898. </p> <p></p> <p>\u8fd9\u4e2a\u662f\u539f\u6765RNN\u8bbe\u8ba1\u7684\u9690\u85cf\u5c42, \u5728\u8f93\u5165\u4e0a\u4e00\u5c42\u7684a\u548c\u8fd9\u4e00\u5c42\u7684x\u4e4b\u540e, \u901a\u8fc7\u6743\u91cd\u77e9\u9635\u548cbias matrix, \u52a0\u4e0a\u6fc0\u6d3b\u51fd\u6570tanh\u4e4b\u540e\u5f97\u5230\u4e86\u4e0b\u4e00\u5c42\u5c06\u4f1a\u4f7f\u7528\u7684a, \u5e76\u4e14\u8fd9\u4e2a\u8f93\u51fa\u8fd8\u4f1a\u7ecf\u8fc7softmax\u4ece\u800c\u5f97\u5230\u9884\u6d4b\u7684y. </p> <p></p> <p>\u5728\u8fd9\u4e2aGRU\u5355\u5143\u4e2d, \u9996\u5148\u662f\u5f15\u5165\u4e86memory cell\u7684\u53c2\u6570, \u8fd9\u4e2a\u77e9\u9635\u53c2\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\u548ca\u662f\u4e00\u6837\u7684. \u7136\u540e\u6709\u4e00\u4e2a\"\u95e8\", \u8f93\u5165\u7684\u662f\u4e0a\u4e00\u5c42\u4f20\u4e0b\u6765\u7684memory cell\u548c\u8fd9\u4e00\u5c42\u8f93\u5165\u7684x, \u7136\u540e\u7ecf\u8fc7sigmoid function\u5f97\u5230\u95e8\u503c, \u6700\u540e\u7531\u95e8\u503c\u5f97\u5230\u4e86\u4f20\u7ed9\u4e0b\u4e00\u5c42\u7684memory cell</p> <p>\u8fd9\u4e2a\u8bbe\u8ba1\u6210\u529f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u76ee\u6807: \u5c31\u662f\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u66f4\u65b0\u8bb0\u5fc6\u7ec6\u80de. \u56e0\u4e3asigmoid function\u4e0b\u5f97\u5230\u7684\u6570\u503c\u8981\u4e48\u975e\u5e38\u63a5\u8fd11\u8981\u4e48\u975e\u5e38\u63a5\u8fd10, \u6240\u4ee5\u8bf4\u4e0a\u56fe\u4e2d\u7684\u7b2c\u4e09\u4e2a\u5f0f\u5b50\u5176\u5b9e\u51e0\u4e4e\u5c31\u662f\u5728\u51b3\u5b9a\u5230\u5e95\u662f\u4fdd\u7559\u4e0a\u4e00\u4e2a\u8bb0\u5fc6\u7ec6\u80de\u8fd8\u662f\u66f4\u65b0\u8bb0\u5fc6\u7ec6\u80de. \u8fd9\u6837\u4e00\u6765\u7684\u8bdd,cat\u5904\u7684\"\u662f\u5355\u6570\"\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5fc6\u7ec6\u80de\u4f20\u5230\"was\"\u6240\u5904\u5728\u7684\u4f4d\u7f6e, \u90a3\u4e48\u751f\u6210was/were\u7684\u65f6\u5019\u5c31\u4f1a\u66f4\u65b0\u8bb0\u5fc6\u7ec6\u80de, \u7136\u540e\u8f93\u51fa\u6b63\u786e\u7684was</p> <p>\u4e0a\u9762\u56fe\u4e2d\u7684\u6f14\u793a\u56fe\u4e5f\u662f\u5f88\u597d\u7684\u5c55\u73b0\u4e86simplified GRU\u7684\u5185\u90e8\u7ed3\u6784. </p> <p></p> <p>\u4f46\u662f\u4e3a\u4ec0\u4e48\u8bf4\u662f\u7b80\u5316\u7684\u7248\u672c? \u56e0\u4e3a\u5176\u5b9e\u5b8c\u6574\u7684\u7248\u672c\u662f\u5982\u4e0a\u56fe\u6240\u793a\u7684. \u56e0\u4e3a\u5176\u5b9e\u7f51\u7edc\u8bbe\u8ba1\u7684\u7ed3\u6784\u6ca1\u6709\u6807\u51c6\u7b54\u6848, \u7ecf\u8fc7\u591a\u5e74\u6765\u7814\u7a76\u8005\u7684\u5c1d\u8bd5, \u6700\u540e\u53d1\u73b0, \u5728\u8ba1\u7b97c tilder\u7684\u65f6\u5019, \u5728\u4e0a\u4e00\u5c42\u7684memory cell matrix\u524d\u9762\u4e58\u4e0a\u4e00\u4e2ar(stands for relationship)\u95e8, \u4f1a\u589e\u52a0\u9c81\u68d2\u6027\u4e14\u5c55\u73b0\u8f83\u5f3a\u7684\u51c6\u786e\u6027. </p> <p>\u9644: \u5176\u4e2d*\u4ee3\u8868\u7684\u662felement-wise multiplication</p>"},{"location":"sequence%20model/sequence_model.html#lstm","title":"LSTM","text":"<p>LSTM\u5168\u79f0\u4e3aLong-Short-Term-Memory. </p> <p></p> <p>\u53ef\u4ee5\u7684\u770b\u5230, \u8c8c\u4f3cLSTM\u5c31\u662f\u628a(1-\u95e8u)\u8fd9\u4e2a\u53c2\u6570\u548ca=c\u7684identical projection matrix\u6362\u6210\u4e86\u5355\u72ec\u8bad\u7ec3\u51fa\u6765\u7684\u53c2\u6570. \u6240\u4ee5\u8bf4, LSTM\u662f\u66f4\u52a0\u5e7f\u6cdb\u7684GRU\u7248\u672c</p> <p></p> <p>\u4e0a\u56fe\u4e2d\u5c55\u793a\u4e86LSTM\u7684\u7ed3\u6784, \u4f46\u662f\u8bf4\u5b9e\u8bdd\u8fd8\u662f\u516c\u5f0f\u66f4\u52a0\u660e\u663e.</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f, \u8f93\u51fa\u95e8(output)\u5904\u7406c\u540e\u662f\u4e3a\u4e86softmax\u800c\u670d\u52a1\u7684.  </p>"},{"location":"sequence%20model/sequence_model.html#bidirectory-rnn","title":"Bidirectory RNN","text":"<p>\u4e4b\u524d\u8bf4\u8fc7, \u6709\u7684\u65f6\u5019\u524d\u9762\u7684\u5185\u5bb9\u4e5f\u548c\u540e\u9762\u7684\u5185\u5bb9\u6709\u5173, \u56e0\u6b64\u65f6\u95f4\u4ece\u5de6\u5230\u53f3\u662f\u4e0d\u5b8c\u5168\u7684, \u56e0\u4e3a\u521a\u521a\u8bf4\u7684\u8fd9\u79cd\u9700\u6c42\u5e76\u6ca1\u6709\u4f53\u73b0\u6216\u8005\u8bf4\u6ee1\u8db3. </p> <p></p> <p>\u90a3\u4e48\u8ba1\u7b97\u5c06\u4f1a\u4ece\u5934\u4e24\u5934\u90fd\u5404\u81ea\u5f00\u59cb, \u6ce8\u610f, \u8fd9\u91cc\u4ece\u53f3\u5230\u5de6\u7684\u8ba1\u7b97\u5bf9\u4e8e\u53e6\u4e00\u5934\u6765\u8bf4\u662f\u6b63\u5411\u4f20\u64ad; \u6362\u800c\u8a00\u4e4b, \u8fd9\u4e2a\u7f51\u7edc\u7684\u6b63\u5411\u4f20\u64ad\u548c\u53cd\u5411\u4f20\u64ad\u90fd\u662f\u4e24\u4e2a\u65b9\u5411\u4e0a\u9762\u90fd\u4f1a\u8fdb\u884c\u7684. </p> <p>\u5f53\u7136, \u8f93\u51fayhat\u7684\u65b9\u6cd5\u5f53\u7136\u8981\u66f4\u6539, \u5c06\u4e24\u4e2a<code>a&lt;t&gt;</code>\u8fdb\u884c\u62fc\u63a5,\u7136\u540e\u7ecf\u8fc7\u6743\u91cd\u77e9\u9635\u548cbias, \u901a\u8fc7softmax\u6700\u540e\u7ed9\u51fa\u9884\u6d4b. \u8fd9\u79cd\u601d\u8def\u5176\u5b9e\u76f8\u5f53straight</p>"},{"location":"sequence%20model/sequence_model.html#deep-rnn","title":"Deep RNN","text":"<p>\u4e4b\u524d\u7684\u7f51\u7edc\u8bbe\u8ba1\u5df2\u7ecf\u5341\u5206\u4e0d\u9519\u4e86, \u4f46\u662f\u4e3a\u4e86\u9c81\u68d2\u6027, \u6211\u4eec\u9700\u8981\u7eb5\u5411\u66f4\u6df1\u4e00\u70b9\u7684\u7f51\u7edc, \u5373\u62df\u5408\u51fa\u6765\u66f4\u590d\u6742\u7684\u6743\u91cd\u548c\u504f\u5dee\u77e9\u9635. </p> <p></p> <p>\u53ef\u4ee5\u770b\u5230, \u6700\u4e0b\u9762\u7684\u4e00\u884c\u5c31\u662f\u4e4b\u524d\u8c08\u5230\u7684RNN\u7f51\u7edc, \u7136\u540e\u8fd9\u6837\u7684\u7f51\u7edc\u80fd\u591f\u5806\u53e0. \u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u4e9b\u5355\u5143, \u4f8b\u5982<code>a[2]&lt;3&gt;</code>\u6765\u8bf4, \u5b83\u63a5\u53d7\u7684\u65f6\u5019, <code>a[1]&lt;3&gt; a[2]&lt;3&gt;</code>\u662f\u9700\u8981\u62fc\u63a5\u7136\u540e\u7ecf\u8fc7\u6743\u91cd\u548c\u504f\u5dee\u77e9\u9635\u548c\u6fc0\u6d3b\u51fd\u6570\u7684. \u503c\u5f97\u6ce8\u610f\u7684\u662f, \u4e00\u884c\u91cc\u9762\u7684\u6743\u91cd\u548c\u504f\u5dee\u77e9\u9635\u662f\u5171\u4eab\u7684. \u5f53\u7136, \u6bcf\u4e00\u4e2a\u5355\u5143\u53ef\u4ee5\u9009\u62e9LSTM OR GRU. </p>"},{"location":"sequence%20model/sequence_model.html#nlp-and-word-embedding","title":"NLP and Word Embedding","text":""},{"location":"sequence%20model/sequence_model.html#word-representation","title":"Word representation","text":"<p>\u4e4b\u524d, \u5355\u8bcd\u7684\u8868\u8fbe\u5f62\u5f0f\u90fd\u662fone-hot \u72ec\u70ed\u7f16\u7801. \u8fd9\u79cd\u5efa\u7acbcorpus\u7684\u65b9\u5f0f\u5f53\u7136\u662f\u4e00\u79cd\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6cd5, \u4f46\u662f\u5b83\u4e5f\u6709\u7f3a\u70b9: \u5b83\u628a\u6bcf\u4e2a\u5355\u8bcd\u90fd\u5b64\u7acb\u8d77\u6765, \u5bfc\u81f4\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u5f88\u5dee. </p> <p>\u4efb\u610f\u4e24\u4e2a\u72ec\u70ed\u7f16\u7801\u5411\u91cf\u7684\u5185\u79ef\u90fd\u662f\u96f6, \u4ee3\u8868\u8fd9\u4e24\u4e2a\u5411\u91cf\u7ebf\u6027\u65e0\u5173, \u4f46\u662f\u76f4\u89c9\u4e0a\u8fd9\u6709\u70b9\u4e0d\u5bf9\u52b2. \u56e0\u4e3a\u660e\u663e, \u82f9\u679c\u548c\u6a59\u5b50\u5e94\u8be5\u662f\u4e24\u4e2a\u975e\u5e38\u63a5\u8fd1\u7684\u5355\u8bcd, \u4f46\u662f\u4e24\u4e2a\u5355\u8bcd\u7684\u72ec\u70ed\u7f16\u7801\u5411\u91cf\u5374\u6beb\u65e0\u5173\u7cfb, \u8fd9\u5408\u7406\u5417? </p> <p></p> <p>\u770b\u4e0a\u9762\u8fd9\u5f20\u56fe, \u4e0d\u96be\u53d1\u73b0, \u6211\u4eec\u5c1d\u8bd5\u7528\u4e00\u79cd\"\u7279\u5f81\u5f52\u7c7b\"\u6765\u7ed9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u753b\u4e0a\u6807\u7b7e. \u8fd9\u79cd\u601d\u7ef4\u5176\u5b9e\u5f88\u5bb9\u6613\u8ba4\u540c, \u56e0\u4e3a\u5176\u5b9e\u6211\u4eec\u4eba\u7c7b\u8ba4\u77e5\u4e8b\u7269\u4e5f\u662f\u6709\u76f8\u4f3c\u7684\u89c4\u5f8b\u7684. \u90a3\u4e48\u5728\u9047\u5230\u4e0a\u56fe\u53f3\u4e0b\u89d2\u7684\u4f8b\u5b50, \u6a21\u578b\u5bb9\u6613\u8f7b\u677e\u77e5\u9053\u4e24\u4e2a\u5730\u65b9\u90fd\u662fJuice, \u56e0\u4e3a\u82f9\u679c\u6a59\u5b50\u7684\u7279\u5f81\u5411\u91cf\u5728\u7edd\u5927\u90e8\u5206\u4e0a\u9762\u90fd\u662f\u5341\u5206\u63a5\u8fd1\u7684. </p>"},{"location":"sequence%20model/sequence_model.html#property-of-words-embedding","title":"Property of words embedding","text":"<p>\u8bcd\u5d4c\u5165\u8fd8\u6709\u8fd9\u610f\u60f3\u4e0d\u5230\u7684\u6027\u8d28, \u6bd4\u5982\u8bf4\u76f8\u4f3c\u5ea6analogy</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0, \u6709\u4e86\u8fd9\u79cd\u8bcd\u5d4c\u5165\u8868\u8fbe\u5f62\u5f0f, \u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\u90fd\u76d8\u6d3b\u4e86. </p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0, \u5355\u8bcd\u7684\"\u76f8\u8fd1\u7a0b\u5ea6\"\u51e0\u4e4e\u7b49\u4ef7\u4e8e\u4e24\u4e2a\u5411\u91cf\u76f8\u7b49, \u56e0\u6b64\u627e\u5230\u8fd9\u4e2a\u5355\u8bcdw\u5c31\u53ef\u4ee5\u4f7f\u7528:</p> <p><code>argmax(...) // \u56fe\u4e2d\u7684\u5f0f\u5b50</code>, \u503c\u5f97\u6ce8\u610f\u7684\u662f, \u8fd9\u4e2a\u8bb0\u53f7\u5728\u8bba\u6587\u4e2d\u975e\u5e38\u5e38\u89c1  \u503c\u5f97\u4e00\u63d0\u7684\u662f, \u5de6\u8fb9\u8fd9\u4e2a\u793a\u610f\u56fe\u5176\u5b9e\u4e0d\u662f\u4e8c\u7ef4\u4e2d\u7684, \u5b9e\u9645\u4e0a\u662f\u9ad8\u7ef4\u4e2d\u7684\u4e24\u4e2a\u5e73\u884c\u5411\u91cf. \u90a3\u4e48\u4e8b\u5b9e\u4e0a, \u6709\u6ca1\u6709\u6f5c\u7a7a\u95f4\u7ef4\u5ea6\u6620\u5c04\u5230\u4e8c\u7ef4\u7684\u6620\u5c04? \u6709, \u53eb\u505at-SNE, \u4f46\u662f\u8fd9\u4e2a\u6620\u5c04\u975e\u5e38\u590d\u6742\u800c\u4e14\u975e\u5e38\u7684\u975e\u7ebf\u6027, \u6240\u4ee5\u8bf4\u6620\u5c04\u8fc7\u6765\u7684\u8fd9\u4e24\u4e2a\u5411\u91cf\u7edd\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u6ca1\u529e\u6cd5\u6307\u671b\u5e73\u884c\u4e86. </p> <p>\u90a3\u4e48\u8fd9\u4e2a\u7b97\u6cd5\u53eb\u505a<code>cosine similarity</code>, \u5982\u56fe: </p> <p></p> <p>\u8bf4\u767d\u4e86, \u5c31\u662f\u6c42\u9ad8\u7ef4\u4e2d\u4e24\u4e2a\u5411\u91cf\u7684\u4f59\u5f26\u5939\u89d2, \u7136\u540e\u8fd9\u4e2a\u89d2\u5c3d\u53ef\u80fd\u5730\u4e3a0, \u6240\u4ee5\u8bf4\u662fcos\u503c\u5c3d\u53ef\u80fd\u5730\u5927(\u5c3d\u53ef\u80fd\u63a5\u8fd11)</p>"},{"location":"sequence%20model/sequence_model.html#embedding-matrix","title":"Embedding Matrix","text":"<p>\u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u5c06\u72ec\u70ed\u7f16\u7801\u5d4c\u5165\u6f5c\u7a7a\u95f4\u4e2d\u7684\u65f6\u5019, \u4e8b\u5b9e\u4e0a\u6211\u4eec\u662f\u5728\u8bad\u7ec3\u4e00\u4e2a\u5d4c\u5165\u77e9\u9635: </p> <p></p> <p>\u6709\u4e86\u8fd9\u4e2a\u77e9\u9635, \u90a3\u4e48\u4e58\u4ee5\u72ec\u70ed\u5411\u91cf\u5c31\u53ef\u4ee5\u83b7\u5f97\u6f5c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u5411\u91cf, \u90a3\u4e48\u5982\u4f55\u8bad\u7ec3\u8fd9\u4e2a\u77e9\u9635\u5462? </p> <p>\u5386\u53f2\u4e0a, \u4e00\u5f00\u59cb\u6709\u975e\u5e38\u591a\u590d\u6742\u7684\u7b97\u6cd5\u5c1d\u8bd5\u5b66\u4e60\u8fd9\u4e2a\u77e9\u9635, \u4f46\u662f\u968f\u7740\u4e0d\u65ad\u7684\u52aa\u529b, \u7b97\u6cd5\u8d8a\u6765\u8d8a\u7b80\u4ecb; \u90a3\u4e48\u5148\u4ece\u5197\u6742\u7684\u7b97\u6cd5\u5f00\u59cb\u8bf4\u8d77: </p> <p></p> <p>\u5982\u4e0a\u56fe, E\u77e9\u9635\u4e00\u5f00\u59cb\u662f\u968f\u673a\u521d\u59cb\u5316\u7684, \u7136\u540e\u4e58\u5728\u6bcf\u4e2a\u72ec\u70ed\u5411\u91cf\u4e0a\u9762, \u5f97\u5230\u6f5c\u7a7a\u95f4\u7ef4\u5ea6\u7684\u77e9\u9635. \u7136\u540e\u56fa\u5b9a\u4e00\u4e2a\u5386\u53f2\u7a97\u53e3, \u53ea\u5173\u6ce8\u51e0\u4e2a\u5355\u8bcd(\u8fd9\u662f\u4e00\u4e2ahyperparameter), \u6765\u9884\u6d4b\u4e0b\u9762\u4e00\u4e2a\u5355\u8bcd. \u7136\u540e\u8fd9\u51e0\u4e2a\u5355\u8bcd\u2014\u2014\u8fd9\u91cc\u662f\u56db\u4e2a\u2014\u2014\u5411\u91cf\u5806\u53e0\u5728\u4e00\u8d77, \u5f62\u6210\u4e00\u4e2a1800\u7ef4\u5ea6\u7684\u5411\u91cf, \u7136\u540e\u8f93\u5165\u8fdb\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc, \u6700\u540e\u7ecf\u8fc7\u4e00\u4e2asoftmax, \u7136\u540e\u5e0c\u671b\u5b83\u9884\u6d4b\u51fa\u6765\u7684\u7ed3\u679c\u662fjuice. </p> <p>\u6ce8\u610f\u7684\u662f, \u6240\u6709\u72ec\u70ed\u5411\u91cf\u4e58\u4e0a\u7684E\u90fd\u662f\u6743\u91cd\u5171\u4eab\u7684, \u5e76\u4e14\u8fd9\u4e2a\u795e\u7ecf\u5c42\u548csoftmax\u5c42\u7684\u6743\u91cd\u548c\u504f\u5dee\u90fd\u662f\u5171\u4eab\u7684. \u6240\u4ee5\u8fd9\u4e5f\u8c8c\u4f3c\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1\u5386\u53f2\u7a97\u53e3\u4e86: \u8981\u6743\u91cd\u80fd\u5171\u4eab, \u8bf4\u660e\u7ef4\u5ea6\u4e0d\u80fd\u6539\u53d8, \u90a3\u4e48\u5c31\u5e72\u8106\u89c4\u5b9a\u8f93\u5165\u8fdb\u7684\u5355\u8bcd\u6570\u91cf.</p> <p>\u8fd9\u4e2a\u7b97\u6cd5\u5176\u5b9e\u5df2\u7ecf\u5f88\u597d\u4e86. \u4e0d\u59a8\u8bbe\u60f3, \u8bad\u7ec3\u7684\u65f6\u5019, \u8bed\u6599\u5e93\u91cc\u9762\u4e00\u822c\u6765\u8bf4Juice\u524d\u9762\u51fa\u73b0\u7684\u5355\u8bcd\u4e00\u822c\u90fd\u662f\u82f9\u679c\u9999\u8549\u68a8\u7b49\u6c34\u679c, \u8fd9\u6837\u7684\u8bdd, \u5b66\u4e60\u7684\u65f6\u5019, \u8fd9\u4e9b\u6c34\u679c\u7684\u5d4c\u5165\u540e\u7684\u5411\u91cf\u5c31\u5e94\u8be5\u5341\u5206\u63a5\u8fd1. \u8fd9\u6b63\u662f\u6211\u4eec\u5e0c\u671b\u7684\u5d4c\u5165\u77e9\u9635\u80fd\u591f\u5b9e\u73b0\u7684\u76ee\u6807. </p> <p>\u90a3\u4e48\u5728\u9009\"\u54ea\u4e9b\u8bcd\u4f5c\u4e3a\u63d0\u793a\"\u65b9\u9762, \u7b97\u6cd5\u5c31\u53ef\u4ee5\u6709\u975e\u5e38\u591a\u4e86, \u4f8b\u5982\u63a5\u4e0b\u6765\u7684word2vec</p> <p></p> <p>\u63a5\u4e0b\u6765, \u8981\u9686\u91cd\u4ecb\u7ecdword2vec model\u4e86</p>"},{"location":"sequence%20model/sequence_model.html#word2vec-model","title":"word2vec model","text":""},{"location":"sequence%20model/sequence_model.html#skip-gram","title":"skip-gram","text":"<p>\u5728\u4e00\u4e2a\u53e5\u5b50\u91cc\u9762\u9009\u5b9a\u4e00\u4e2acontext, \u5176\u4f5c\u4e3a\u8f93\u5165x; \u7136\u540e\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u9009\u53d6\u4e00\u4e2a\u5730\u65b9\u7684\u5355\u8bcd\u4f5c\u4e3ay, \u7136\u540e\u5e0c\u671b\u6a21\u578b\u80fd\u591f\u8f93\u5165x, \u7136\u540e\u9884\u6d4by</p> <p></p> <p></p> <p>\u4f46\u662f\u6709\u4e24\u4e2a\u7ec6\u8282\u503c\u5f97\u63d0, \u89c1\u4e0b\u56fe: </p> <p></p> <p>\u9996\u5148\u5c31\u662f\u5728softmax\u7684\u65f6\u5019,\u56e0\u4e3a\u8981\u6240\u6709\u7684\u503c\u90fd\u8981\u8ba1\u7b97e^x, \u76f8\u5f53\u4e8e\u4f60\u8981\u904d\u5386\u6574\u4e2a\u8bed\u6599\u5e93(vocab_size)\u4e2a\u6570\u5b57, \u8fd9\u7b80\u76f4\u662f\u707e\u96be! \u56e0\u6b64\u8bbe\u8ba1\u4e86\u4e00\u79cdhierarchical softmax:(from kimi)</p> <ol> <li>\u6784\u5efa\u4e8c\u53c9\u6811\uff1a\u9996\u5148\uff0c\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u7c7b\u522b\u3002\u6811\u7684\u7ed3\u6784\u901a\u5e38\u53d6\u51b3\u4e8e\u7c7b\u522b\u4e4b\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\u3002</li> <li>\u7f16\u7801\u8def\u5f84\uff1a\u5bf9\u4e8e\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a0\u62161\u7684\u7f16\u7801\u6765\u8868\u793a\u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u8def\u5f84\u3002\u5728\u4e8c\u53c9\u6811\u4e2d\uff0c\u5411\u5de6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u75280\u8868\u793a\uff0c\u5411\u53f3\u5b50\u8282\u70b9\u7684\u8def\u5f84\u75281\u8868\u793a\u3002</li> <li>\u8ba1\u7b97\u5f97\u5206\uff1a\u5bf9\u4e8e\u8f93\u5165\u6837\u672c\uff0c\u6a21\u578b\u9996\u5148\u901a\u8fc7\u4e00\u4e9b\u53c2\u6570\uff08\u901a\u5e38\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\uff09\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u5f97\u5206\u3002\u8fd9\u4e2a\u5f97\u5206\u662f\u901a\u8fc7\u4e00\u4e2a\u53ef\u5b66\u4e60\u7684\u6743\u91cd\u5411\u91cf\u548c\u8f93\u5165\u7279\u5f81\u7684\u70b9\u79ef\u5f97\u5230\u7684\u3002</li> <li>\u8def\u5f84\u5f97\u5206\uff1a\u5bf9\u4e8e\u76ee\u6807\u7c7b\u522b\uff0c\u6a21\u578b\u4f1a\u8ba1\u7b97\u4ece\u6839\u8282\u70b9\u5230\u8be5\u7c7b\u522b\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u5f97\u5206\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u8def\u5f84\u7f16\u7801\u4e0e\u8282\u70b9\u5f97\u5206\u8fdb\u884c\u70b9\u79ef\u6765\u5b9e\u73b0\u7684\u3002</li> <li>\u5f52\u4e00\u5316\uff1a\u4f7f\u7528\u8def\u5f84\u5f97\u5206\uff0c\u6a21\u578b\u8ba1\u7b97\u4ece\u6839\u8282\u70b9\u5230\u76ee\u6807\u7c7b\u522b\u7684\u8def\u5f84\u4e0a\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u6982\u7387\u3002\u8fd9\u662f\u901a\u8fc7\u5c06\u8def\u5f84\u5f97\u5206\u901a\u8fc7\u4e00\u4e2a\u975e\u7ebf\u6027\u6fc0\u6d3b\u51fd\u6570\uff08\u901a\u5e38\u662fsigmoid\u51fd\u6570\uff09\u6765\u5b9e\u73b0\u7684\uff0c\u4ece\u800c\u786e\u4fdd\u6240\u6709\u8def\u5f84\u7684\u6982\u7387\u4e4b\u548c\u4e3a1\u3002</li> <li>\u635f\u5931\u51fd\u6570\uff1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\uff0c\u901a\u5e38\u662f\u4ea4\u53c9\u71b5\u635f\u5931\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\uff0c\u635f\u5931\u662f\u5176\u771f\u5b9e\u7c7b\u522b\u8def\u5f84\u7684\u8d1f\u5bf9\u6570\u4f3c\u7136\u3002</li> <li>\u53cd\u5411\u4f20\u64ad\uff1a\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u6765\u66f4\u65b0\u6a21\u578b\u7684\u6743\u91cd\uff0c\u4ee5\u51cf\u5c11\u635f\u5931\u51fd\u6570\u7684\u503c\u3002</li> </ol> <p>\u5176\u6b21\u5c31\u662f\u9009\u62e9context\u7684\u624b\u6cd5\u4e86, \u867d\u7136\u8bf4\u76f4\u89c9\u4e0a\u6765\u770b, \u968f\u673a\u9009\u4e0d\u5c31\u597d\u4e86\u5417? \u4f46\u662f\u8f6c\u5934\u4e00\u60f3, \u5982\u679c\u771f\u7684\u662f\u8fd9\u6837, \u90a3\u4e48a the is are he she\u7b49\u5355\u8bcd\u5c06\u4f1a\u51fa\u73b0\u975e\u5e38\u591a\u6b21, \u4f46\u662fapple orange\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u4f1a\u76f8\u5bf9\u6765\u8bf4\u8f83\u5c11, \u751a\u81f3\u662fdurian(\u69b4\u83b2)\u8fd9\u79cd\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u4f1a\u5fae\u4e4e\u5176\u5fae, \u4f46\u662f\u6211\u4eec\u53c8\u5176\u5b9e\u5341\u5206\u5e0c\u671b\u6a21\u578b\u5b66\u5230durian\u8fd9\u4e2a\u5355\u8bcd\u7684\u7279\u5f81\u7684. </p> <p>\u56e0\u6b64\u5728context\u5355\u8bcd\u7684\u9009\u62e9\u5206\u5e03\u4e0a\u9762, \u5176\u5b9e\u662f\u4f1a\u505a\u624b\u811a\u7684. </p>"},{"location":"sequence%20model/sequence_model.html#negative-sampling","title":"Negative sampling","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6210\u4e86skip-gram\u5b8c\u6210\u4e86\u7684\u4efb\u52a1, \u4f46\u662f\u5374\u66f4\u52a0\u7b80\u5355\u7684\u7b97\u6cd5. </p> <p>\u5728\u9009\u62e9context\u4e4b\u540e\u5728\u8303\u56f4\u5185\u518d\u9009\u51fa\u4e00\u4e2a\u5355\u8bcd\u7684\u57fa\u7840\u4e4b\u4e0a, \u6211\u4eec\u5728\u5b57\u5178\u91cc\u9762\u968f\u673a\u9009\u4e00\u4e9b\u5355\u8bcd, \u7136\u540e\u6807\u8bb0\u5173\u7cfb\u4e3a0. \u76f8\u53cd\u5730, context\u548c\u9009\u51fa\u7684\u5355\u8bcd\u7684\u5173\u7cfb\u5c31\u662f1. </p> <p>\u5b57\u5178\u91cc\u9762\u9009\u51fa\u591a\u5c11\u4e2a\u5462? \u4e00\u822c\u6765\u8bf4, \u8bed\u6599\u5e93\u8d8a\u5c0f, k\u8d8a\u5927</p> <p></p> <p></p> <p>\u4f7f\u7528\u4e86\u8d1f\u91c7\u6837\u4e4b\u540e, \u4e0d\u518d\u8ba1\u7b97softmax\u4e86, \u800c\u662f\u8f6c\u5316\u4e3a\u8bad\u7ec310000\u4e2alogistic regression\u4e86. \u6bcf\u4e00\u6b21\u8bad\u7ec3\u4e2d, \u6709k\u4e2a\u8d1f\u6837\u672c, \u90a3\u4e48\u5c31\u4f1a\u8bad\u7ec31+k\u4e2a\u4e8c\u5206\u5668\u7684\u53c2\u6570. \u56e0\u6b64\u8ba1\u7b97\u91cf\u6781\u5927\u51cf\u5c11\u4e86. </p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f, \"\u968f\u673a\u4ece\u5b57\u5178\u91cc\u9762\u9009\u5355\u8bcd\"\u4ecd\u7136\u4e0d\u5e94\u8be5\u771f\u7684\u662f\"\u968f\u673a\". Emperically, \u9009\u4e2d\u5355\u8bcd\u7684\u6982\u7387\u5206\u5e03\u5982\u4e0b: </p> <p></p>"},{"location":"sequence%20model/sequence_model.html#sentiment-classification","title":"Sentiment classification","text":"<p>\u5c1d\u8bd5\u4ecetext\u63a8\u6d4b\u51fa\u60c5\u611f\u7684\u7a0b\u5ea6. \u4f8b\u5982\u5bf9\u4e00\u4e2a\u9910\u9986\u7684\u8bc4\u4ef7, \u5982\u4f55\u4ece\u4e00\u6bb5\u6587\u672c\u63a8\u6d4b\u51fa\u5ba2\u6237\u5fc3\u4e2d\u9910\u9986\u7684\u5206\u6570\u5462? </p> <p></p> <p>\u4e00\u79cd\u65b9\u6cd5\u662f\u6240\u6709\u5355\u8bcd\u4e58\u4ee5\u5d4c\u5165\u77e9\u9635\u4e4b\u540e, \u6240\u6709\u7684\u5d4c\u5165\u7a7a\u95f4\u7ef4\u5ea6\u7684\u5411\u91cf\u6c42\u548c\u53d6\u5e73\u5747, \u7136\u540e\u8fd9\u4e00\u4e2a\u5411\u91cf\u8f93\u5165\u8fdbsoftmax. \u8fd9\u8c8c\u4f3c\u5df2\u7ecf\u5f88\u4e0d\u9519\u4e86, \u4f46\u662f\u5176\u5b9e\u4e5f\u6709\u95ee\u9898: \u4e0a\u56fe\u4e2d\u7684\u8d1f\u9762\u8bc4\u8bba, \u51fa\u73b0\u4e86\u4e09\u6b21good, \u8fd9\u5f88\u53ef\u80fd\u5bfc\u81f4\u6700\u540e\u5224\u65ad\u7684\u60c5\u611f\u662f\u6b63\u9762\u7684. </p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898, \u9700\u8981\u610f\u8bc6\u5230\"\u4f4d\u7f6e\"\u4fe1\u606f\u7684\u5b58\u5728, \u56e0\u4e3anot\u7684\u5b58\u5728, \u6240\u4ee5\u8fd9\u91cc\u7684good\u4e0d\u662fgood. \u6240\u4ee5\u8bf4, RNN\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a. </p> <p></p>"},{"location":"sequence%20model/sequence_model.html#sequence-to-sequence-model","title":"Sequence to sequence model","text":""},{"location":"sequence%20model/sequence_model.html#basic-model","title":"Basic Model","text":"<p>\u9996\u5148\u662fsequence to sequence model, \u8003\u8651\u4e00\u4e2aRNN\u6a21\u578b, \u5355\u5143\u53ef\u4ee5\u662fGNU\u6216\u8005LSTM, \u7136\u540e\u8981\u6c42\u6cd5\u82f1\u4e92\u8bd1. \u90a3\u4e48\u6cd5\u8bed\u6587\u672c\u4e4b\u540e, \u6bcf\u4e2a\u5355\u8bcd\u90fd\u6309\u7167RNN\u7684\u6d41\u7a0b\u8fdb\u5165\u6a21\u578b, \u4f46\u662f\u6700\u540e\u8f93\u51fa\u7684\u662f\u4e00\u4e2a\u7f16\u7801\u540e\u7684\u77e9\u9635, \u7136\u540e\u518d\u7528\u89e3\u7801\u5668\u53bb\u8f93\u51fa\u6587\u672c, \u6bcf\u8f93\u51fa\u4e00\u4e2a\u5355\u8bcd\u4e4b\u540e, \u8fd9\u4e2a\u8f93\u51fa\u7684\u5355\u8bcd\u7528\u4f5c\u4e0b\u4e00\u4e2a\u5355\u5143\u7684\u8f93\u5165(\u5f53\u7136\u8fd9\u4e00\u5355\u5143\u7684\u9690\u542b\u7279\u5f81\u4e5f\u4f1a\u8f93\u5165\u4e0b\u4e00\u4e2a\u5355\u5143)</p> <p></p> <p>\u5176\u6b21\u5c31\u662f\u7ecf\u5178\u7684image captioning\u4efb\u52a1. \u7ed9\u4e00\u5f20\u56fe\u7247, \u7136\u540e\u8981\u6c42\u751f\u6210captioning(\u63cf\u8ff0)\u6587\u5b57, \u90a3\u4e48\u5c31\u53ef\u628a\u5377\u79ef\u4e4b\u540e\u7684\u7279\u5f81\u77e9\u9635\u8f93\u5165\u8fdbRNN\u6a21\u578b.</p> <p></p>"},{"location":"sequence%20model/sequence_model.html#the-most-possible-sentence","title":"The most possible sentence","text":"<p>\u4e00\u4e2alanguang model \u4e00\u822c\u6765\u8bf4\u8f93\u5165\u7684x0\u90fd\u662f\u96f6\u5411\u91cf, \u4ece\u800c\u63a5\u8fde\u8f93\u51fa\u6587\u672c. \u90a3\u4e48seq2seq\u5462? \u524d\u9762\u662f\u4e00\u4e2aRNN\u6a21\u578b, \u8f93\u51fa\u4e00\u4e2a\"\u7279\u5f81\u9690\u542b\u77e9\u9635\"\u8f93\u5165RNN\u6a21\u578b, \u7136\u540e\u8f93\u51fa\u6587\u672c, \u8fd9\u8f93\u51fa\u90e8\u5206\u548clanguage model\u975e\u5e38\u76f8\u4f3c, \u56e0\u6b64, \u7ffb\u8bd1\u4e5f\u88ab\u79f0\u4e3a\"Conditional Language Model\".</p> <p></p> <p>\u5728\u7ffb\u8bd1\u7684\u8f93\u51fa\u90e8\u5206, \u6211\u4eec\u5e0c\u671b\u627e\u5230\u5408\u9002\u7684y(\u7ffb\u8bd1\u5185\u5bb9)\u4f7f\u5f97\u6982\u7387\u6700\u5927(x\u662f\u6cd5\u8bed\u53e5\u5b50). \u90a3\u4e48\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528\u4e00\u79cd\u53eb\u505abeam search(\u675f\u641c\u7d22)\u7684\u7b97\u6cd5. </p> <p>\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7528\u8d2a\u5fc3\u7b97\u6cd5Greedy search? \u8d2a\u5fc3\u7b97\u6cd5\u5c31\u662f\u7b2c\u4e00\u4e2a\u9009\u62e9\u53ef\u80fd\u6027\u6700\u5927\u7684\u9009\u62e9, \u7136\u540e\u6839\u636e\u8fd9\u4e2a\u9009\u51fa\u53ef\u80fd\u6027\u6700\u5927\u7684\u7b2c\u4e8c\u4e2a, \u4ee5\u6b64\u7c7b\u63a8. \u4f46\u662f, \u5c40\u90e8\u6700\u4f18\u4e0d\u4ee3\u8868\u5168\u5c40\u6700\u4f18. \u4f46\u662f\u6211\u4eec\u53c8\u4e0d\u80fd\u5217\u4e3e\u51fa\u5168\u90e8\u7684\u53ef\u80fd\u6027, \u6bd5\u7adf<code>vocab_size</code>\u975e\u5e38\u5927. \u6240\u4ee5\u6211\u4eec\u7528\u4e00\u79cd\u8fd1\u4f3c\u7b97\u6cd5: Beam Search</p>"},{"location":"sequence%20model/sequence_model.html#-","title":"\u5b9a\u5411\u641c\u7d22--\u675f\u641c\u7d22","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u80fd\u9009\u51fa\u53ef\u80fd\u6027\u6700\u5927\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd, \u4f46\u662f\u675f\u641c\u7d22\u4f1a\u8003\u8651\u51e0\u4e2a, \u8fd9\u91cc\u7684\"\u51e0\u4e2a\"\u5c31\u662fHyper-parameter <code>beam width</code>. \u5047\u5982\u8bf4\u8fd9\u91cc\u662f3, \u90a3\u4e48\u5c31\u4f1a\u9009\u53ef\u80fd\u6027\u6700\u5927\u7684\u4e09\u4e2a\u5355\u8bcd, \u7136\u540e\u4f1a\u50a8\u5b58\u8d77\u6765, \u5404\u81ea\u7528\u4e8e\u4e0b\u4e00\u6b65</p> <p></p> <p>\u63a5\u4e0b\u6765, \u8df3\u51fa\u6765\u7684\u8fd9\u8fd9\u4e09\u4e2a\u5355\u8bcd\u5206\u522b\u8ba1\u7b97vocab_size\u4e2a\u5355\u8bcd\u7684\u5404\u81ea\u7684\u6982\u7387\u5417, \u7136\u540e\u548c\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\u7684\u6982\u7387\u76f8\u4e58, \u5f97\u5230\u4e86<code>P(y1, y2 | x)</code>. \u4e00\u5171\u6709<code>beam_width*vocab_size</code>\u4e2a\u6982\u7387(\u8fd9\u91cc\u662f30000)\u4e2a, \u7136\u540e\u6311\u51fa\u4e09\u4e2a\u6982\u7387\u6700\u5927\u7684\u7ec4\u5408. </p> <p>\u5047\u5982\u8bf4\u662f<code>in September   jane is    jane visits</code>\u8fd9\u4e09\u4e2a\u7ec4\u5408\u7684\u6982\u7387\u662f\u6700\u5927\u7684, \u5219\u9ed8\u8ba4\u6211\u4eec\u5df2\u7ecf\u653e\u5f03\u4e86<code>september</code>\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u53ef\u80fd\u6027. </p> <p></p> <p>\u6700\u540e\u5f97\u5230\u7684\u4e09\u4e2a\u53e5\u5b50(\u5404\u81ea\u90fd\u662f<code>&lt;EOS&gt;</code>\u7ed3\u5c3e\u7684)\u4e2d\u6311\u51fa\u4e00\u4e2a\u6982\u7387\u6700\u5927\u7684\u53e5\u5b50.</p> <p>Refinements to beam search </p> <p></p> <p>\u6709\u4e00\u4e2a\u95ee\u9898: \u7531\u4e8e\u662f\u4e00\u5806\u6982\u7387\u5c0f\u4e8e0\u7684\u6570\u5b57\u76f8\u4e58, \u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u975e\u5e38\u975e\u5e38\u5c0f, \u4ee5\u81f3\u4e8e<code>floating part</code>\u751a\u81f3\u4e0d\u80fd\u88ab\u8ba1\u7b97\u673a\u7cbe\u786e\u8ba1\u7b97. \u56e0\u6b64\u4e3a\u4e86\u5b9e\u73b0\u8f6c\u6362, \u53ef\u4ee5\u4f7f\u7528\u5bf9\u6570</p> <p>\u90a3\u4e48\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898: \u65e2\u7136\u662f\u4e00\u5806log\u8d1f\u6570\u76f8\u52a0, \u60f3\u8981\u6982\u7387\u5c3d\u53ef\u80fd\u5730\u5927, \u4e0d\u662f\u76f8\u5f53\u4e8e\u751f\u6210\u7684\u5355\u8bcd\u6570\u91cf\u5c3d\u53ef\u80fd\u5c11\u5417? \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898, \u524d\u9762\u4f1a\u4e58\u4ee5\u4e00\u4e2a\u7cfb\u6570<code>1/Ty^\u03b1</code>, \u8d77\u5230length normalization\u7684\u4f5c\u7528. \u56e0\u6b64, \u7b2c\u4e09\u4e2a\u516c\u5f0f\u4e5f\u79f0\u4e3a<code>normalized log likelihood objective</code>(\u5f52\u4e00\u5316\u7684\u5bf9\u6570\u4f3c\u7136\u76ee\u6807\u51fd\u6570)</p> <p>\u90a3\u4e48\u5982\u4f55\u9009\u62e9Beam width\u5462? \u53c2\u6570\u8fc7\u5927, \u90a3\u4e48\u8ba1\u7b97\u4f1a\u66f4\u52a0\u7cbe\u786e, \u7ed3\u679c\u4e5f\u66f4\u6709\u53ef\u80fd\u662f\u53ef\u80fd\u6027\u6700\u5927\u7684, \u4f46\u662f\u4ee3\u4ef7\u662f\u975e\u5e38\u6d88\u8017\u8ba1\u7b97\u8d44\u6e90\u4e0e\u65f6\u95f4; \u53c2\u6570\u8fc7\u5c0f, \u90a3\u4e48\u8ba1\u7b97\u4e5f\u8bb8\u4e0d\u5982\u4e4b\u524d\u90a3\u4e48\u7cbe\u786e(\u5f53\u7136\u6bd4\u8d2a\u5fc3\u7b97\u6cd5\u662f\u597d\u5f88\u591a), \u4f46\u662f\u5bf9\u8ba1\u7b97\u8d44\u6e90\u548c\u65f6\u95f4\u7684\u6d88\u8017\u5c0f. </p> <p>\u675f\u641c\u7d22\u7b97\u6cd5\u662f\u4e00\u79cd\u8fd1\u4f3c\u641c\u7d22\u7b97\u6cd5, \u4e5f\u88ab\u79f0\u4e3a\u542f\u53d1\u5f0f(heuristic)\u641c\u7d22\u7b97\u6cd5</p> <p>Error analysis on beam search </p> <p></p> <p>\u5728\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d, \u6574\u4e2a\u6a21\u578b\u548cRNN\u4e0ebeam search\u6709\u5173, \u90a3\u4e48\u52a0\u5165\u8bf4\u8f93\u51fa\u4e86\u9519\u8bef\u7684\u7ed3\u679c, \u90a3\u4e48\u7a76\u7adf\u662f\u6a21\u578b\u4e2d\u7684\u54ea\u4e2a\u5730\u65b9\u51fa\u4e86\u95ee\u9898\u5462? </p> <p>\u5047\u5982\u8bf4ground truth\u8ba4\u4e3a\u662fy*, \u4f46\u662f\u7ed9\u4e86y^, \u90a3\u4e48\u53ef\u4ee5\u8ba9\u6a21\u578b\u8f93\u51fa\u4e00\u4e0b\u4e24\u4e2a\u6982\u7387, \u90a3\u4e48\u6709\u4e24\u79cd\u60c5\u51b5: </p> <ol> <li>y*\u7684\u6982\u7387\u66f4\u5927, \u90a3\u4e48\u8bf4\u660e\u660e\u660e\u662f<code>y*</code>\u5e94\u8be5\u88ab\u9009\u4e2d, \u4f46\u662fbeam search\u6ca1\u6709\u9009\u4e2d\u5b83, \u8bf4\u660e\u675f\u641c\u7d22\u7b97\u6cd5\u6709\u95ee\u9898 </li> <li>y*\u7684\u6982\u7387\u66f4\u5c0f, \u90a3\u4e48\u8bf4\u660e\u675f\u641c\u7d22\u7b97\u6cd5\u6ca1\u95ee\u9898, \u4f46\u662fRNN\u6a21\u578b\u9519\u8bef</li> </ol>"},{"location":"sequence%20model/sequence_model.html#bleu","title":"Bleu\u5f97\u5206","text":"<p>\u5728\u7ffb\u8bd1\u4efb\u52a1\u4e2d, \u7ffb\u8bd1\u8fc7\u6765\u7684\u53e5\u5b50\u8c8c\u4f3c\u662f\u6ca1\u6709ground truth\u7684, \u6bd5\u7adf\u5f88\u96be\u8bf4\u90a3\u4e2a\u7ffb\u8bd1\u662f\u6700\u597d\u7684. </p> <p>BLEU, \u5168\u79f0\u662f<code>bilingual evaluation understudy</code>(\u53cc\u8bed\u8bc4\u4f30\u66ff\u8865)</p> <p></p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u9762, MT, machine translation, \u660e\u663e\u662f\u4e00\u4e2a\u975e\u5e38\u7cdf\u7cd5\u7684\u7ffb\u8bd1, \u90a3\u4e48\u5982\u4f55\u8861\u91cf\u7cbe\u786e\u5ea6\u5462? \u5982\u679c\u8bf4\u4ec5\u4ec5\u662f\u5224\u65ad\u6bcf\u4e2a\u5355\u8bcd\u662f\u5426\u5728\u63d0\u4f9b\u7684\u53c2\u8003\u7ffb\u8bd1\u91cc\u9762, \u90a3\u4e48\u7ed3\u679c\u4ee4\u4eba\u5341\u5206\u8be7\u5f02, \u7adf\u7136\u662f7/7, \u660e\u663e\u53cd\u76f4\u89c9; \u56e0\u6b64, \u5f15\u5165\u4e86\u5f97\u5206\u4e0a\u9650, the\u8fd9\u4e2a\u5355\u8bcd\u6700\u591a\u57281\u4e2d\u51fa\u73b0\u4e24\u6b21, \u6240\u4ee5\u8bf4the\u5355\u8bcd\u5f97\u5206\u4e0a\u9650\u4e3a2, \u6240\u4ee5\u8bf4\u7cbe\u786e\u5ea6\u662f2/7</p> <p>\u4f46\u662f\u8fd9\u4e9b\u662f\u5355\u72ec\u7684\u5355\u8bcd, \u6709\u7684\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u8003\u8651<code>pairs of words</code>. </p> <p></p> <p>\u4e24\u4e2a\u5355\u8bcd\u4e24\u4e2a\u5355\u8bcd\u4e00\u770b, \u4e00\u5171\u67096\u7ec4; \u7136\u540e\u770b\u6bcf\u4e2a\u79cd\u7c7b\u5728\u5f15\u7528\u4e2d\u51fa\u73b0\u7684\u6700\u9ad8\u6b21\u6570(\u6bd4\u5982\u8bf4on the\u5728\u4e24\u4e2a\u5f15\u7528\u91cc\u9762\u90fd\u6709, \u6240\u4ee5\u8bf4\u6700\u9ad8\u6b21\u6570\u662f1, \u56e0\u6b64on the\u5f97\u5206\u662f1)</p> <p></p> <p>\u4e0a\u9762\u4e24\u4e2a\u60c5\u51b5, \u5206\u522b\u662fPn \u4e2dn\u4e3a1, 2\u7684\u4f8b\u5b50. \u6700\u540e\u5c31\u53ef\u4ee5\u5f15\u51faBleu\u5f97\u5206\u4e86:</p> <p></p> <p>\u6c42\u51faP1,2,3,4, \u7136\u540e\u7b97\u5e73\u5747\u6570\u7136\u540e\u4f5c\u4e3a\u6307\u6570, \u6700\u540e\u524d\u9762\u4f1a\u52a0\u4e0aBp\u60e9\u7f5a\u56e0\u5b50(brevity penalty)\u6765\u4e58\u6cd5\u751f\u6210\u53e5\u5b50\u5f88\u77ed\u7684\u60c5\u51b5. Bp\u53d6\u503c\u5982\u4e0a\u56fe. </p> <p>\u6ce8\u610f! BP otherwise\u7684\u60c5\u51b5\u7684\u516c\u5f0f\u7ed9\u9519\u4e86, \u5e94\u8be5\u662f:</p> <p><code>exp(1-reference_output_length/MT_output_length)</code></p>"},{"location":"sequence%20model/sequence_model.html#attention","title":"Attention \u6ce8\u610f\u529b\u673a\u5236","text":""},{"location":"sequence%20model/sequence_model.html#_1","title":"\u76f4\u89c2\u7406\u89e3","text":"<p>\u4eba\u7c7b\u5728\u7ffb\u8bd1\u957f\u53e5\u5b50\u7684\u65f6\u5019, \u901a\u5e38\u6765\u8bf4\u662f\u770b\u4e00\u90e8\u5206\u7136\u540e\u7ffb\u8bd1\u4e00\u90e8\u5206, \u518d\u770b\u4e00\u90e8\u5206\u7136\u540e\u7ffb\u8bd1\u4e00\u90e8\u5206, \u901a\u5e38\u90e8\u5206\u7684\u5212\u5206\u662f\u6839\u636e\u8bcd\u7ec4, \u5e38\u89c1\u77ed\u8bed\u6216\u8005\u662f\u4ece\u53e5\u7b49\u7b49\u6765\u7684. \u90a3\u4e48\u673a\u5668\u4e5f\u662f\u4e00\u6837, RNN\u5e8f\u5217\u5f88\u96be\u5904\u7406\u975e\u5e38\u957f\u7684\u53e5\u5b50, \u5c31\u50cf\u4eba\u7c7b\u7ffb\u8bd1\u7684\u53e5\u5b50\u4e0d\u662f\u8bb0\u4f4f\u6574\u4e2a\u539f\u53e5\u7136\u540e\u518d\u5f00\u59cb\u7ffb\u8bd1\u7684. \u6240\u4ee5\u8bf4\u8fd9\u91cc\u5f15\u5165\u6ce8\u610f\u529b\u673a\u5236. </p> <p>\u4e3a\u4e86\u5f15\u5165\u6ce8\u610f\u529b, \u6211\u4eec\u5e0c\u671b\u8f93\u51fa\u7ffb\u8bd1\u7684RNN\u5728\u8f93\u51fa\u5355\u8bcd\u7684\u65f6\u5019\u80fd\u77e5\u9053, \u6211\u91cd\u70b9\u5e94\u8be5\u5173\u6ce8\u54ea\u4e00\u4e2a\u5355\u8bcd. \u56e0\u6b64, \u770b\u6765\u989d\u5916\u7684\u53c2\u6570\u662f\u6709\u5fc5\u8981\u5f15\u5165\u7684</p> <p></p> <p>\u5728\u53cc\u5411RNN\u7684\u65f6\u5019, \u6bcf\u4e00\u4e2a\u5355\u5143\u90fd\u4f1a\u989d\u5916\u8bad\u7ec3\u4e00\u7c7b\u53c2\u6570; \u5bf9\u4e8e\u7b2ci\u4e2a\u5355\u8bcd\u6765\u8bf4, \u8bad\u7ec3:</p> <p><code>\u03b1&lt;t, i&gt;</code>\u53c2\u6570, \u4ee3\u8868\u8f93\u51faRNN\u5728\u8f93\u51fa\u7684\u65f6\u5019\u7b2ct\u4e2a\u8f93\u51fa\u7684\u5355\u8bcd\u5e94\u8be5\u8003\u8651\u539f\u53e5\u7b2ci\u4e2a\u5355\u8bcd\u7684\u6743\u91cd. \u90a3\u4e48\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d, \u5e0c\u671b\u7b2c\u4e00\u4e2a\u8f93\u51fa\u7684\u5355\u8bcd\u662fjane, \u90a3\u4e48\u5c31\u5e0c\u671b<code>\u03b1&lt;1, 1&gt;</code>\u5728\u4e2d\u975e\u5e38\u5927, \u4ee3\u8868\u9700\u8981\u5f88\u5927\u7a0b\u5ea6\u5730\u5c06jane\u5355\u8bcd\u7eb3\u5165\u8003\u91cf"},{"location":"sequence%20model/sequence_model.html#attention-model","title":"Attention Model","text":"<ul> <li> <p>\u8fd9\u4e2a\u6a21\u578b\u4e0b, \u5728\u53cc\u5411RNN\u4e2d, LSTM\u5355\u5143\u66f4\u4e3a\u5e38\u89c1 </p> </li> <li> <p>\u4e3a\u4e86notational convenience, \u7528<code>a&lt;t'&gt; = (a-&gt;&lt;t'&gt;, a&lt;-&lt;t'&gt;)</code>(\u62ec\u53f7\u4ee3\u8868concatenation)</p> </li> <li>\u6ce8\u610f\u529b\u6743\u91cd\u6bcf\u4e00\u4e2a\u90fd\u662f\u6574\u6570, \u4e14\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f93\u51faRNN\u7684\u5355\u5143\u6765\u8bf4, \u6240\u6709\u7684\u6743\u91cd\u4e4b\u548c\u4e3a1(\u7406\u6240\u5f53\u7136)</li> <li>\u8ba1\u7b97\u8f93\u5165\u8fdb\u8f93\u51faRNN\u5355\u5143\u7684\u53c2\u6570<code>c&lt;t&gt;</code>\u7684\u65b9\u5f0f\u5728\u53f3\u8fb9, \u662f\u6240\u6709\u7684a\u548c\u6743\u91cd\u03b1\u7684\u4e58\u79ef\u4e4b\u548c</li> <li>\u8f93\u51faRNN\u7684\u6bcf\u4e00\u4e2a\u5355\u5143\u63a5\u53d7: \u9690\u85cf\u72b6\u6001, \u4e0a\u4e00\u4e2a\u5355\u5143\u7684\u8f93\u51fa\u5355\u8bcd(\u9664\u4e86\u7b2c\u4e00\u4e2a\u5355\u5143), \u548c<code>c&lt;t&gt;</code></li> </ul> <p>\u90a3\u4e48\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e9b\u6743\u91cd\u5462? </p> <p></p> <p>\u5f88\u660e\u663e, \u8fd9\u4e9b\u6743\u91cd\u9996\u5148\u5e94\u8be5\u548ct'\u65f6\u523b\u7684\u6fc0\u6d3b\u53c2\u6570<code>a&lt;t'&gt;</code>\u76f8\u5173, \u4f46\u662f\u4e5f\u540c\u6837\u4e5f\u5e94\u8be5\u548c\u8f93\u51faRNN\u4e0a\u4e00\u4e2a\u5355\u5143\u7684\u9690\u85cf\u72b6\u6001\u6709\u5173. \u90a3\u4e48\u5982\u4f55\u8ba1\u7b97? \u8fd8\u662f\u76f8\u4fe1\u7384\u5b66\u5427! \u8bbe\u8ba1\u4e00\u4e2aMLP, \u7528\u8fd9\u4e2a\u5c0f\u578b\u795e\u7ecf\u7f51\u7edc\u53bb\u8f93\u51fa<code>e&lt;t, t'&gt;</code></p> <p>\u5f97\u5230\u4e86\u8fd9\u4e9b\u53c2\u6570, \u5c31\u53ef\u4ee5\u4f7f\u7528softmax\u4e86, \u56e0\u4e3asoftmax\u65e2\u80fd\u4fdd\u8bc1\u6240\u6709\u7684\u53c2\u6570\u662f\u6574\u6570, \u800c\u4e14\u4fdd\u8bc1\u6240\u6709\u7684\u53c2\u6570\u7684\u548c\u4e3a1, \u6ee1\u8db3\u4e86\u6211\u4eec\u6240\u6709\u7684\u9700\u6c42; \u8fd9\u5c31\u662f\u6ce8\u610f\u529b\u673a\u5236\u4e86(transformer\u4e2d\u7684\u6ce8\u610f\u529b\u548c\u8fd9\u91cc\u7684\u6ce8\u610f\u529b\u6709\u4e00\u70b9\u5c0f\u5dee\u522b)</p>"},{"location":"transformer_note/transformer_note.html","title":"Transformer","text":""},{"location":"transformer_note/transformer_note.html#_1","title":"\u7f16\u7801\u548c\u89e3\u7801","text":"<p>\u5982\u4eca\u53c8\u4e09\u4e2a\u4e3b\u6d41\u7684\u5173\u4e8etransformer\u7684\u6a21\u578b\uff1a\u6700\u53f3\u8fb9\u7684\u662fdecoder-only\uff0c\u53ea\u4fdd\u7559\u4e86\u89e3\u7801\u5668\uff0c\u64c5\u957f\u6587\u672c\u8f93\u51fa\u521b\u9020\uff1b\u6700\u5de6\u8fb9\u7684\u662f\u53ea\u4fdd\u7559\u4e86\u7f16\u7801\u5668\u7684\u90e8\u5206\uff0c\u4f8b\u5982BERT\uff0c\u64c5\u957f\u5b66\u4e60\u548c\u7406\u89e3\u8bed\u8a00\u7684\u5185\u5bb9\uff1b\u4e2d\u95f4\u7684\u662f\u4e24\u8005\u90fd\u4fdd\u7559\uff0c\u7528\u4e8e\u8f85\u52a9\u5de6\u53f3\u4e24\u4e2a\u5206\u53c9\u3002</p> <p>\u90a3\u4e48\u7f16\u7801\u548c\u89e3\u7801\u7684\u7801\u662f\u4ec0\u4e48\u5462\uff1f  \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5404\u79cd\u8bed\u8a00\u91cc\u9762\u90a3\u4e9b\u7b26\u53f7\u53d1\u97f3\u7b49\u7b49\u5f62\u5f0f\u4e0a\u7684\u4e0d\u540c\u5265\u79bb\u6389\u4e4b\u540e\uff0c\u5269\u4e0b\u6765\u7684\u5355\u7eaf\u7684\u8bed\u4e49\u5173\u7cfb\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u8fd9\u79cd\u8bed\u4e49\u5173\u7cfb\u5e94\u8be5\u8981\u6570\u5b57\u5316\u4f53\u7cfb\uff0c\u5e76\u4e14\uff0c\u6570\u503c\u4e0a\u5e94\u8be5\u80fd\u591f\u5448\u73b0\u8bed\u4e49\u5173\u7cfb\u3002\u89c1\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u8bf4\u7528\u9ad8\u7ef4\u5750\u6807\u6765\u4ee3\u8868\u5355\u8bcd\uff0c\u90a3\u4e48\uff1a </p> <p></p> <p>\u7334\u5b50\u548c\u9999\u8549\u5e94\u8be5\u8ddd\u79bb\u6a21\u5f88\u8fd1\uff0c\u4f46\u662f\u539f\u5b50\u80fd\u548c\u9999\u8549\u7684\u6a21\u5f88\u8fdc\uff0c\u8fd9\u4e2a\u9ad8\u7ef4\u5750\u6807\u5c31\u662f\u201c\u7801\u201d\u3002</p>"},{"location":"transformer_note/transformer_note.html#_2","title":"\u5347\u7ef4\u4e0e\u964d\u7ef4","text":"<p>\u90a3\u4e48\u76f4\u89c9\u4e0a\uff0c\u5e94\u8be5\u8981\u5bf9\u6700\u57fa\u7840\u7684\u8bed\u4e49\u5355\u5143\u8fdb\u884c\u6570\u5b57\u5316\uff0c\u90a3\u4e48\u5176\u5b9e\u8fd9\u79cd\u8bed\u4e49\u5355\u5143\u5176\u5b9e\u5c31\u662ftoken\uff0c\u6bd4\u5982\u8bf4\u82f1\u6587\u4e2d\u7684\u5b57\u6bcd\uff0c\u4e2d\u6587\u91cc\u9762\u7684\u5b57\u6216\u8bcd\uff0c\u751a\u81f3\u53ef\u4ee5\u662f\u82f1\u6587\u5355\u8bcd\u7684\u8bcd\u6839\u3002\u5e38\u89c1\u7684\u6570\u5b57\u5316token\u7684\u65b9\u6cd5\u662f\u6807\u8bb0\u5668\u548c\u72ec\u70ed\u7f16\u7801\u3002\u6807\u8bb0\u5668\u7684\u6570\u5b57\u5316\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5728\u4e00\u7ef4\u6570\u8f74\u4e0a\u9762\u4e00\u4e00\u5bf9\u5e94\uff1b\u800c\u72ec\u70ed\u7f16\u7801\u5c31\u662f\u5355\u72ec\u4e3a\u6bcf\u4e00\u4e2atoken\u5f00\u8f9f\u4e00\u4e2a\u7ef4\u5ea6\u3002\u8fd9\u662f\u4e24\u79cd\u6570\u5b57\u5316\u7684\u6781\u7aef\uff0c\u89c6\u89c9\u5316\u4f8b\u5b50\u89c1\u4e0b\uff1a</p> <p></p> <p>\u76f4\u89c9\u4e0a\uff0c\u5206\u8bcd\u5668\u6ca1\u6709\u5229\u7528\u7ef4\u5ea6\u4fe1\u606f\uff0c\u96be\u4ee5\u8868\u8fbe\u590d\u6742\u7684\u8bed\u5883\uff0c\u4f8b\u5982\u82f9\u679c\u9999\u8549\u68a8\u90fd\u662f\u975e\u5e38\u63a5\u8fd1\u7684\u6570\u5b57\uff0c\u4f46\u662f\u82f9\u679c\u8fd8\u53ef\u4ee5\u662f\u624b\u673a\u7684\u540d\u5b57\uff0c\u800c\u534e\u4e3a\u53ef\u80fd\u90fd\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u5b57\u4e86\uff0c\u8ddd\u79bb\u975e\u5e38\u8fdc\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u201c\u82f9\u679c\u201d\u548c\u201c\u534e\u4e3a\u201d\u5728\u6570\u8f74\u4e0a\u5e94\u8be5\u79bb\u5f97\u975e\u5e38\u8fd1\u3002\u800c\u72ec\u70ed\u7f16\u7801\u7ef4\u5ea6\u8fc7\u9ad8\uff0c\u4fe1\u606f\u975e\u5e38\u7a00\u758f\uff0ctoken\u4e4b\u95f4\u7684\u5173\u7cfb\u5e76\u6ca1\u6709\u7528\u201c\u6a21\u957f\u201d\u53bb\u4f53\u73b0\uff0c\u4ec5\u4ec5\u4f7f\u7528\u7ef4\u5ea6\u6765\u533a\u5206\u5f00\u3002</p> <p>\u90a3\u4e48\u5217\u4e3e\u5b8c\u4e86\u4e24\u4e2a\u6781\u7aef\u60c5\u51b5\uff0c\u5c31\u80fd\u7406\u89e3\uff1a\u60f3\u627e\u5230\u4e00\u79cd\u7ef4\u5ea6\u4e0d\u662f\u7279\u522b\u9ad8\uff0c\u4e14\u80fd\u5229\u7528\u6a21\u957f\u4fe1\u606f\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u90a3\u5c31\u662f\u201c\u6f5c\u7a7a\u95f4\u201d\u3002\u90a3\u4e48\u5982\u4f55\u5bfb\u627e\u5462\uff1f\u8981\u4e48\u662f\u5206\u8bcd\u5668\u5347\u7ef4\uff0c\u8981\u4e48\u662f\u72ec\u70ed\u7f16\u7801\u964d\u7ef4\u3002\u90a3\u4e48\u76f4\u89c9\u4e0a\uff0c\u4e00\u822c\u8ba4\u4e3a\u964d\u7ef4\u4f1a\u66f4\u597d\u4e00\u70b9\uff0c\u6bd5\u7adf\u538b\u7f29\u6bd4\u6362\u5143\u662f\u4e00\u4ef6\u66f4\u5bb9\u6613\u7684\u4e8b\u60c5\u3002\u90a3\u4e48\u7ef4\u5ea6\u7684\u53d8\u6362\uff0c\u5c31\u4e0d\u5f97\u4e0d\u6d89\u53ca\u5230\u77e9\u9635\u4e58\u6cd5\u4e86\uff0c\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u5b9e\u9645\u4e0a\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u7a7a\u95f4\u53d8\u6362\u3002\u90a3\u4e48\u63d0\u5230\u7a7a\u95f4\u53d8\u6362\uff0c\u5c31\u4e0d\u7981\u60f3\u5230\u4e86\u795e\u7ecf\u7f51\u7edc\uff0c\u56e0\u4e3a\u6743\u91cd\u77e9\u9635\u5176\u5b9e\u5c31\u662f\u5b9e\u73b0\u7a7a\u95f4\u53d8\u6362\u3002</p>"},{"location":"transformer_note/transformer_note.html#embedding","title":"\u8bcd\u5d4c\u5165  \uff08embedding\uff09","text":"<p>\u7f16\u7801\u5c31\u662f\u5148\u628a\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u7684token\u90fd\u5148\u7f16\u5199\u6210\u72ec\u70ed\u7801\uff0c\u7136\u540e\u8fdb\u884c\u964d\u7ef4\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u662f\u628a\u8f93\u5165\u7684\u4e00\u53e5\u8bdd\u6839\u636e\u8bed\u4e49\u6295\u5c04\u5230\u4e00\u4e2a\u6f5c\u7a7a\u95f4\u91cc\u9762\u3002\u5d4c\u5165\u7684\u6570\u636e\u4e0d\u4e00\u5b9a\u662f\u5355\u8bcd\uff0c\u4f46\u662f\u5728NLP\u91cc\u9762\u4e3b\u8981\u5c31\u662f\u9488\u5bf9\u5355\u8bcd\u3002\u56e0\u6b64\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u4e00\u5957\u6d41\u7a0b\u6765\u5b9e\u73b0\uff1a\u4e2d\u6587-\u4e2d\u6587\u6f5c\u7a7a\u95f4-\u5171\u540c\u6f5c\u7a7a\u95f4\uff08\u7b97\u6cd5\uff09-\u82f1\u6587\u6f5c\u7a7a\u95f4-\u82f1\u6587\uff0c\u56e0\u6b64\u7f16\u7801\u548c\u89e3\u7801\u5171\u540c\u4f7f\u7528\u3002\u6709\u4e00\u4e2a\u5c0f\u54f2\u5b66\u601d\u60f3\uff0c\u5c31\u662f\u201c\u4e00\u4e2a\u623f\u95f4\u91cc\u9762\u7406\u89e3\u4e2d\u6587\u7684AI\u201d\uff0c\u5b9e\u9645\u4e0aAI\u53ea\u77e5\u9053\u901a\u8fc7\u4e2d\u6587\u7136\u540e\u7ffb\u201c\u624b\u518c\u201d\u7136\u540e\u7ed9\u51fa\u56de\u590d\u3002\u5176\u5b9e\u8fd9\u79cd\u201c\u53ea\u5173\u6ce8\u8bed\u4e49\u7a7a\u95f4\u201d\u548c\u7f16\u7801\u89e3\u7801\u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f\u4f9d\u7136\u6709\u533a\u522b\uff1a\u624b\u518c\u7ed9\u51fa\u7684\u4fe1\u606f\u662f\u79bb\u6563\u7684\uff0c\u80fd\u505a\u7684\u4ec5\u4ec5\u662f\u4e00\u4e00\u5bf9\u5e94\uff1b\u4f46\u662f\u6f5c\u7a7a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u6709\u7684\u65f6\u5019\u673a\u5668\u9047\u5230\u6ca1\u6709\u5b66\u4e60\u8fc7\u7684\u60c5\u666f\uff0c\u4e5f\u4f9d\u7136\u80fd\u591f\u6839\u636e\u6f5c\u7a7a\u95f4\u8fdb\u884c\u5206\u6790\uff0c\u4f46\u662f\u624b\u518c\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002</p> <p>\u56e0\u6b64\uff0c\u6f5c\u7a7a\u95f4\u662f\u4ec0\u4e48\uff1f\u5176\u5b9e\u5c31\u662f\u8bed\u4e49\u7ef4\u5ea6\u3002\u4e0b\u9762\u6709\u4e00\u4e2a\u975e\u5e38\u751f\u52a8\u7684\u4f8b\u5b50\uff1a</p> <p></p> <p>\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u5176\u5b9e\u662f\u4e00\u4e2a\u8bed\u4e49\u7a7a\u95f4\uff0c\u4f8b\u5982\u7b2c\u4e00\u4e2a\u662f\u6c34\u679c\u8bed\u4e49\u7a7a\u95f4\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7269\u7406\uff0c\u7b2c\u4e09\u4e2a\u662f\u624b\u673a\uff0c\u7b2c\u56db\u4e2a\u662f\u6c14\u5473\u3002\u5f53\u7136\u8fd9\u91cc\u662f\u4e3e\u4f8b\u5b50\uff0c\u5b9e\u9645\u4e0a\u673a\u5668\u6700\u540e\u7b97\u51fa\u6765\u7684\u8bed\u4e49\u7a7a\u95f4\uff0c\u53ef\u80fd\u6211\u4eec\u81ea\u5df1\u90fd\u65e0\u6cd5\u7406\u89e3\uff0c\u4f46\u662f\u6700\u540e\u6574\u4f53\u6548\u679c\u5c31\u662f\u6b63\u786e\u7684\u3002\u90a3\u4e48NLP\u91cc\u9762\uff0c\u8fd9\u79cdtoken\u5c31\u662f\u8bed\u4e49\uff0c\u800c\u5728\u56fe\u50cf\u5904\u7406\u4e2d\uff0ctoken\u5c31\u662fchannel\uff08RGB\uff09\u3002\u4e0d\u59a8\u8fc1\u79fb\u60f3\u60f3\uff0c\u5377\u79ef\u6838\u5176\u5b9e\u4e5f\u662f\u964d\u7ef4\u548c\u5347\u7ef4\u7684\u624b\u6bb5\uff01</p> <p>\u6240\u4ee5\u8bf4\u4e3a\u4ec0\u4e48\u624b\u518c\u65e0\u80fd\u4e3a\u529b\u5462\uff1f\u4e00\u79cd\u7406\u89e3\u662f\u8fd9\u79cdkey-value\u7684\u5bf9\u5e94\u65b9\u5f0f\u7684\u52bf\u662f\u963f\u5217\u592b\u96f6\uff0c\u548c\u81ea\u7136\u6570\u7b49\u52bf\uff0c\u662f\u53ef\u6570\u7684countable\uff1b\u4f46\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u6a21\u578b\u5e94\u8be5\u80fd\u5b9e\u73b0\u201c\u8d85\u8d8a\u7ecf\u9a8c\u53bb\u751f\u6210\u5408\u7406\u5185\u5bb9\u201d\uff0c\u5373uncountable\u3002</p>"},{"location":"transformer_note/transformer_note.html#word2vec","title":"Word2Vec","text":"<p>\u5982\u4f55\u5c06token\u964d\u7ef4\u6295\u5c04\u81f3\u6f5c\u7a7a\u95f4\u5462\uff1f\u8fd9\u80af\u5b9a\u9700\u8981\u673a\u5668\u5b66\u4e60\uff0c\u4f46\u662f\u5982\u4f55\u64cd\u4f5c\u5462\uff1f\u8c37\u6b4c2013\u5e74\u63d0\u51fa\u4e86Word2Vec\u5c31\u662f\u4e00\u4e2a\u529e\u6cd5\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u6a21\u578b\u6700\u540e\u5f97\u51fa\u7684\u7ed3\u679c\uff0c\u662f\u4e00\u4e2a\u53c2\u6570\u8bad\u7ec3\u597d\u7684\u5d4c\u5165\u77e9\u9635\uff0c\u66f4\u50cf\u662f\u7f16\u5199\u5b57\u5178\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u5b9e\u73b0\u67d0\u4e00\u4e2a\u529f\u80fd\u3002\u56e0\u6b64\uff0cWord2Vec\u5e76\u6ca1\u6709\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\uff0c\u8ba1\u7b97\u66f4\u52a0\u7b80\u5355\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u8bbe\u8ba1\u795e\u7ecf\u7f51\u7edc\uff1f\u6211\u4eec\u5e0c\u671btoken\u7ecf\u8fc7\u77e9\u9635\u548c\u9006\u77e9\u9635\uff0c\u5373\u7f16\u7801\u548c\u89e3\u7801\u7684\u8fc7\u7a0b\u4e4b\u540e\uff0c\u7ed3\u679c\u4f9d\u7136\u662ftoken\u672c\u8eab\uff0c\u90a3\u4e48\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e0a\u6839\u672c\u4e0d\u80fd\u8bad\u7ec3\uff0c\u56e0\u4e3a\u538b\u6839\u6ca1\u6709\u504f\u5dee\uff0c\u65e0\u6cd5\u8fdb\u884cbackward propogation\u3002\u90a3\u4e48\u8bba\u6587\u4e2d\u63d0\u51fa\u4e86\u4e24\u4e2a\u529e\u6cd5\uff1aCBOW &amp; skip-gram</p> <p></p> <p>\u9996\u5148\u662fCBOW,\u51c6\u5907\u5947\u6570\u4e2atoken\uff0c\u7136\u540e\u53bb\u6389\u4e00\u4e2a\uff0c\u5269\u4e0b\u7684\u5404\u81ea\u548c\u5d4c\u5165\u77e9\u9635\u76f8\u4e58\uff0c\u7136\u540e\u7b97\u51fa\u7684\u51e0\u4e2a\u5411\u91cf\u76f8\u52a0\uff0c\u7136\u540e\u5bf9\u8fd9\u4e2a\u548c\u5411\u91cf\u8fdb\u884c\u89e3\u7801\uff0c\u6bd4\u8f83\u8fd9\u4e2a\u89e3\u7801\u7ed3\u679c\u548ctoken\u662f\u5426\u4e00\u81f4\u3002\u4e3a\u4ec0\u4e48\u5f97\u5230\u7684\u548c\u5411\u91cf\u5e94\u8be5\u5c31\u662f\u90a3\u4e2a\u7f3a\u5931\u7684\u5411\u91cf\uff1f\u56e0\u4e3a\u7c7b\u4f3c\u4e8e\u53d7\u529b\u5206\u6790\uff0c\u4e00\u4e2a\u5b8c\u6574\u7684\u8bed\u4e49\u4e0b\uff0ctoken\u80fd\u4e14\u53ea\u80fd\u901a\u8fc7\u4e0a\u4e0b\u6587\u7406\u89e3\uff0c\u90a3\u4e48\u76f4\u89c9\u4e0a\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u7f3a\u5931\u7684\u529b\u662f\u53e6\u5916\u51e0\u4e2a\u529b\u7684\u5408\u529b\u662f\u80fd\u591f\u8ba4\u540c\u7684\u3002</p> <p></p> <p>skip-gram\u5176\u5b9e\u5c31\u662fCBOW\u53cd\u8fc7\u6765\u7528\uff0c\u5df2\u77e5\u4e00\u4e2atoken,\u6c42\u51fa\u4e0a\u4e0b\u6587\u7684token,\u770b\u548c\u8bad\u7ec3\u6570\u636e\u662f\u5426\u4e00\u81f4\u3002\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\u81ea\u76d1\u7763\u5b66\u4e60\u3002</p> <p></p> <p>\u5728\u8bad\u7ec3\u4e2d\uff0c\u5176\u5b9e\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u770b\u6210\u53ea\u6709\u4e00\u4e2a\u9690\u85cf\u5c42\uff0c\u800c\u8ba1\u7b97\u6b65\u9aa4\u4e2d\u4e5f\u6ca1\u6709\u504f\u7f6e\u53c2\u6570b\uff0c\u4ee5\u53ca\u6fc0\u6d3b\u51fd\u6570\uff08\u7a7a\u95f4\u53d8\u6362\u662f\u7ebf\u6027\u7684\uff09\u3002\u90a3\u4e48\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u770b\u4f3c\u6211\u4eec\u4e0d\u9700\u8981\u8ba1\u7b97decoder matrix, \u56e0\u4e3aencoder and decoder\u4e24\u4e2a\u77e9\u9635\u4e0d\u5e94\u8be5\u662f\u76f8\u4e58\u4e3a\u5355\u4f4d\u77e9\u9635\u5417\uff1f\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u4e24\u4e2a\u77e9\u9635\u90fd\u662f\u5404\u81ea\u8bad\u7ec3\u5404\u81ea\u7684\u3002</p>"},{"location":"transformer_note/transformer_note.html#_3","title":"\u6ce8\u610f\u529b","text":""},{"location":"transformer_note/transformer_note.html#_4","title":"\u81ea\u6ce8\u610f\u529b","text":"<p>\u6ce8\u610f\u5230\u8f93\u5165\u7684\u5176\u5b9e\u5df2\u7ecf\u8fdb\u884c\u8fc7\u7f16\u7801\u4e86\uff0c\u90a3\u4e48\u6d41\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u5176\u5b9e\u662f\u6a59\u8272\u7684\u6ce8\u610f\u529b\u6a21\u5757\u3002\u5982\u4f55\u5728\u4e00\u4e2a\u6587\u672c\u4e2d\u7406\u89e3\u4e00\u4e2atoken\u7684\u8bed\u4e49\uff1f\u4e0d\u540c\u8bed\u5883\u4e0b\uff0c\u4e00\u4e2atoken\u8bed\u4e49\u53ef\u80fd\u4e0d\u540c\uff0c\u9009\u62e9\u54ea\u4e2a\u4fbf\u662f\u95ee\u9898\u3002\u90a3\u4e48\u5982\u4f55\u5904\u7406\uff1f </p> <p></p> <p>\u5148\u4e0d\u7ba1QKV\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u5148\u8c08A\u4e3a\u4ec0\u4e48\u9664\u4ee5\u6807\u51c6\u5dee\uff1a\u662f\u4e3a\u4e86\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002\u7136\u540e\u5bf9\u5f97\u5230\u7684A\u9010\u884csoftmax\uff0c\u7136\u540e\u518d\u548cV\u76f8\u4e58\u3002\u90a3\u4e48V\u5176\u5b9e\u5c31\u662f\u5b57\u5178\u91cc\u9762\u7684\u8bed\u4e49\uff0c\u800cQK\u662f\u5e72\u4ec0\u4e48\u7528\u7684\u5462\uff1fA'\u5176\u5b9e\u5c31\u662f\u76f8\u5f53\u4e8e\u8fd9\u6bb5\u8bdd\u56e0\u4e3a\u4e0a\u4e0b\u6587\u800c\u4ea7\u751f\u7684\u4fee\u6539\u7cfb\u6570\u3002\u4e3a\u4ec0\u4e48\u4ee3\u8868\u4fee\u6539\u7cfb\u6570\uff1f\u8981\u660e\u786e\u7684\u4e00\u70b9\u662f\uff0c\u5176\u5b9eQKV\u90fd\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5f97\u5230\u7684A\u5176\u5b9e\u6bcf\u4e00\u9879\u90fd\u662f\u4e00\u4e2a\u8bcd\u5411\u91cf\u548c\u53e6\u5916\uff08\u6216\u8005\u672c\u8eab\uff09\u8bcd\u5411\u91cf\u7684\u5185\u79ef\uff0c\u8fd9\u79cd\u5185\u79ef\u5176\u5b9e\u5c31\u662f\u6295\u5f71\uff0c\u80fd\u591f\u4f53\u73b0\u5173\u7cfb\uff0c</p> <p></p> <p>\u8fd9\u79cd\u5173\u7cfb\u518d\u8fdb\u884c\u6807\u51c6\u6b63\u6001\u5206\u5e03\u5316\uff0c\u7528softmax\u5f97\u5230\u4fee\u6b63\u6743\u91cd\uff0c\u6700\u540e\u548c\u539f\u672c\u7684V\uff08\u7f16\u7801\u540e\u7684\uff09\u8fdb\u884c\u4e0a\u4e0b\u6587\u4fee\u6b63\u3002\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4f7f\u5f97\u4e00\u6bb5\u6587\u672c\u589e\u52a0\u4e86\u4e3b\u89c2\u6027\u3002</p> <p>\u90a3\u4e48QK\u5b58\u5728\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u4e00\u79cd\u7406\u89e3\u662f\u4e8c\u6b21\u578b\u6709\u66f4\u5f3a\u7684\u975e\u7ebf\u6027\uff0c\u5373\u66f4\u5f3a\u7684\u6cdb\u5316\u80fd\u529b\uff1b\u53e6\u5916\u4e00\u79cd\u7406\u89e3\u662f\u201c\u8bbe\u5b9a\u8bed\u4e49\u201d\u4e0e\u201c\u8868\u8fbe\u8bed\u4e49\u201d\u4e4b\u5206\u3002</p> <p></p>"},{"location":"transformer_note/transformer_note.html#_5","title":"\u4ea4\u53c9\u6ce8\u610f\u529b","text":"<p>\u81ea\u6ce8\u610f\u529b\u5176\u5b9e\u5c31\u662f\u81ea\u5df1\u201d\u95f7\u5934\u82e6\u5b66\u201c\uff0c\u800c\u4ea4\u53c9\u6ce8\u610f\u529b\u5c31\u76f8\u5f53\u4e8e\u662f\u6709\u4e86\u4e00\u672c\u53c2\u8003\uff1a</p> <p></p> <p>\u4fee\u6b63\u53c2\u6570\u4e0d\u518d\u662f\u4ec5\u4ec5\u53d6\u51b3\u4e8e\u6587\u672c\u672c\u8eab\u4e86\uff0c\u8fd8\u5f15\u5165\u4e86\u5916\u754c\u8bed\u4e49Q\u3002</p> <p></p> <p>\u5728\u4e0a\u9762\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u201c\u597d\u4e45\u4e0d\u89c1\u201d\u5c31\u76f8\u5f53\u4e8e\u662f\u53c2\u8003\uff0c\u800c\u4e00\u5f00\u59cb\u89e3\u7801\u5668\u91cc\u9762\u8f93\u5165\u7684\u662f\u201c\u5f00\u59cb\u201d\uff0c\u7136\u540e\u9876\u4e0asoftmax\u5f97\u51fa\u4e0b\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u6bcf\u4e00\u4e2atoken\u7684\u6982\u7387\u5206\u5e03\uff0c\u9009\u53d6\u6700\u5927\u7684\u53ef\u80fd\u6027\u7684token, \u6bd4\u5982\u8bf4\u662flong, \u7136\u540e\u518d\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6700\u540esoftmax\u91cc\u9762\u6982\u7387\u6700\u5927\u7684\u662f\u201c\u7ec8\u6b62\u7b26\u201d\u3002\u8fd9\u6837\u5c31\u662f\u89e3\u51b3\u4e86seq2seq\u7684\u95ee\u9898\uff08\u4e2d\u82f1\u6587\u540c\u4e00\u8bed\u4e49\u7684token\u6570\u91cf\u53ef\u80fd\u4e0d\u4e00\u6837\uff09\u3002</p>"},{"location":"transformer_note/transformer_note.html#positional-encoding","title":"\u4f4d\u7f6e\u7f16\u7801\uff08Positional Encoding\uff09","text":"<p>token\u7684\u5e8f\u5217\u3001\u4f4d\u7f6e\u662f\u5341\u5206\u91cd\u8981\u7684\uff0c\u4e0d\u540c\u987a\u5e8f\u7684token\u643a\u5e26\u7684\u8bed\u4e49\u662f\u4e0d\u4e00\u6837\u7684\u3002\u8bba\u6587\u91cc\u9762\u4f7f\u7528\u7684\u662f\u201c\u52a0\u6cd5\u201d\u3002</p> <p></p> <p>\u76f8\u5bf9\u4f4d\u7f6e\u7f16\u7801\u8fc7\u4e8e\u590d\u6742\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4\u4e86QAQ\u3002</p>"},{"location":"transformer_note/transformer_note.html#_6","title":"\u591a\u5934\u6ce8\u610f\u529b","text":"<p>\u4e09\u4e2a\u72ec\u7acb\u7684\u8bad\u7ec3\u53c2\u6570\u5404\u81ea\u7b97\uff0c\u7136\u540e\u7b97\u51fa\u6765\u4e4b\u540e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u518d\u4e58\u4ee5W\u5f97\u5230\u7ed3\u679c\u3002\u8fd9\u5c31\u662f\u591a\u5934\u8bed\u4e49\u7684\u7ed3\u5408\u3002\u7075\u611f\u6765\u6e90\u4e8e\u201c\u901a\u9053\u201d\uff0c\u4e0d\u540c\u8bed\u4e49\u4e5f\u662f\u4e00\u79cd\u901a\u9053\uff0c\u7c7b\u4f3c\u4e8eRGB\u3002\u90a3\u4e48\u7b97\u51fa\u6765\u4e86Z012\uff0c\u5176\u5b9e\u4e0d\u540c\u7684\u8bed\u4e49\uff0c\u7136\u540e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u6700\u540e\u7528\u6743\u91cd\u51b3\u5b9a\u5e94\u8be5\u662f\u54ea\u4e00\u79cd\u8bed\u4e49\u3002</p>"},{"location":"transformer_note/transformer_note.html#_7","title":"\u63a9\u7801","text":"<p>\u5728Transformer\u6a21\u578b\u4e2d\uff0c\u63a9\u7801\uff08mask\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5c4f\u853d\u8f93\u5165\u5e8f\u5217\u4e2d\u67d0\u4e9b\u4f4d\u7f6e\u7684\u673a\u5236\u3002\u5728\u81ea\u6ce8\u610f\u529b\u673a\u5236\u4e2d\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u4e0e\u5176\u4ed6\u4f4d\u7f6e\u8fdb\u884c\u4ea4\u4e92\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6a21\u578b\u4e0d\u80fd\u8bbf\u95ee\u67d0\u4e9b\u4f4d\u7f6e\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5728\u8bed\u8a00\u6a21\u578b\u4e2d\uff0c\u4e3a\u4e86\u907f\u514d\u6a21\u578b\u5728\u751f\u6210\u67d0\u4e2a\u8bcd\u65f6\u770b\u5230\u672a\u6765\u7684\u8bcd\uff0c\u6211\u4eec\u9700\u8981\u5c4f\u853d\u5f53\u524d\u4f4d\u7f6e\u4e4b\u540e\u7684\u4f4d\u7f6e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e2a\u63a9\u7801\u77e9\u9635\uff0c\u5c06\u8981\u5c4f\u853d\u7684\u4f4d\u7f6e\u5bf9\u5e94\u7684\u5143\u7d20\u8bbe\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8d1f\u6570\uff0c\u8fd9\u6837\u7ecf\u8fc7softmax\u540e\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u5bf9\u5e94\u7684\u6743\u91cd\u5c31\u4f1a\u63a5\u8fd1\u4e8e0\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u5bf9\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u5c4f\u853d\u3002\u63a9\u7801\u901a\u5e38\u662f\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u5176\u7ef4\u5ea6\u4e0e\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u76f8\u540c\u3002</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html","title":"softmax","text":""},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html#softmax_1","title":"softmax\u56de\u5f52","text":"<p>\u56de\u5f52\u4e5f\u53ef\u4ee5\u7528\u4e8e\u9884\u6d4b\u591a\u5c11\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\u623f\u5c4b\u88ab\u552e\u51fa\u7684\u4ef7\u683c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e5f\u5bf9\u5206\u7c7b\u95ee\u9898\u611f\u5174\u8da3\uff0c\u6bd4\u5982\u8bf4\u60f3\u95ee\u8fd9\u4e2a\u56fe\u50cf\u7ed8\u5236\u7684\u662f\u9a74\u3001\u732b\u3001\u72d7\u8fd8\u662f\u9e21\u3002\u56de\u5f52\u4f30\u8ba1\u4e00\u4e2a\u8fde\u7eed\u503c\uff0c\u800c\u5206\u7c7b\u9884\u6d4b\u4e00\u4e2a\u79bb\u6563\u7c7b\u522b\uff0c\u4f8b\u5982MNIST\u6570\u636e\u96c6\u662f\u624b\u5199\u6570\u5b57\u8bc6\u522b\uff0810\u7c7b\uff09\uff0cImageNet\u81ea\u7136\u7269\u4f53\u5206\u7c7b\uff081000\u7c7b\uff09\u3002\u56de\u5f52\u548c\u5206\u7c7b\u6709\u5f88\u591a\u7684\u76f8\u4f3c\u6027\uff0c\u4f46\u662f\u53c8\u6709\u533a\u522b\u3002\u56de\u5f52\u662f\u5355\u8fde\u7eed\u6570\u503c\u8f93\u51fa\uff0c\u8ddf\u771f\u5b9e\u503c\u7684\u533a\u522b\u4f5c\u4e3a\u635f\u5931\uff1b\u800c\u5206\u7c7b\u6709\u8fc7\u4e2a\u8f93\u51fa\uff0c\u8f93\u51fai\u662f\u9884\u6d4b\u4e3a\u7b2ci\u7c7b\u7684\u7f6e\u4fe1\u5ea6\u3002</p> <p>\u90a3\u4e48\u5206\u7c7b\u4e2d\u5982\u4f55\u5b9a\u4e49\u635f\u5931\u5462\uff1f\u6211\u4eec\u4f7f\u7528\u5747\u65b9\u635f\u5931\u3002\u5176\u4e2d\uff0c\u5047\u5982\u8bf4\u6709n\u7c7b\uff0c\u90a3\u4e48\u6570\u636e\u96c6\u91cc\u9762\u7684\u771f\u5b9e\u6570\u636e\u662f\u5bf9\u7c7b\u522b\u8fdb\u884c\u4e00\u4f4d\u6709\u6548\u7f16\u7801\u7684\u7ed3\u679c\uff0c\u4e0b\u9762\u77e9\u9635\u4e2d\\(y_i=1,if\\ i=y\\), \u800c\u5176\u4f59\u5143\u7d20\u90fd\u662f0\u3002\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u53c8\u79f0\u4e3a\u72ec\u70ed\u7f16\u7801\uff08one-hot\uff09:  \u5e0c\u671b\u6700\u540e\u8f93\u51fa\u7684\u503c\u662f\u4e00\u4e2a\u4e2a\u6982\u7387\uff0c\u7136\u540e\u5e0c\u671b\u8fd9\u4e9b\u6982\u7387\u90fd\u662f\u975e\u8d1f\uff0c\u7136\u540e\u548c\u4e3a1\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u64cd\u4f5c\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u5462\uff1f softmax\u64cd\u4f5c\u5c31\u53ef\u4ee5\u3002  \u90a3\u4e48\u6709\u4e86\u8f93\u51fa\u503c\u548c\u771f\u5b9e\u503c\u4e24\u4e2a\u77e9\u9635\uff0c\u5982\u4f55\u8bbe\u8ba1\u635f\u5931\u51fd\u6570\u5462\uff1fsoftmax\u51fd\u6570\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5411\u91cf\\(\\hat{\\mathbf{y}}\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u201c\u5bf9\u7ed9\u5b9a\u4efb\u610f\u8f93\u5165\\(\\mathbf{x}\\)\u7684\u6bcf\u4e2a\u7c7b\u7684\u6761\u4ef6\u6982\u7387\u201d\u3002\u4f8b\u5982\uff0c\\(\\hat{y}_1\\)=\\(P(y=\\text{\u732b} \\mid \\mathbf{x})\\)\u3002\u5047\u8bbe\u6574\u4e2a\u6570\u636e\u96c6\\(\\{\\mathbf{X}, \\mathbf{Y}\\}\\)\u5177\u6709\\(n\\)\u4e2a\u6837\u672c\uff0c\u5176\u4e2d\u7d22\u5f15\\(i\\)\u7684\u6837\u672c\u7531\u7279\u5f81\u5411\u91cf\\(\\mathbf{x}^{(i)}\\)\u548c\u72ec\u70ed\u6807\u7b7e\u5411\u91cf\\(\\mathbf{y}^{(i)}\\)\u7ec4\u6210\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4f30\u8ba1\u503c\u4e0e\u5b9e\u9645\u503c\u8fdb\u884c\u6bd4\u8f83\uff1a  \u6839\u636e\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u6211\u4eec\u6700\u5927\u5316\\(P(\\mathbf{Y} \\mid \\mathbf{X})\\)\uff0c\u76f8\u5f53\u4e8e\u6700\u5c0f\u5316\u8d1f\u5bf9\u6570\u4f3c\u7136\uff1a  \u5176\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u4f55\u6807\u7b7e\\(\\mathbf{y}\\)\u548c\u6a21\u578b\u9884\u6d4b\\(\\hat{\\mathbf{y}}\\)\uff0c\u635f\u5931\u51fd\u6570\u4e3a\uff1a  \u90a3\u4e48\u5047\u5982\u8bf4\\(\\hat{\\mathbf{y}}\\)\u662f\u7531\\(\\mathbf{o}\\)\u77e9\u9635\u7ecf\u8fc7softmax\u5f97\u6765\uff0c\u90a3\u4e48\u5982\u4f55\u6c42\u5173\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\\(o_j\\)\u7684\u5bfc\u6570\u5462\uff1f  </p> \\[ \\partial_{o_j} l(\\mathbf{y}, \\hat{\\mathbf{y}}) = \\frac{\\exp(o_j)}{\\sum_{k=1}^q \\exp(o_k)} - y_j = \\mathrm{softmax}(\\mathbf{o})_j - y_j \\] <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bfc\u6570\u662f\u6211\u4eecsoftmax\u6a21\u578b\u5206\u914d\u7684\u6982\u7387\u4e0e\u5b9e\u9645\u53d1\u751f\u7684\u60c5\u51b5\uff08\u7531\u72ec\u70ed\u6807\u7b7e\u5411\u91cf\u8868\u793a\uff09\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bb2\uff0c\u8fd9\u4e0e\u6211\u4eec\u5728\u56de\u5f52\u4e2d\u770b\u5230\u7684\u975e\u5e38\u76f8\u4f3c\uff0c\u5176\u4e2d\u68af\u5ea6\u662f\u89c2\u6d4b\u503c\\(y\\)\u548c\u4f30\u8ba1\u503c\\(\\hat{y}\\)\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html#_1","title":"\u4fe1\u606f\u8bba\u5ba1\u89c6\u89d2\u5ea6","text":"<p>\u4fe1\u606f\u8bba\uff08information theory\uff09\u6d89\u53ca\u7f16\u7801\u3001\u89e3\u7801\u3001\u53d1\u9001\u4ee5\u53ca\u5c3d\u53ef\u80fd\u7b80\u6d01\u5730\u5904\u7406\u4fe1\u606f\u6216\u6570\u636e\u3002\u4fe1\u606f\u8bba\u7684\u6838\u5fc3\u601d\u60f3\u662f\u91cf\u5316\u6570\u636e\u4e2d\u7684\u4fe1\u606f\u5185\u5bb9\u3002\u5728\u4fe1\u606f\u8bba\u4e2d\uff0c\u8be5\u6570\u503c\u88ab\u79f0\u4e3a\u5206\u5e03\\(P\\)\u7684\u71b5\uff08entropy\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u7a0b\u5f97\u5230\uff1a  \u4fe1\u606f\u8bba\u7684\u57fa\u672c\u5b9a\u7406\u4e4b\u4e00\u6307\u51fa\uff0c\u4e3a\u4e86\u5bf9\u4ece\u5206\u5e03\\(p\\)\u4e2d\u968f\u673a\u62bd\u53d6\u7684\u6570\u636e\u8fdb\u884c\u7f16\u7801\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\\(H[P]\\)\u201c\u7eb3\u7279\uff08nat\uff09\u201d\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\u3002\u201c\u7eb3\u7279\u201d\u76f8\u5f53\u4e8e\u6bd4\u7279\uff08bit\uff09\uff0c\u4f46\u662f\u5bf9\u6570\u5e95\u4e3a\\(e\\)\u800c\u4e0d\u662f2\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u7eb3\u7279\u662f\\(\\frac{1}{\\log(2)} \\approx 1.44\\)\u6bd4\u7279\u3002</p> <p>\u538b\u7f29\u4e0e\u9884\u6d4b\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u60f3\u8c61\u4e00\u4e0b\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u8981\u538b\u7f29\u7684\u6570\u636e\u6d41\u3002\u5982\u679c\u6211\u4eec\u5f88\u5bb9\u6613\u9884\u6d4b\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u636e\u5c31\u5f88\u5bb9\u6613\u538b\u7f29\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u4e3e\u4e00\u4e2a\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u5047\u5982\u6570\u636e\u6d41\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u65e0\u804a\u7684\u6570\u636e\u6d41\u3002\u7531\u4e8e\u5b83\u4eec\u603b\u662f\u76f8\u540c\u7684\uff0c\u6211\u4eec\u603b\u662f\u77e5\u9053\u4e0b\u4e00\u4e2a\u6570\u636e\u662f\u4ec0\u4e48\u3002\u6240\u4ee5\uff0c\u4e3a\u4e86\u4f20\u9012\u6570\u636e\u6d41\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e0d\u5fc5\u4f20\u8f93\u4efb\u4f55\u4fe1\u606f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u201c\u4e0b\u4e00\u4e2a\u6570\u636e\u662fxx\u201d\u8fd9\u4e2a\u4e8b\u4ef6\u6beb\u65e0\u4fe1\u606f\u91cf\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u80fd\u5b8c\u5168\u9884\u6d4b\u6bcf\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u65f6\u53ef\u80fd\u4f1a\u611f\u5230\"\u60ca\u5f02\"\u3002\u514b\u52b3\u5fb7\u00b7\u9999\u519c\u51b3\u5b9a\u7528\u4fe1\u606f\u91cf\\(\\log \\frac{1}{P(j)} = -\\log P(j)\\)\u6765\u91cf\u5316\u8fd9\u79cd\u60ca\u5f02\u7a0b\u5ea6\u3002\u5728\u89c2\u5bdf\u4e00\u4e2a\u4e8b\u4ef6\\(j\\)\u65f6\uff0c\u5e76\u8d4b\u4e88\u5b83\uff08\u4e3b\u89c2\uff09\u6982\u7387\\(P(j)\\)\u3002\u5f53\u6211\u4eec\u8d4b\u4e88\u4e00\u4e2a\u4e8b\u4ef6\u8f83\u4f4e\u7684\u6982\u7387\u65f6\uff0c\u6211\u4eec\u7684\u60ca\u5f02\u4f1a\u66f4\u5927\uff0c\u8be5\u4e8b\u4ef6\u7684\u4fe1\u606f\u91cf\u4e5f\u5c31\u66f4\u5927\u3002</p> <p>\u5982\u679c\u628a\u71b5\\(H(P)\\)\u60f3\u8c61\u4e3a\u201c\u77e5\u9053\u771f\u5b9e\u6982\u7387\u7684\u4eba\u6240\u7ecf\u5386\u7684\u60ca\u5f02\u7a0b\u5ea6\u201d\uff0c\u90a3\u4e48\u4ec0\u4e48\u662f\u4ea4\u53c9\u71b5\uff1f\u4ea4\u53c9\u71b5\u4ece\\(P\\)\u5230\\(Q\\)\uff0c\u8bb0\u4e3a\\(H(P, Q)\\)\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4ea4\u53c9\u71b5\u60f3\u8c61\u4e3a\u201c\u4e3b\u89c2\u6982\u7387\u4e3a\\(Q\\)\u7684\u89c2\u5bdf\u8005\u5728\u770b\u5230\u6839\u636e\u6982\u7387\\(P\\)\u751f\u6210\u7684\u6570\u636e\u65f6\u7684\u9884\u671f\u60ca\u5f02\u201d\u3002\u5f53\\(P=Q\\)\u65f6\uff0c\u4ea4\u53c9\u71b5\u8fbe\u5230\u6700\u4f4e\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ece\\(P\\)\u5230\\(Q\\)\u7684\u4ea4\u53c9\u71b5\u662f\\(H(P, P)= H(P)\\)\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u65b9\u9762\u6765\u8003\u8651\u4ea4\u53c9\u71b5\u5206\u7c7b\u76ee\u6807\uff1a\uff08i\uff09\u6700\u5927\u5316\u89c2\u6d4b\u6570\u636e\u7684\u4f3c\u7136\uff1b\uff08ii\uff09\u6700\u5c0f\u5316\u4f20\u8fbe\u6807\u7b7e\u6240\u9700\u7684\u60ca\u5f02\u3002</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html#_2","title":"\u56fe\u7247\u5206\u7c7b\u6570\u636e\u96c6","text":"<p>Fashion-MNIST\u4e2d\u5305\u542b\u768410\u4e2a\u7c7b\u522b\uff0c\u5206\u522b\u4e3at-shirt\uff08T\u6064\uff09\u3001trouser\uff08\u88e4\u5b50\uff09\u3001pullover\uff08\u5957\u886b\uff09\u3001dress\uff08\u8fde\u8863\u88d9\uff09\u3001coat\uff08\u5916\u5957\uff09\u3001sandal\uff08\u51c9\u978b\uff09\u3001shirt\uff08\u886c\u886b\uff09\u3001sneaker\uff08\u8fd0\u52a8\u978b\uff09\u3001bag\uff08\u5305\uff09\u548cankle boot\uff08\u77ed\u9774\uff09\u3002</p> <p>\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5728\u6570\u5b57\u6807\u7b7e\u7d22\u5f15\u53ca\u5176\u6587\u672c\u540d\u79f0\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002</p> <pre><code>import torch\nimport torchvision\nfrom torch.utils import data\nfrom torchvision import transforms\n# \u7528svg\u9ad8\u6e05\u663e\u793a\u56fe\u7247\nfrom d2l import torch as d2l\nd2l.use_svg_display()\n\n# \u7b80\u5355\u7684\u9884\u5904\u7406\uff1a\u6240\u6709\u7684\u6570\u636e\u8f6c\u5316\u4e3a\u5f20\u91cf; \u6ce8\u610f\u65b9\u6cd5\u662f\u4ecetorchvision\u4e2d\u7684transforms\u4e2d\u6765\u7684\ntrans = transforms.ToTensor()\nmnist_train = torchvision.datasets.FashionMNIST(\n    root=\"../data\", train=True, transform=trans, download=True)\nmnist_test = torchvision.datasets.FashionMNIST(\n    root=\"../data\", train=False, transform=trans, download=True)\n\nlen(mnist_train), len(mnist_test)\n# (60000, 10000)\nmnist_train[0][0].shape\n# torch.Size([1, 28, 28]) \u4ee3\u8868\u901a\u9053\u4e3a1\uff08\u7070\u5ea6\u56fe\u50cf\uff09\uff0c28*28\u4ee3\u8868\u957f28\u50cf\u7d20\u5bbd28\u50cf\u7d20\n\ndef get_fashion_mnist_labels(labels): \n    \"\"\"\u8fd4\u56deFashion-MNIST\u6570\u636e\u96c6\u7684\u6587\u672c\u6807\u7b7e\"\"\"\n    text_labels = ['t-shirt', 'trouser', 'pullover', 'dress', 'coat',\n                   'sandal', 'shirt', 'sneaker', 'bag', 'ankle boot']\n    return [text_labels[int(i)] for i in labels]\n\ndef show_images(imgs, num_rows, num_cols, titles=None, scale=1.5):  #@save\n    \"\"\"\u7ed8\u5236\u56fe\u50cf\u5217\u8868\"\"\"\n    figsize = (num_cols * scale, num_rows * scale)\n    _, axes = d2l.plt.subplots(num_rows, num_cols, figsize=figsize)\n    axes = axes.flatten()\n    for i, (ax, img) in enumerate(zip(axes, imgs)):\n        if torch.is_tensor(img):\n            # \u56fe\u7247\u5f20\u91cf\n            ax.imshow(img.numpy())\n        else:\n            # PIL\u56fe\u7247\n            ax.imshow(img)\n        ax.axes.get_xaxis().set_visible(False)\n        ax.axes.get_yaxis().set_visible(False)\n        if titles:\n            ax.set_title(titles[i])\n    return axes\n</code></pre> <p>\u4e3a\u4e86\u4f7f\u6211\u4eec\u5728\u8bfb\u53d6\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u65f6\u66f4\u5bb9\u6613\uff0c\u6211\u4eec\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u8fed\u4ee3\u5668\uff0c\u800c\u4e0d\u662f\u4ece\u96f6\u5f00\u59cb\u521b\u5efa\u3002\u56de\u987e\u4e00\u4e0b\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6570\u636e\u52a0\u8f7d\u5668\u6bcf\u6b21\u90fd\u4f1a[\u8bfb\u53d6\u4e00\u5c0f\u6279\u91cf\u6570\u636e\uff0c\u5927\u5c0f\u4e3a<code>batch_size</code>]\u3002\u901a\u8fc7\u5185\u7f6e\u6570\u636e\u8fed\u4ee3\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u673a\u6253\u4e71\u4e86\u6240\u6709\u6837\u672c\uff0c\u4ece\u800c\u65e0\u504f\u89c1\u5730\u8bfb\u53d6\u5c0f\u6279\u91cf\u3002</p> <pre><code>batch_size = 256\n\ndef get_dataloader_workers():  #@save\n    \"\"\"\u4f7f\u75284\u4e2a\u8fdb\u7a0b\u6765\u8bfb\u53d6\u6570\u636e\"\"\"\n    return 4\n\ntrain_iter = data.DataLoader(mnist_train, batch_size, shuffle=True,\n                             num_workers=get_dataloader_workers())\n\ntimer = d2l.Timer()\nfor X, y in train_iter:\n    continue\nf'{timer.stop():.2f} sec'\n# 4.3 sec\n</code></pre> <p>\u8fd9\u91cc\u8fdb\u7a0b\u6570\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6570\u636e\u8981\u4ece\u786c\u76d8\u8f6c\u79fb\u5230\u5185\u5b58\u91cc\u9762\uff0c\u8fd9\u662f\u4e00\u4ef6\u4e0d\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u53ef\u80fd\u9700\u8981\u591a\u8fdb\u7a0b\u6765\u5e2e\u52a9\u6570\u636e\u66f4\u5feb\u5730\u8f6c\u79fb\u3002\u5b9e\u6218\u4e2d\uff0c\u5efa\u8bae\u5355\u72ec\u68c0\u67e5\u8bfb\u53d6\u4e00\u8f6e\u7684\u6570\u636e\u7684\u65f6\u95f4\u662f\u591a\u5c11\uff0c\u5e0c\u671b\u8bfb\u53d6\u7684\u65f6\u95f4\u81f3\u5c11\u8981\u6bd4\u8bad\u7ec3\u7684\u65f6\u95f4\u5c11\uff0c\u5f53\u7136\u5c11\u5f88\u591a\u662f\u6700\u597d\u7684\u3002</p> <p>\u73b0\u5728\u5c31\u80fd\u6574\u5408\u6240\u6709\u7684\u7ec4\u4ef6\u4e86\uff1a</p> <pre><code>def load_data_fashion_mnist(batch_size, resize=None):  #@save\n    \"\"\"\u4e0b\u8f7dFashion-MNIST\u6570\u636e\u96c6\uff0c\u7136\u540e\u5c06\u5176\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\"\"\"\n    trans = [transforms.ToTensor()]\n    if resize:\n        trans.insert(0, transforms.Resize(resize))\n        # \u4e0a\u4e00\u6b65\u662f\u4e3a\u4e86\u628a\u56fe\u7247\u653e\u5927\n    trans = transforms.Compose(trans)\n    mnist_train = torchvision.datasets.FashionMNIST(\n        root=\"../data\", train=True, transform=trans, download=True)\n    mnist_test = torchvision.datasets.FashionMNIST(\n        root=\"../data\", train=False, transform=trans, download=True)\n    return (data.DataLoader(mnist_train, batch_size, shuffle=True,\n                            num_workers=get_dataloader_workers()),\n            data.DataLoader(mnist_test, batch_size, shuffle=False,\n                            num_workers=get_dataloader_workers()))\n\ntrain_iter, test_iter = load_data_fashion_mnist(32, resize=64)\nfor X, y in train_iter:\n    print(X.shape, X.dtype, y.shape, y.dtype)\n    break\n# torch.Size([32, 1, 64, 64]) torch.float32 torch.Size([32]) torch.int64\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html#softmax_2","title":"\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0\u7684softmax","text":"<pre><code>import torch\nfrom IPython import display\nfrom d2l import torch as d2l\n# \u52a0\u8f7d\u6570\u636e\u96c6\nbatch_size = 256\ntrain_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)\n\nnum_inputs = 784\nnum_outputs = 10\n# \u521d\u59cb\u5316\u6743\u91cd\u548c\u504f\u7f6e\nW = torch.normal(0, 0.01, size=(num_inputs, num_outputs), requires_grad=True)\nb = torch.zeros(num_outputs, requires_grad=True)\n\ndef softmax(X):\n    X_exp = torch.exp(X)\n    partition = X_exp.sum(1, keepdim=True)\n    return X_exp / partition\ndef net(X):\n    # torch.matmul\u662f\u77e9\u9635\u4e58\u6cd5\uff1bX.reshape\u662f\u5c06bs*28*28 =&gt; bs * 784\n    return softmax(torch.matmul(X.reshape((-1, W.shape[0])), W) + b)\ndef cross_entropy(y_hat, y):\n    return - torch.log(y_hat[range(len(y_hat)), y])\n</code></pre> <p>\u4e0a\u9762\u6211\u4eec\u8fdb\u884c\u4e86w b\u53c2\u6570\u7684\u521d\u59cb\u5316\uff0c\u5b9a\u4e49\u4e86\u5bf9\u4e8e\u4e00\u4e2a\u5411\u91cf\u7684softmax\u64cd\u4f5c\uff0c\u5b9a\u4e49\u4e86\u7f51\u7edc\u7684\u6d41\u7a0b\uff0c\u5b9a\u4e49\u4e86\u4ea4\u53c9\u71b5\u635f\u5931\u3002\u7ed9\u5b9a\u9884\u6d4b\u6982\u7387\u5206\u5e03<code>y_hat</code>\uff0c\u5f53\u6211\u4eec\u5fc5\u987b\u8f93\u51fa\u786c\u9884\u6d4b\uff08hard prediction\uff09\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u9009\u62e9\u9884\u6d4b\u6982\u7387\u6700\u9ad8\u7684\u7c7b\u3002\u5f53\u9884\u6d4b\u4e0e\u6807\u7b7e\u5206\u7c7b<code>y</code>\u4e00\u81f4\u65f6\uff0c\u5373\u662f\u6b63\u786e\u7684\u3002\u5206\u7c7b\u7cbe\u5ea6\u5373\u6b63\u786e\u9884\u6d4b\u6570\u91cf\u4e0e\u603b\u9884\u6d4b\u6570\u91cf\u4e4b\u6bd4\u3002\u4e3a\u4e86\u8ba1\u7b97\u7cbe\u5ea6\uff0c\u6211\u4eec\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u3002\u9996\u5148\uff0c\u5982\u679c<code>y_hat</code>\u662f\u77e9\u9635\uff0c\u90a3\u4e48\u5047\u5b9a\u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u5b58\u50a8\u6bcf\u4e2a\u7c7b\u7684\u9884\u6d4b\u5206\u6570\u3002\u6211\u4eec\u4f7f\u7528<code>argmax</code>\u83b7\u5f97\u6bcf\u884c\u4e2d\u6700\u5927\u5143\u7d20\u7684\u7d22\u5f15\u6765\u83b7\u5f97\u9884\u6d4b\u7c7b\u522b\u3002\u7136\u540e\u6211\u4eec[\u5c06\u9884\u6d4b\u7c7b\u522b\u4e0e\u771f\u5b9e<code>y</code>\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83]\u3002\u7531\u4e8e\u7b49\u5f0f\u8fd0\u7b97\u7b26\u201c<code>==</code>\u201d\u5bf9\u6570\u636e\u7c7b\u578b\u5f88\u654f\u611f\uff0c\u56e0\u6b64\u6211\u4eec\u5c06<code>y_hat</code>\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u4e0e<code>y</code>\u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u5305\u542b0\uff08\u9519\uff09\u548c1\uff08\u5bf9\uff09\u7684\u5e03\u5c14\u5f20\u91cf\u3002\u6700\u540e\uff0c\u6211\u4eec\u6c42\u548c\u4f1a\u5f97\u5230\u6b63\u786e\u9884\u6d4b\u7684\u6570\u91cf\u3002</p> <pre><code>def accuracy(y_hat, y):  #@save\n    \"\"\"\u8ba1\u7b97\u9884\u6d4b\u6b63\u786e\u7684\u6570\u91cf\"\"\"\n    if len(y_hat.shape) &gt; 1 and y_hat.shape[1] &gt; 1:\n        y_hat = y_hat.argmax(axis=1)\n    cmp = y_hat.type(y.dtype) == y\n    return float(cmp.type(y.dtype).sum())\n</code></pre> <p>\u8fd9\u91cc\u518d\u5b9a\u4e49Accumulator\u7c7b\uff0c\u8bb0\u5f55\u4e24\u4e2a\u6570\u5b57\uff1a\u9884\u6d4b\u6b63\u786e\u7684\u4e2a\u6570\uff0c\u548c\u9884\u6d4b\u7684\u6b21\u6570\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u7cbe\u5ea6\u5c31\u662f\u7b2c\u4e00\u4e2a\u6570\u548c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u7684\u6bd4\u503c\u3002\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u4f7f\u7528\u4e860.0\uff1f\u56e0\u4e3a\u5982\u679c\u90fd\u662fint\uff0c\u90a3\u4e48\u4e24\u4e2a\u6574\u6570\u76f8\u9664\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662fint\uff0c\u51b5\u4e14accuracy\u8fd4\u56de\u7684\u503c\u4e5f\u662f\u89c4\u5b9a\u4e3a\u4e86float\u3002</p> <pre><code>class Accumulator:  #@save\n    \"\"\"\u5728n\u4e2a\u53d8\u91cf\u4e0a\u7d2f\u52a0\"\"\"\n    def __init__(self, n):\n        self.data = [0.0] * n\n\n    def add(self, *args):\n        self.data = [a + float(b) for a, b in zip(self.data, args)]\n\n    def reset(self):\n        self.data = [0.0] * len(self.data)\n\n    def __getitem__(self, idx):\n        return self.data[idx]\ndef evaluate_accuracy(net, data_iter):  #@save\n    \"\"\"\u8ba1\u7b97\u5728\u6307\u5b9a\u6570\u636e\u96c6\u4e0a\u6a21\u578b\u7684\u7cbe\u5ea6\"\"\"\n    if isinstance(net, torch.nn.Module):\n        net.eval()  # \u5c06\u6a21\u578b\u8bbe\u7f6e\u4e3a\u8bc4\u4f30\u6a21\u5f0f\n    metric = Accumulator(2)  # \u6b63\u786e\u9884\u6d4b\u6570\u3001\u9884\u6d4b\u603b\u6570\n    with torch.no_grad():\n        for X, y in data_iter:\n            metric.add(accuracy(net(X), y), y.numel())\n    return metric[0] / metric[1]\n</code></pre> <p>\u8bad\u7ec3\u4e00\u4e2aepoch\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>def train_epoch_ch3(net, train_iter, loss, updater):  #@save\n    \"\"\"\u8bad\u7ec3\u6a21\u578b\u4e00\u4e2a\u8fed\u4ee3\u5468\u671f\"\"\"\n    # \u5c06\u6a21\u578b\u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u6a21\u5f0f\n    if isinstance(net, torch.nn.Module):\n        net.train()\n    # \u8bad\u7ec3\u635f\u5931\u603b\u548c\u3001\u8bad\u7ec3\u51c6\u786e\u5ea6\u603b\u548c\u3001\u6837\u672c\u6570\n    metric = Accumulator(3)\n    for X, y in train_iter:\n        # \u8ba1\u7b97\u68af\u5ea6\u5e76\u66f4\u65b0\u53c2\u6570\n        y_hat = net(X)\n        l = loss(y_hat, y)\n        if isinstance(updater, torch.optim.Optimizer):\n            # \u4f7f\u7528PyTorch\u5185\u7f6e\u7684\u4f18\u5316\u5668\u548c\u635f\u5931\u51fd\u6570\n            updater.zero_grad()\n            l.mean().backward()\n            updater.step()\n        else:\n            # \u4f7f\u7528\u5b9a\u5236\u7684\u4f18\u5316\u5668\u548c\u635f\u5931\u51fd\u6570\n            l.sum().backward()\n            updater(X.shape[0])\n        metric.add(float(l.sum()), accuracy(y_hat, y), y.numel())\n    # \u8fd4\u56de\u8bad\u7ec3\u635f\u5931\u548c\u8bad\u7ec3\u7cbe\u5ea6\n    return metric[0] / metric[2], metric[1] / metric[2]\n</code></pre> <p>\u5728\u5c55\u793a\u8bad\u7ec3\u51fd\u6570\u7684\u5b9e\u73b0\u4e4b\u524d\uff0c\u6211\u4eec[\u5b9a\u4e49\u4e00\u4e2a\u5728\u52a8\u753b\u4e2d\u7ed8\u5236\u6570\u636e\u7684\u5b9e\u7528\u7a0b\u5e8f\u7c7b]<code>Animator</code>\uff0c\u8fd9\u91cc\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\u3002\u90a3\u4e48\u8bad\u7ec3\u7684\u5b8c\u6574\u8fc7\u7a0b\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>def train_ch3(net, train_iter, test_iter, loss, num_epochs, updater):  #@save\n    \"\"\"\u8bad\u7ec3\u6a21\u578b\"\"\"\n    animator = Animator(xlabel='epoch', xlim=[1, num_epochs], ylim=[0.3, 0.9],\n                        legend=['train loss', 'train acc', 'test acc'])\n    for epoch in range(num_epochs):\n        train_metrics = train_epoch_ch3(net, train_iter, loss, updater)\n        test_acc = evaluate_accuracy(net, test_iter)\n        animator.add(epoch + 1, train_metrics + (test_acc,))\n    train_loss, train_acc = train_metrics\n    assert train_loss &lt; 0.5, train_loss\n    assert train_acc &lt;= 1 and train_acc &gt; 0.7, train_acc\n    assert test_acc &lt;= 1 and test_acc &gt; 0.7, test_acc\n</code></pre> <p>\u4f5c\u4e3a\u4e00\u4e2a\u4ece\u96f6\u5f00\u59cb\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u4f7f\u7528[\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6765\u4f18\u5316\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570]\uff0c\u8bbe\u7f6e\u5b66\u4e60\u7387\u4e3a0.1\u3002\u90a3\u4e48\u4f7f\u7528\u5148\u524d\u5b9a\u4e49\u7684\u7f51\u7edc\u3001\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u8fed\u4ee3\u5668\u3001\u635f\u5931\u51fd\u6570\u3001\u89c4\u5b9a\u7684\u8bad\u7ec3\u8f6e\u6570\u548c\u53c2\u6570\u66f4\u65b0\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u4e86\u3002</p> <pre><code>lr = 0.1\n\ndef updater(batch_size):\n    return d2l.sgd([W, b], lr, batch_size)\nnum_epochs = 10\ntrain_ch3(net, train_iter, test_iter, cross_entropy, num_epochs, updater)\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/softmax.html#softmax_3","title":"softmax\u7b80\u6d01\u5b9e\u73b0","text":"<ol> <li>\u8fd9\u91cc\u7684net\u76f8\u5f53\u4e8e\u662f\u4e24\u5c42\u64cd\u4f5c\uff0c\u7b2c\u4e00\u5c42\u662f\u8c03\u6574tensor\u7684\u5f62\u72b6\u3002<code>nn.Flatten()</code> \u662f PyTorch \u4e2d\u7528\u4e8e\u5c06\u591a\u7ef4\u7684\u8f93\u5165\u5f20\u91cf\u5c55\u5e73\u6210\u4e00\u7ef4\u5f20\u91cf\u7684\u5c42\uff0c\u5f62\u72b6\u4e3a <code>(batch_size, 28, 28)</code>\uff0c<code>nn.Flatten()</code> \u4f1a\u5c06\u6bcf\u4e2a\u6837\u672c\u5c55\u5e73\u4e3a\u4e00\u7ef4\uff0c\u53d8\u6210 <code>(batch_size, 784)</code>\uff0828\u00d728 = 784\uff09\u3002\u8fd9\u6837\u5904\u7406\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u5c55\u5e73\u540e\u7684\u5f20\u91cf\u8f93\u5165\u5230\u7ebf\u6027\u5c42 <code>nn.Linear(784, 10)</code>\uff0c\u8fdb\u884c\u5206\u7c7b\u7b49\u64cd\u4f5c\u3002\u800c\u7b2c\u4e8c\u5c42\u5c31\u662f784\u7ef4\u8f93\u5165\uff0c\u8f93\u51fa10\u7ef4\u7684\u5f20\u91cf\u3002</li> <li>softmax\u51fd\u6570\\(\\hat y_j = \\frac{\\exp(o_j)}{\\sum_k \\exp(o_k)}\\)\uff0c\u5176\u4e2d\\(\\hat y_j\\)\u662f\u9884\u6d4b\u7684\u6982\u7387\u5206\u5e03\u3002\\(o_j\\)\u662f\u672a\u89c4\u8303\u5316\u7684\u9884\u6d4b\\(\\mathbf{o}\\)\u7684\u7b2c\\(j\\)\u4e2a\u5143\u7d20\u3002\u5982\u679c\\(o_k\\)\u4e2d\u7684\u4e00\u4e9b\u6570\u503c\u975e\u5e38\u5927\uff0c\u90a3\u4e48\\(\\exp(o_k)\\)\u53ef\u80fd\u5927\u4e8e\u6570\u636e\u7c7b\u578b\u5bb9\u8bb8\u7684\u6700\u5927\u6570\u5b57\uff0c\u5373\u4e0a\u6ea2\uff08overflow\uff09\u3002\u8fd9\u5c06\u4f7f\u5206\u6bcd\u6216\u5206\u5b50\u53d8\u4e3a<code>inf</code>\uff08\u65e0\u7a77\u5927\uff09\uff0c\u6700\u540e\u5f97\u5230\u7684\u662f0\u3001<code>inf</code>\u6216<code>nan</code>\uff08\u4e0d\u662f\u6570\u5b57\uff09\u7684\\(\\hat y_j\\)\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u6280\u5de7\u662f\uff1a\u5728\u7ee7\u7eedsoftmax\u8ba1\u7b97\u4e4b\u524d\uff0c\u5148\u4ece\u6240\u6709\\(o_k\\)\u4e2d\u51cf\u53bb\\(\\max(o_k)\\)\u3002\u8fd9\u770b\u8d77\u6765\u6ca1\u5565\u7279\u522b\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e00\u6b65\u4e0d\u4f1a\u6539\u53d8 softmax \u7684\u8f93\u51fa\uff01\u56e0\u4e3a\u6307\u6570\u51fd\u6570\u53ea\u662f\u76f8\u5bf9\u5927\u5c0f\u7684\u6bd4\u8f83\uff0c\u51cf\u53bb\u4e00\u4e2a\u5e38\u6570\u540e\uff0c\u6bd4\u4f8b\u4e0d\u53d8\u3002\u901a\u8fc7\u8fd9\u4e00\u6b65\uff0c\u4f60\u53ef\u4ee5\u907f\u514d exponentiation \u5bfc\u81f4\u7684\u6570\u503c\u8fc7\u5927\uff0c\u4ece\u800c\u907f\u514d\u4e0a\u6ea2\u95ee\u9898\u3002</li> </ol> \\[ \\begin{aligned} \\hat y_j &amp; =  \\frac{\\exp(o_j - \\max(o_k))\\exp(\\max(o_k))}{\\sum_k \\exp(o_k - \\max(o_k))\\exp(\\max(o_k))} \\\\ &amp; = \\frac{\\exp(o_j - \\max(o_k))}{\\sum_k \\exp(o_k - \\max(o_k))}. \\end{aligned} \\] <ol> <li>\u5728\u51cf\u6cd5\u548c\u89c4\u8303\u5316\u6b65\u9aa4\u4e4b\u540e\uff0c\u53ef\u80fd\u6709\u4e9b\\(o_j - \\max(o_k)\\)\u5177\u6709\u8f83\u5927\u7684\u8d1f\u503c\u3002\u7531\u4e8e\u7cbe\u5ea6\u53d7\u9650\uff0c\\(\\exp(o_j - \\max(o_k))\\)\u5c06\u6709\u63a5\u8fd1\u96f6\u7684\u503c\uff0c\u5373\u4e0b\u6ea2\uff08underflow\uff09\u3002\u8fd9\u4e9b\u503c\u53ef\u80fd\u4f1a\u56db\u820d\u4e94\u5165\u4e3a\u96f6\uff0c\u4f7f\\(\\hat y_j\\)\u4e3a\u96f6\uff0c\u5e76\u4e14\u4f7f\u5f97\\(\\log(\\hat y_j)\\)\u7684\u503c\u4e3a<code>-inf</code>\u3002\u53cd\u5411\u4f20\u64ad\u51e0\u6b65\u540e\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u9762\u5bf9\u4e00\u5c4f\u5e55\u53ef\u6015\u7684<code>nan</code>\u7ed3\u679c\u3002\u4e3a\u4e86\u907f\u514d\u4e0a\u6ea2\u548c\u4e0b\u6ea2\u5e26\u6765\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408 softmax \u548c\u4ea4\u53c9\u71b5\uff0c\u76f4\u63a5\u5bf9\u672a\u89c4\u8303\u5316\u7684\u8f93\u51fa <code>o_j</code> \u8fdb\u884c\u5904\u7406\uff0c\u800c\u4e0d\u662f\u5148\u8ba1\u7b97 softmax \u518d\u53d6\u5bf9\u6570\u3002\u901a\u8fc7\u8fd9\u4e2a\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8ba1\u7b97\u4ea4\u53c9\u71b5\u65f6\u8df3\u8fc7\u5bf9 <code>exp</code> \u51fd\u6570\u7684\u4f7f\u7528\uff0c\u907f\u514d\u6f5c\u5728\u7684\u6570\u503c\u7a33\u5b9a\u6027\u95ee\u9898\u3002\u516c\u5f0f\u5982\u4e0b\uff1a</li> </ol> \\[ \\begin{aligned} \\log{(\\hat y_j)} &amp; = \\log\\left( \\frac{\\exp(o_j - \\max(o_k))}{\\sum_k \\exp(o_k - \\max(o_k))}\\right) \\\\ &amp; = \\log{(\\exp(o_j - \\max(o_k)))}-\\log{\\left( \\sum_k \\exp(o_k - \\max(o_k)) \\right)} \\\\ &amp; = o_j - \\max(o_k) -\\log{\\left( \\sum_k \\exp(o_k - \\max(o_k)) \\right)}. \\end{aligned} \\] <ol> <li>CrossEntropyLoss\u516c\u5f0f\u5982\u4e0b\uff1a</li> </ol> \\[ L_i = -\\log\\left(\\frac{\\exp(o_{i, y_i})}{\\sum_{j=1}^{C} \\exp(o_{i, j})}\\right) = -o_{i, y_i} + \\log\\left(\\sum_{j=1}^{C} \\exp(o_{i, j})\\right) \\] <ol> <li><code>reduction = 'none'</code>\uff0c\u5219\u8fd4\u56de\u6bcf\u4e2a\u6837\u672c\u7684\u635f\u5931\uff1b<code>'mean'</code>\u8fd4\u56de\u7684\u662f\u6574\u4f53\u635f\u5931\u5e73\u5747\uff1b<code>'sum'</code>\u8fd4\u56de\u7684\u662f\u6574\u4f53\u635f\u5931\u3002\u6362\u800c\u8a00\u4e4b\uff0cnone\u8fd4\u56de\u7684\u5f20\u91cf\u7684\u5f62\u72b6\u662f<code>torch.Tensor(batch_size, )</code>\u56e0\u4e3a\u6709batch_size\u4e2a\u6837\u672c\uff0c\u6bcf\u4e00\u4e2a\u6837\u672c\u6709\u4e00\u4e2a\u635f\u5931\u503c\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u65b9\u4fbf\u6211\u4eec\u5bf9\u8fd9\u4e9bLoss\u505a\u4e00\u4e9btorch API\u4e2d\u6ca1\u6709\u8bbe\u8ba1\u7684\u64cd\u4f5c\u3002</li> </ol> <pre><code>import torch\nfrom torch import nn\nfrom d2l import torch as d2l\nbatch_size = 256\ntrain_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)\n\n# PyTorch\u4e0d\u4f1a\u9690\u5f0f\u5730\u8c03\u6574\u8f93\u5165\u7684\u5f62\u72b6\u3002\u56e0\u6b64\uff0c\n# \u6211\u4eec\u5728\u7ebf\u6027\u5c42\u524d\u5b9a\u4e49\u4e86\u5c55\u5e73\u5c42\uff08flatten\uff09\uff0c\u6765\u8c03\u6574\u7f51\u7edc\u8f93\u5165\u7684\u5f62\u72b6\nnet = nn.Sequential(nn.Flatten(), nn.Linear(784, 10))\n\ndef init_weights(m):\n    if type(m) == nn.Linear:\n        nn.init.normal_(m.weight, std=0.01)\n\nnet.apply(init_weights)\nloss = nn.CrossEntropyLoss(reduction='none')\n# \u53c2\u6570\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u90fd\u662ftorch.optim\u4e2d\u7684\u4e00\u4e9b\u7c7b\u6765\u8fdb\u884c\u7ba1\u7406\uff01\ntrainer = torch.optim.SGD(net.parameters(), lr=0.1)\nnum_epochs = 10\nd2l.train_ch3(net, train_iter, test_iter, loss, num_epochs, trainer)\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.html","title":"\u7ebf\u6027\u56de\u5f52","text":""},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.html#_2","title":"\u7ebf\u6027\u56de\u5f52","text":"<p>\u56de\u5f52\uff08regression\uff09\u662f\u80fd\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u81ea\u53d8\u91cf\u4e0e\u56e0\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u5efa\u6a21\u7684\u4e00\u7c7b\u65b9\u6cd5\u3002\u5728\u6211\u4eec\u5f00\u59cb\u8003\u8651\u5982\u4f55\u7528\u6a21\u578b\u62df\u5408\uff08fit\uff09\u6570\u636e\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u4e00\u4e2a\u62df\u5408\u7a0b\u5ea6\u7684\u5ea6\u91cf\u3002\u635f\u5931\u51fd\u6570\uff08loss function\uff09\u80fd\u591f\u91cf\u5316\u76ee\u6807\u7684\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u975e\u8d1f\u6570\u4f5c\u4e3a\u635f\u5931\uff0c\u4e14\u6570\u503c\u8d8a\u5c0f\u8868\u793a\u635f\u5931\u8d8a\u5c0f\uff0c\u5b8c\u7f8e\u9884\u6d4b\u65f6\u7684\u635f\u5931\u4e3a0\u3002\u56de\u5f52\u95ee\u9898\u4e2d\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\u3002</p> <p>\u5f53\u6837\u672c\\(i\\)\u7684\u9884\u6d4b\u503c\u4e3a\\(\\hat{y}^{(i)}\\)\uff0c\u5176\u76f8\u5e94\u7684\u771f\u5b9e\u6807\u7b7e\u4e3a\\(y^{(i)}\\)\u65f6\uff0c\u5e73\u65b9\u8bef\u5dee\u53ef\u4ee5\u5b9a\u4e49\uff1a\\(l^{(i)}(\\mathbf{w}, b) = \\frac{1}{2} \\left(\\hat{y}^{(i)} - y^{(i)}\\right)^2.\\)</p> <p>\u7531\u4e8e\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\u4e2d\u7684\u4e8c\u6b21\u65b9\u9879\uff0c\u4f30\u8ba1\u503c\\(\\hat{y}^{(i)}\\)\u548c\u89c2\u6d4b\u503c\\(y^{(i)}\\)\u4e4b\u95f4\u8f83\u5927\u7684\u5dee\u5f02\u5c06\u5bfc\u81f4\u66f4\u5927\u7684\u635f\u5931\u3002\u4e3a\u4e86\u5ea6\u91cf\u6a21\u578b\u5728\u6574\u4e2a\u6570\u636e\u96c6\u4e0a\u7684\u8d28\u91cf\uff0c\u6211\u4eec\u9700\u8ba1\u7b97\u5728\u8bad\u7ec3\u96c6\\(n\\)\u4e2a\u6837\u672c\u4e0a\u7684\u635f\u5931\u5747\u503c\uff08\u4e5f\u7b49\u4ef7\u4e8e\u6c42\u548c\uff09\u3002  \u5728\u8bad\u7ec3\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5bfb\u627e\u4e00\u7ec4\u53c2\u6570\uff08\\(\\mathbf{w}^*, b^*\\)\uff09\uff0c\u8fd9\u7ec4\u53c2\u6570\u80fd\u6700\u5c0f\u5316\u5728\u6240\u6709\u8bad\u7ec3\u6837\u672c\u4e0a\u7684\u603b\u635f\u5931\u3002\u5982\u4e0b\u5f0f\uff1a  \u90a3\u4e48\\(L(\\mathbf{w}, b)\\)\u5c31\u662f\u4e00\u4e2a\u5173\u4e8e\\(\\mathbf{w}, b\\)\u8fd9\u4e24\u4e2a\u77e9\u9635\u7684\u51fd\u6570, \u90a3\u4e48\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e24\u4e2a\u77e9\u9635\u6c42\u5bfc, \u6c42\u51fa\u7684\u5bfc\u6570\u5c06\u7528\u4e8e\u66f4\u884c\u4e24\u4e2a\u53c2\u6570. </p> <p>\u6211\u4eec\u7528\u5230\u4e00\u79cd\u540d\u4e3a\u68af\u5ea6\u4e0b\u964d\uff08gradient descent\uff09\u7684\u65b9\u6cd5\uff0c\u8fd9\u79cd\u65b9\u6cd5\u51e0\u4e4e\u53ef\u4ee5\u4f18\u5316\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002\u5b83\u901a\u8fc7\u4e0d\u65ad\u5730\u5728\u635f\u5931\u51fd\u6570\u9012\u51cf\u7684\u65b9\u5411\u4e0a\u66f4\u65b0\u53c2\u6570\u6765\u964d\u4f4e\u8bef\u5dee\u3002\u4f46\u5b9e\u9645\u4e2d\u7684\u6267\u884c\u53ef\u80fd\u4f1a\u975e\u5e38\u6162\uff1a\u56e0\u4e3a\u5728\u6bcf\u4e00\u6b21\u66f4\u65b0\u53c2\u6570\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5728\u6bcf\u6b21\u9700\u8981\u8ba1\u7b97\u66f4\u65b0\u7684\u65f6\u5019\u968f\u673a\u62bd\u53d6\u4e00\u5c0f\u6279\u6837\u672c\uff0c\u8fd9\u79cd\u53d8\u4f53\u53eb\u505a\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08minibatch stochastic gradient descent\uff09\u3002</p> <p>\u600e\u4e48\u7406\u89e3\u4e0a\u9762\u8fd9\u6bb5\u8bdd? \u6c42\u51fa\u5bfc\u6570\u5728\u67d0\u4e2a\u786e\u5207\u503c\u7684\u77e9\u9635\u5904\u7684\u6570\u503c\u77e9\u9635\u6bd5\u7adf\u8fd8\u662f\u9700\u8981\u4ee3\u5165\u6570\u636e\u96c6\u7684\u6570\u636e\u7684. \u4e0e\u5176\u66f4\u65b0\u4e00\u6b21w, b\u77e9\u9635\u9700\u8981\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6, \u4e0d\u5982\u76f4\u63a5\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d, \u4e00\u5c0f\u90e8\u5206\u6570\u636e\u5c31\u80fd\u66f4\u65b0\u4e00\u6b21\u53c2\u6570, \u6548\u7387\u5c31\u9ad8\u591a\u4e86! \u6548\u7387\u9ad8\u5c31\u662f\u8282\u7701\u8ba1\u7b97\u8d44\u6e90!</p> <p>\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u968f\u673a\u62bd\u6837\u4e00\u4e2a\u5c0f\u6279\u91cf\\(\\mathcal{B}\\)\uff0c\u5b83\u662f\u7531\u56fa\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u6837\u672c\u7ec4\u6210\u7684\u3002\u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u5c0f\u6279\u91cf\u7684\u5e73\u5747\u635f\u5931\u5173\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u5bfc\u6570\uff08\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u68af\u5ea6\uff09\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u68af\u5ea6\u4e58\u4ee5\u4e00\u4e2a\u9884\u5148\u786e\u5b9a\u7684\u6b63\u6570\\(\\eta\\)\uff0c\u5e76\u4ece\u5f53\u524d\u53c2\u6570\u7684\u503c\u4e2d\u51cf\u6389\u3002\u6211\u4eec\u7528\u4e0b\u9762\u7684\u6570\u5b66\u516c\u5f0f\u6765\u8868\u793a\u8fd9\u4e00\u66f4\u65b0\u8fc7\u7a0b\uff08\\(\\partial\\)\u8868\u793a\u504f\u5bfc\u6570\uff09\uff1a  \u603b\u7ed3\u4e00\u4e0b\uff0c\u7b97\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>\uff081\uff09\u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\u7684\u503c\uff0c\u5982\u968f\u673a\u521d\u59cb\u5316\uff1b</p> <p>\uff082\uff09\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u5c0f\u6279\u91cf\u6837\u672c\u4e14\u5728\u8d1f\u68af\u5ea6\u7684\u65b9\u5411\u4e0a\u66f4\u65b0\u53c2\u6570\uff0c\u5e76\u4e0d\u65ad\u8fed\u4ee3\u8fd9\u4e00\u6b65\u9aa4\u3002</p> <p>\u5bf9\u4e8e\u5e73\u65b9\u635f\u5931\u548c\u4eff\u5c04\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u660e\u786e\u5730\u5199\u6210\u5982\u4e0b\u5f62\u5f0f:  \u7ebf\u6027\u56de\u5f52\u6070\u597d\u662f\u4e00\u4e2a\u5728\u6574\u4e2a\u57df\u4e2d\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u503c\u7684\u5b66\u4e60\u95ee\u9898\u3002\u4f46\u662f\u5bf9\u50cf\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u8fd9\u6837\u590d\u6742\u7684\u6a21\u578b\u6765\u8bf4\uff0c\u635f\u5931\u5e73\u9762\u4e0a\u901a\u5e38\u5305\u542b\u591a\u4e2a\u6700\u5c0f\u503c\u3002\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u8005\u5f88\u5c11\u4f1a\u53bb\u82b1\u8d39\u5927\u529b\u6c14\u5bfb\u627e\u8fd9\u6837\u4e00\u7ec4\u53c2\u6570\uff0c\u4f7f\u5f97\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u635f\u5931\u8fbe\u5230\u6700\u5c0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u66f4\u96be\u505a\u5230\u7684\u662f\u627e\u5230\u4e00\u7ec4\u53c2\u6570\uff0c\u8fd9\u7ec4\u53c2\u6570\u80fd\u591f\u5728\u6211\u4eec\u4ece\u672a\u89c1\u8fc7\u7684\u6570\u636e\u4e0a\u5b9e\u73b0\u8f83\u4f4e\u7684\u635f\u5931\uff0c\u8fd9\u4e00\u6311\u6218\u88ab\u79f0\u4e3a\u6cdb\u5316\uff08generalization\uff09\u3002</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.html#_3","title":"\u6b63\u592a\u5206\u5e03\u4e0e\u5e73\u65b9\u635f\u5931","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9\u566a\u58f0\u5206\u5e03\u7684\u5047\u8bbe\u6765\u89e3\u8bfb\u5e73\u65b9\u635f\u5931\u76ee\u6807\u51fd\u6570\u3002\u6b63\u6001\u5206\u5e03\u548c\u7ebf\u6027\u56de\u5f52\u4e4b\u95f4\u7684\u5173\u7cfb\u5f88\u5bc6\u5207\u3002\u6b63\u6001\u5206\u5e03\uff08normal distribution\uff09\uff0c\u4e5f\u79f0\u4e3a\u9ad8\u65af\u5206\u5e03\uff08Gaussian distribution\uff09\uff0c\u7b80\u5355\u7684\u8bf4\uff0c\u82e5\u968f\u673a\u53d8\u91cf\\(x\\)\u5177\u6709\u5747\u503c\\(\\mu\\)\u548c\u65b9\u5dee\\(\\sigma^2\\)\uff08\u6807\u51c6\u5dee\\(\\sigma\\)\uff09\uff0c\u5176\u6b63\u6001\u5206\u5e03\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u5982\u4e0b\uff1a  \u5747\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570\uff08\u7b80\u79f0\u5747\u65b9\u635f\u5931\uff09\u53ef\u4ee5\u7528\u4e8e\u7ebf\u6027\u56de\u5f52\u7684\u4e00\u4e2a\u539f\u56e0\u662f\uff1a\u6211\u4eec\u5047\u8bbe\u4e86\u89c2\u6d4b\u4e2d\u5305\u542b\u566a\u58f0\uff0c\u5176\u4e2d\u566a\u58f0\u670d\u4ece\u6b63\u6001\u5206\u5e03\u3002\u566a\u58f0\u6b63\u6001\u5206\u5e03:\\(\\(y = \\mathbf{w}^\\top \\mathbf{x} + b + \\epsilon,\\)\\) \u5176\u4e2d\uff0c\\(\\epsilon \\sim \\mathcal{N}(0, \\sigma^2)\\)\u3002\u56e0\u6b64, y\u4e5f\u662f\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf, \u5206\u5e03\u53ef\u4ee5\u5199\u6210\\(y\u223cN(w\u22a4x+b,\u03c3^2)\\)</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5199\u51fa\u901a\u8fc7\u7ed9\u5b9a\u7684\\(\\mathbf{x}\\)\u89c2\u6d4b\u5230\u7279\u5b9a\\(y\\)\u7684\u4f3c\u7136\uff08likelihood\uff09\uff1a  \u8fd9\u4e2a\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u5728\u7ed9\u5b9a\u8f93\u5165 \\(\\mathbf{x}\\)\u7684\u6761\u4ef6\u4e0b\uff0c\u89c2\u6d4b\u5230\u8f93\u51fay\u7684\u6982\u7387\u5206\u5e03\u3002</p> <p>\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\uff08Maximum Likelihood Estimation, \u7b80\u79f0 MLE\uff09\u662f\u4e00\u79cd\u4f30\u8ba1\u6a21\u578b\u53c2\u6570\u7684\u7edf\u8ba1\u65b9\u6cd5\u3002\u5b83\u7684\u76ee\u6807\u662f\u627e\u5230\u4f7f\u89c2\u6d4b\u6570\u636e\u5728\u67d0\u4e00\u5047\u8bbe\u7684\u6982\u7387\u6a21\u578b\u4e0b\u51fa\u73b0\u7684\u6982\u7387\uff08\u5373\u4f3c\u7136\uff09\u6700\u5927\u7684\u53c2\u6570\u503c\u3002\u5728\u7ed9\u5b9a\u4e00\u7ec4\u89c2\u6d4b\u6570\u636e\u548c\u4e00\u4e2a\u53c2\u6570\u5316\u7684\u7edf\u8ba1\u6a21\u578b\u7684\u524d\u63d0\u4e0b\uff0c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\u901a\u8fc7\u6700\u5927\u5316\u89c2\u6d4b\u6570\u636e\u5728\u8be5\u6a21\u578b\u4e2d\u7684\u4f3c\u7136\u51fd\u6570\uff0c\u4ece\u800c\u5f97\u5230\u6700\u7b26\u5408\u6570\u636e\u7684\u6a21\u578b\u53c2\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\u627e\u5230\u7684\u662f\u90a3\u4e9b\u4f7f\u5f97\u89c2\u6d4b\u6570\u636e\u6700\u6709\u53ef\u80fd\u53d1\u751f\u7684\u53c2\u6570\u503c\u3002</p> <p>\u73b0\u5728\uff0c\u6839\u636e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\uff0c\u53c2\u6570\\(\\mathbf{w}\\)\u548c\\(b\\)\u7684\u6700\u4f18\u503c\u662f\u4f7f\u6574\u4e2a\u6570\u636e\u96c6\u7684\u4f3c\u7136\u6700\u5927\u7684\u503c(\u7531\u4e8e\u6837\u672c\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff08\u72ec\u7acb\u540c\u5206\u5e03\u5047\u8bbe\uff0ci.i.d.\uff09\uff0c\u6574\u4e2a\u6570\u636e\u96c6 \\(\\mathbf{y}\\) \u5728\u7ed9\u5b9a\u8f93\u5165 \\(\\mathbf{X}\\) \u4e0b\u7684\u8054\u5408\u6982\u7387\u5c31\u662f\u6bcf\u4e2a\u6837\u672c\u6761\u4ef6\u6982\u7387\u7684\u4e58\u79ef)\uff1a  \u867d\u7136\u4f7f\u8bb8\u591a\u6307\u6570\u51fd\u6570\u7684\u4e58\u79ef\u6700\u5927\u5316\u770b\u8d77\u6765\u5f88\u56f0\u96be\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u76ee\u6807\u7684\u524d\u63d0\u4e0b\uff0c\u901a\u8fc7\u6700\u5927\u5316\u4f3c\u7136\u5bf9\u6570\u6765\u7b80\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u6539\u4e3a\u6700\u5c0f\u5316\u8d1f\u5bf9\u6570\u4f3c\u7136\\(-\\log P(\\mathbf y \\mid \\mathbf X)\\)\u3002\u7531\u6b64\u53ef\u4ee5\u5f97\u5230\u7684\u6570\u5b66\u516c\u5f0f\u662f\uff1a  \u73b0\u5728\u6211\u4eec\u53ea\u9700\u8981\u5047\u8bbe\\(\\sigma\\)\u662f\u67d0\u4e2a\u56fa\u5b9a\u5e38\u6570\u5c31\u53ef\u4ee5\u5ffd\u7565\u7b2c\u4e00\u9879\uff0c\u56e0\u4e3a\u7b2c\u4e00\u9879\u4e0d\u4f9d\u8d56\u4e8e\\(\\mathbf{w}\\)\u548c\\(b\\)\u3002\u73b0\u5728\u7b2c\u4e8c\u9879\u9664\u4e86\u5e38\u6570\\(\\frac{1}{\\sigma^2}\\)\u5916\uff0c\u5176\u4f59\u90e8\u5206\u548c\u524d\u9762\u4ecb\u7ecd\u7684\u5747\u65b9\u8bef\u5dee\u662f\u4e00\u6837\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e0a\u9762\u5f0f\u5b50\u7684\u89e3\u5e76\u4e0d\u4f9d\u8d56\u4e8e\\(\\sigma\\)\u3002\u56e0\u6b64\uff0c\u5728\u9ad8\u65af\u566a\u58f0\u7684\u5047\u8bbe\u4e0b\uff0c\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u7b49\u4ef7\u4e8e\u5bf9\u7ebf\u6027\u6a21\u578b\u7684\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\u3002</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.html#_4","title":"\u4ece\u96f6\u5f00\u59cb\u7684\u7ebf\u6027\u56de\u5f52","text":"<p>\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u5f20\u91cf\u548c\u81ea\u52a8\u6c42\u5bfc\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06[\u6839\u636e\u5e26\u6709\u566a\u58f0\u7684\u7ebf\u6027\u6a21\u578b\u6784\u9020\u4e00\u4e2a\u4eba\u9020\u6570\u636e\u96c6\u3002]\u6211\u4eec\u7684\u4efb\u52a1\u662f\u4f7f\u7528\u8fd9\u4e2a\u6709\u9650\u6837\u672c\u7684\u6570\u636e\u96c6\u6765\u6062\u590d\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4f4e\u7ef4\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u53ef\u89c6\u5316\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u5305\u542b1000\u4e2a\u6837\u672c\u7684\u6570\u636e\u96c6\uff0c\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u91c7\u6837\u76842\u4e2a\u7279\u5f81\u3002\u6211\u4eec\u7684\u5408\u6210\u6570\u636e\u96c6\u662f\u4e00\u4e2a\u77e9\u9635\\(\\mathbf{X}\\in \\mathbb{R}^{1000 \\times 2}\\)\u3002</p> <p>\u6211\u4eec\u4f7f\u7528\u7ebf\u6027\u6a21\u578b\u53c2\u6570\\(\\mathbf{w} = [2, -3.4]^\\top\\)\u3001\\(b = 4.2\\)\u548c\u566a\u58f0\u9879\\(\\epsilon\\)\u751f\u6210\u6570\u636e\u96c6\u53ca\u5176\u6807\u7b7e:\\(\\mathbf{y}= \\mathbf{X} \\mathbf{w} + b + \\mathbf\\epsilon.\\)</p> <pre><code>def synthetic_data(w, b, num_examples): \n    X = torch.normal(0, 1, (num_examples, len(w)))\n    y = torch.matmul(X, w) + b\n    y += torch.normal(0, 0.01, y.shape)\n    return X, y.reshape((-1, 1))\ntrue_w = torch.tensor([2, -3.4])\ntrue_b = 4.2\nfeatures, labels = synthetic_data(true_w, true_b, 1000)\nprint(features.shape, labels.shape)\n# torch.Size([1000, 2]) torch.Size([1000, 1])\n</code></pre> <p>\u6ce8\u610f\uff0c[<code>features</code>\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u5305\u542b\u4e00\u4e2a\u4e8c\u7ef4\u6570\u636e\u6837\u672c\uff0clabels\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u5305\u542b\u4e00\u7ef4\u6807\u7b7e\u503c\uff08\u4e00\u4e2a\u6807\u91cf]\u3002\u6570\u636e\u5df2\u7ecf\u521b\u5efa\u597d\u4e86, \u63a5\u4e0b\u6765\u8bfb\u53d6\u7684\u5c31\u662f\u6570\u636e\u96c6\u4e86:</p> <p>\u8bad\u7ec3\u6a21\u578b\u65f6\u8981\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u904d\u5386\uff0c\u6bcf\u6b21\u62bd\u53d6\u4e00\u5c0f\u6279\u91cf\u6837\u672c\uff0c\u5e76\u4f7f\u7528\u5b83\u4eec\u6765\u66f4\u65b0\u6211\u4eec\u7684\u6a21\u578b\u3002\u7531\u4e8e\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u8bad\u7ec3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u57fa\u7840\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u80fd\u6253\u4e71\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u5e76\u4ee5\u5c0f\u6279\u91cf\u65b9\u5f0f\u83b7\u53d6\u6570\u636e\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a<code>data_iter</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u6279\u91cf\u5927\u5c0f\u3001\u7279\u5f81\u77e9\u9635\u548c\u6807\u7b7e\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210\u5927\u5c0f\u4e3a<code>batch_size</code>\u7684\u5c0f\u6279\u91cf\u3002\u6bcf\u4e2a\u5c0f\u6279\u91cf\u5305\u542b\u4e00\u7ec4\u7279\u5f81\u548c\u6807\u7b7e\u3002</p> <pre><code>def data_iter(batch_size, features, labels):\n    num_examples = len(features)\n    indices = list(range(num_examples))\n    # \u8fd9\u4e9b\u6837\u672c\u662f\u968f\u673a\u8bfb\u53d6\u7684\uff0c\u6ca1\u6709\u7279\u5b9a\u7684\u987a\u5e8f\n    random.shuffle(indices)\n    for i in range(0, num_examples, batch_size):\n        # \u5f20\u91cf\u7d22\u5f15\uff08tensor indexing\uff09\n        batch_indices = torch.tensor(\n            indices[i: min(i + batch_size, num_examples)])\n        yield features[batch_indices], labels[batch_indices]\n</code></pre> <p>\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c<code>yield</code> \u662f Python \u4e2d\u751f\u6210\u5668\u51fd\u6570\u7684\u5173\u952e\u5b57\u4e4b\u4e00\u3002\u4e0e\u666e\u901a\u7684 <code>return</code> \u4e0d\u540c\uff0c<code>yield</code> \u4e0d\u4f1a\u7acb\u5373\u7ed3\u675f\u51fd\u6570\u7684\u6267\u884c\uff0c\u800c\u662f\u4f1a\u6682\u505c\u51fd\u6570\u7684\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002\u5f53\u518d\u6b21\u8c03\u7528\u8fd9\u4e2a\u751f\u6210\u5668\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4f1a\u4ece\u4e0a\u6b21\u6682\u505c\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u4ece\u5747\u503c\u4e3a0\u3001\u6807\u51c6\u5dee\u4e3a0.01\u7684\u6b63\u6001\u5206\u5e03\u4e2d\u91c7\u6837\u968f\u673a\u6570\u6765\u521d\u59cb\u5316\u6743\u91cd\uff0c\u5e76\u5c06\u504f\u7f6e\u521d\u59cb\u5316\u4e3a0\u3002</p> <pre><code>w = torch.normal(0, 0.01, size=(2,1), requires_grad=True)\nb = torch.zeros(1, requires_grad=True)\n</code></pre> <p>\u5728\u521d\u59cb\u5316\u53c2\u6570\u4e4b\u540e\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u662f\u66f4\u65b0\u8fd9\u4e9b\u53c2\u6570\uff0c\u76f4\u5230\u8fd9\u4e9b\u53c2\u6570\u8db3\u591f\u62df\u5408\u6211\u4eec\u7684\u6570\u636e\u3002\u6bcf\u6b21\u66f4\u65b0\u90fd\u9700\u8981\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5173\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u68af\u5ea6\u3002\u6709\u4e86\u8fd9\u4e2a\u68af\u5ea6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5411\u51cf\u5c0f\u635f\u5931\u7684\u65b9\u5411\u66f4\u65b0\u6bcf\u4e2a\u53c2\u6570\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5fc5\u987b[\u5b9a\u4e49\u6a21\u578b\uff0c\u5c06\u6a21\u578b\u7684\u8f93\u5165\u548c\u53c2\u6570\u540c\u6a21\u578b\u7684\u8f93\u51fa\u5173\u8054\u8d77\u6765\u3002]</p> <p>\u56de\u60f3\u4e00\u4e0b\uff0c\u8981\u8ba1\u7b97\u7ebf\u6027\u6a21\u578b\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u53ea\u9700\u8ba1\u7b97\u8f93\u5165\u7279\u5f81\\(\\mathbf{X}\\)\u548c\u6a21\u578b\u6743\u91cd\\(\\mathbf{w}\\)\u7684\u77e9\u9635-\u5411\u91cf\u4e58\u6cd5\u540e\u52a0\u4e0a\u504f\u7f6e\\(b\\)\u3002\u6ce8\u610f\uff0c\u4e0a\u9762\u7684\\(\\mathbf{Xw}\\)\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u800c\\(b\\)\u662f\u4e00\u4e2a\u6807\u91cf\u3002\u800c\u5f53\u6211\u4eec\u7528\u4e00\u4e2a\u5411\u91cf\u52a0\u4e00\u4e2a\u6807\u91cf\u65f6\uff0c\u6807\u91cf\u4f1a\u88ab\u52a0\u5230\u5411\u91cf\u7684\u6bcf\u4e2a\u5206\u91cf\u4e0a\u3002\u56e0\u4e3a\u9700\u8981\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u5148\u5b9a\u4e49\u635f\u5931\u51fd\u6570\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u5e73\u65b9\u635f\u5931\u51fd\u6570(MSELoss)\u3002</p> <pre><code>def linreg(X, w, b): \n    \"\"\"\u7ebf\u6027\u56de\u5f52\u6a21\u578b\"\"\"\n    return torch.matmul(X, w) + b\ndef squared_loss(y_hat, y):  \n    \"\"\"\u5747\u65b9\u635f\u5931\"\"\"\n    return (y_hat - y.reshape(y_hat.shape)) ** 2 / 2\n</code></pre> <p>\u7ebf\u6027\u56de\u5f52\u6709\u89e3\u6790\u89e3\u3002\u5c3d\u7ba1\u7ebf\u6027\u56de\u5f52\u6709\u89e3\u6790\u89e3\uff0c\u4f46\u672c\u4e66\u4e2d\u7684\u5176\u4ed6\u6a21\u578b\u5374\u6ca1\u6709\u3002\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3002</p> <p>\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u4f7f\u7528\u4ece\u6570\u636e\u96c6\u4e2d\u968f\u673a\u62bd\u53d6\u7684\u4e00\u4e2a\u5c0f\u6279\u91cf\uff0c\u7136\u540e\u6839\u636e\u53c2\u6570\u8ba1\u7b97\u635f\u5931\u7684\u68af\u5ea6\u3002\u63a5\u4e0b\u6765\uff0c\u671d\u7740\u51cf\u5c11\u635f\u5931\u7684\u65b9\u5411\u66f4\u65b0\u6211\u4eec\u7684\u53c2\u6570\u3002\u4e0b\u9762\u7684\u51fd\u6570\u5b9e\u73b0\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u6a21\u578b\u53c2\u6570\u96c6\u5408\u3001\u5b66\u4e60\u901f\u7387\u548c\u6279\u91cf\u5927\u5c0f\u4f5c\u4e3a\u8f93\u5165\u3002\u6bcf\u4e00\u6b65\u66f4\u65b0\u7684\u5927\u5c0f\u7531\u5b66\u4e60\u901f\u7387<code>lr</code>\u51b3\u5b9a\u3002\u56e0\u4e3a\u6211\u4eec\u8ba1\u7b97\u7684\u635f\u5931\u662f\u4e00\u4e2a\u6279\u91cf\u6837\u672c\u7684\u603b\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u6279\u91cf\u5927\u5c0f\uff08<code>batch_size</code>\uff09\u6765\u89c4\u8303\u5316\u6b65\u957f\uff0c\u8fd9\u6837\u6b65\u957f\u5927\u5c0f\u5c31\u4e0d\u4f1a\u53d6\u51b3\u4e8e\u6211\u4eec\u5bf9\u6279\u91cf\u5927\u5c0f\u7684\u9009\u62e9\u3002</p> <pre><code>def sgd(params, lr, batch_size): \n    \"\"\"\u5c0f\u6279\u91cf\u968f\u673a\u68af\u5ea6\u4e0b\u964d\"\"\"\n    # \u73b0\u5728\u60c5\u51b5\u662f\u5df2\u7ecfparams\u8ba1\u7b97\u8fc7\u4e00\u6b21\u68af\u5ea6\u4e86,\u7136\u540e\u9700\u8981\u66f4\u65b0\u5e76\u6e05\u7a7a\u50a8\u5b58\u7684\u68af\u5ea6\n    with torch.no_grad(): \n    # \u5728\u6a21\u578b\u63a8\u7406\uff08inference\uff09\u9636\u6bb5\u6216\u5728\u4e0d\u9700\u8981\u8ba1\u7b97\u68af\u5ea6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\n    # \u4ee5\u8282\u7701\u5185\u5b58\u548c\u63d0\u9ad8\u8ba1\u7b97\u901f\u5ea6\n        for param in params: \n            param -= lr * param.grad / batch_size\n            param.grad.zero_() # \u6e05\u7a7a\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u6a21\u578b\u8bad\u7ec3\u6240\u6709\u9700\u8981\u7684\u8981\u7d20\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e3b\u8981\u7684[\u8bad\u7ec3\u8fc7\u7a0b]\u90e8\u5206\u4e86\u3002\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u8bfb\u53d6\u4e00\u5c0f\u6279\u91cf\u8bad\u7ec3\u6837\u672c\uff0c\u5e76\u901a\u8fc7\u6211\u4eec\u7684\u6a21\u578b\u6765\u83b7\u5f97\u4e00\u7ec4\u9884\u6d4b\u3002\u8ba1\u7b97\u5b8c\u635f\u5931\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u53cd\u5411\u4f20\u64ad\uff0c\u5b58\u50a8\u6bcf\u4e2a\u53c2\u6570\u7684\u68af\u5ea6\u3002\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528\u4f18\u5316\u7b97\u6cd5<code>sgd</code>\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u3002</p> <p>\u5728\u6bcf\u4e2a\u8fed\u4ee3\u5468\u671f\uff08epoch\uff09\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528<code>data_iter</code>\u51fd\u6570\u904d\u5386\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u5e76\u5c06\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u6240\u6709\u6837\u672c\u90fd\u4f7f\u7528\u4e00\u6b21\uff08\u5047\u8bbe\u6837\u672c\u6570\u80fd\u591f\u88ab\u6279\u91cf\u5927\u5c0f\u6574\u9664\uff09\u3002\u8fd9\u91cc\u7684\u8fed\u4ee3\u5468\u671f\u4e2a\u6570<code>num_epochs</code>\u548c\u5b66\u4e60\u7387<code>lr</code>\u90fd\u662f\u8d85\u53c2\u6570\uff0c\u5206\u522b\u8bbe\u4e3a3\u548c0.03\u3002\u8bbe\u7f6e\u8d85\u53c2\u6570\u5f88\u68d8\u624b\uff0c\u9700\u8981\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u8fdb\u884c\u8c03\u6574\u3002</p> <pre><code>lr = 0.03\nnum_epochs = 3\nnet = linreg\nloss = squared_loss\nfor epoch in range(num_epochs):\n    for X, y in data_iter(batch_size, features, labels):\n        l = loss(net(X, w, b), y)  # X\u548cy\u7684\u5c0f\u6279\u91cf\u635f\u5931\n        # \u56e0\u4e3al\u5f62\u72b6\u662f(batch_size,1)\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6807\u91cf\u3002l\u4e2d\u7684\u6240\u6709\u5143\u7d20\u88ab\u52a0\u5230\u4e00\u8d77\uff0c\n        # \u5e76\u4ee5\u6b64\u8ba1\u7b97\u5173\u4e8e[w,b]\u7684\u68af\u5ea6\n        l.sum().backward()\n        sgd([w, b], lr, batch_size)  # \u4f7f\u7528\u53c2\u6570\u7684\u68af\u5ea6\u66f4\u65b0\u53c2\u6570\n    with torch.no_grad():\n        train_l = loss(net(features, w, b), labels)\n        print(f'epoch {epoch + 1}, loss {float(train_l.mean()):f}')\nprint(f'w\u7684\u4f30\u8ba1\u8bef\u5dee: {true_w - w.reshape(true_w.shape)}')\nprint(f'b\u7684\u4f30\u8ba1\u8bef\u5dee: {true_b - b}')\n# w\u7684\u4f30\u8ba1\u8bef\u5dee: tensor([ 0.0004, -0.0011], grad_fn=&lt;SubBackward0&gt;)\n# b\u7684\u4f30\u8ba1\u8bef\u5dee: tensor([0.0013], grad_fn=&lt;RsubBackward1&gt;)\n</code></pre> <p>\u6211\u4eec\u53d1\u73b0\u62df\u5408\u51fa\u6765\u7684\u53c2\u6570\u548c\u539f\u6765\u7684\u5341\u5206\u63a5\u8fd1!</p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%BA%BF%E6%80%A7%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.html#_5","title":"\u7b80\u4ecb\u5b9e\u73b0","text":"<p>\u4f7f\u7528torch\u9ad8\u7ea7\u7684API\u5de5\u5177:</p> <ol> <li><code>*data_arrays</code> \u7684\u4f5c\u7528\u662f\u5c06 <code>data_arrays</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u4f20\u9012\u7ed9 <code>data.TensorDataset</code> \u6784\u9020\u51fd\u6570. \u8fd9\u91cc\u4f7f\u7528*\u662f\u56e0\u4e3a\u6709\u4e24\u4e2a\u5bf9\u8c61: feature\u4e0elabels\u9700\u8981\u5236\u4f5citerator.</li> <li>\u5e03\u5c14\u503c<code>is_train</code>\u8868\u793a\u662f\u5426\u5e0c\u671b\u6570\u636e\u8fed\u4ee3\u5668\u5bf9\u8c61\u5728\u6bcf\u4e2a\u8fed\u4ee3\u5468\u671f\u5185\u6253\u4e71\u6570\u636e</li> <li>\u5728\u4f7f\u7528<code>net</code>\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570</li> <li>\u6b63\u5982\u6211\u4eec\u5728\u6784\u9020<code>nn.Linear</code>\u65f6\u6307\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u5c3a\u5bf8\u4e00\u6837\uff0c\u73b0\u5728\u6211\u4eec\u80fd\u76f4\u63a5\u8bbf\u95ee\u53c2\u6570\u4ee5\u8bbe\u5b9a\u5b83\u4eec\u7684\u521d\u59cb\u503c\u3002\u6211\u4eec\u901a\u8fc7<code>net[0]</code>\u9009\u62e9\u7f51\u7edc\u4e2d\u7684\u7b2c\u4e00\u4e2a\u56fe\u5c42\uff0c\u7136\u540e\u4f7f\u7528<code>weight.data</code>\u548c<code>bias.data</code>\u65b9\u6cd5\u8bbf\u95ee\u53c2\u6570\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u66ff\u6362\u65b9\u6cd5<code>normal_</code>\u548c<code>fill_</code>\u6765\u91cd\u5199\u53c2\u6570\u503c\u3002</li> <li>\u4e0d\u8bba\u8f93\u5165\u7684\u5f62\u72b6\u662f\u600e\u6837\uff0c<code>nn.MSELoss()</code> \u6700\u540e\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6807\u91cf\uff0c\u56e0\u4e3a\u5b83\u5c06\u6240\u6709\u6837\u672c\u7684\u635f\u5931\u503c\u8fdb\u884c\u6c42\u5e73\u5747\uff08\u6216\u6c42\u548c\uff09\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u635f\u5931\u503c\u3002\u8fd9\u79cd\u8bbe\u8ba1\u662f\u4e3a\u4e86\u4fbf\u4e8e\u4f18\u5316\u7b97\u6cd5\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u3002</li> </ol> <pre><code>import numpy as np\nimport torch\nfrom torch.utils import data\nfrom d2l import torch as d2l\nfrom torch import nn\n# \u624b\u6413\u6570\u636e\u96c6\ntrue_w = torch.tensor([2, -3.4])\ntrue_b = 4.2\nfeatures, labels = d2l.synthetic_data(true_w, true_b, 1000)\n\ndef load_array(data_arrays, batch_size, is_train=True): \n    \"\"\"\u6784\u9020\u4e00\u4e2aPyTorch\u6570\u636e\u8fed\u4ee3\u5668\"\"\"\n    dataset = data.TensorDataset(*data_arrays)\n    return data.DataLoader(dataset, batch_size, shuffle=is_train)\n\nbatch_size = 10\ndata_iter = load_array((features, labels), batch_size)\nnet = nn.Sequential(nn.Linear(2, 1))\nnet[0].weight.data.normal_(0, 0.01)\nnet[0].bias.data.fill_(0)\nloss = nn.MSELoss()\ntrainer = torch.optim.SGD(net.parameters(), lr=0.03)\nnum_epochs = 3\nfor epoch in range(num_epochs):\n    for X, y in data_iter:\n        l = loss(net(X) ,y)\n        # \u6ce8\u610f! \u7edf\u4e00\u5728\u5411\u524d\u4f20\u64ad\u4e4b\u524d\u6216\u4e4b\u540e\u4e4b\u540e, \u9700\u8981\u6e05\u7a7a\u68af\u5ea6!\n        trainer.zero_grad()\n        # \u53cd\u5411\u4f20\u64ad\n        l.backward()\n        # \u4f18\u5316\u5668\u66f4\u65b0\u53c2\u6570!\n        trainer.step()\n    l = loss(net(features), labels)\n    print(f'epoch {epoch + 1}, loss {l:f}')\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86.html","title":"\u6570\u636e\u64cd\u4f5c\u4e0e\u6570\u636e\u9884\u5904\u7406","text":""},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86.html#_2","title":"\u6570\u636e\u64cd\u4f5c","text":"<p>N\u7ef4\u6570\u7ec4\u662f\u673a\u5668\u5b66\u4e60\u548c\u795e\u7ecf\u7f51\u7edc\u7684\u4e3b\u8981\u6570\u636e\u7ed3\u6784\uff1a0D\u662f\u6807\u91cf\uff1b1D\u662f\u5411\u91cf\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\uff1b2D\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u6bd4\u5982\u8bf4\u6837\u672c-\u7279\u5f81\u77e9\u9635\uff1b3D\u53ef\u4ee5\u4ee3\u8868RGB\u56fe\u7247\uff0c\u5bbd\u00d7\u9ad8\u00d7\u901a\u9053\uff1b4D\u53ef\u4ee5\u662f\u4e00\u4e2aRGB\u7167\u7247\u6279\u91cf\u3002\u8bf8\u5982\u6b64\u7c7b\u3002</p> <p>\u521b\u5efa\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u9700\u8981\u4e09\u4e2a\u53c2\u6570\uff1a\u5f62\u72b6\uff0c\u4f8b\u59823\u00d74\u77e9\u9635\uff1b\u5143\u7d20\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\u8bf432\u4f4d\u6d6e\u70b9\u6570\uff1b\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u4f8b\u5982\u8bf4\u5168\u662f0\u6216\u8005\u968f\u673a\u5206\u5e03\u3002\u90a3\u4e48\u8bbf\u95ee\u5143\u7d20\u7528\u4e0b\u6807\u8fdb\u884c\u8bbf\u95ee\uff1a\u6b63\u89c4\u6765\u8bf4\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u4e0a\uff0c\u6709\u4e09\u4e2a\u53c2\u6570\uff0c<code>a:b:c</code>\uff0ca\u4ee3\u8868\u8d77\u59cb\u4f4d\u7f6e\uff0cb\u4ee3\u8868\u7ec8\u6b62\u4f4d\u7f6e\u4f46\u662f\u4e0d\u5305\u542b\uff08\u5373\u8bbf\u95ee\u533a\u95f4\u4e3a\\([a,b)\\)\uff09\uff0cc\u4ee3\u8868\u8bbf\u95ee\u65f6\u7684\u6b65\u957f\u3002\u5982\u679c\u53ea\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u9ed8\u8ba4\u586b\u5165a\uff0c\u4e24\u4e2a\u5c31\u662fab\uff0c\u4e09\u4e2a\u5c31\u662fabc\uff1b\u4e09\u4e2a\u53c2\u6570\u6ca1\u6709\u5fc5\u8981\u5168\u586b\u6ee1\uff0c\u6b65\u957f\u9ed8\u8ba4\u662f1\uff0c\u800ca b\u6ca1\u586b\u7684\u8bdd\u4ee3\u8868\u524d\u9762or\u540e\u9762\u7684\u5168\u53d6\u3002\u6bd4\u5982\u8bf4\uff1a<code>[1:3, 1:]</code>\u5728\u4e8c\u7ef4\u77e9\u9635\u4e2d\u5c31\u662f\u884c\u6570\u4e3a1 2\uff0c\u5217\u6570\u4e3a1\u53ca\u4ee5\u540e\u7684\u5168\u90e8\u5143\u7d20\uff1b<code>[::3, ::]</code>\u4ee3\u8868\u7684\u5c31\u662f\u884c\u6570\u4e0a\u4ece0\u5f00\u59cb\u6b65\u957f\u4e3a3\uff0c\u5217\u6570\u4e0a\u90fd\u53d6\u4e2d\u7684\u5143\u7d20\u3002</p> <p>\u540c\u65f6\u5173\u4e8e\u5f20\u91cf\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u5982\u4e0b\uff1a</p> <pre><code>import torch\nx = torch.arange(12)\n# tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])\nx.shape\n# torch.Size([12])\nx.numel() # \u5f20\u91cf\u4e2d\u5143\u7d20\u7684\u603b\u6570\nX = x.reshape(3, 4) # \u6539\u53d8\u5f62\u72b6\u4f46\u662f\u4e0d\u6539\u53d8\u5143\u7d20\u6570\u91cf\u548c\u503c\nX = x.reshape(-1, 4) # -1\u7528\u6765\u81ea\u52a8\u8ba1\u7b97\u7ef4\u5ea6\nx1 = torch.zeros((2, 3, 4)) # \u4f20\u5165\u7684\u53c2\u6570\u4ee3\u8868\u4e86\u5f62\u72b6\u7ef4\u5ea6\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u751f\u6210\u7684\u503c\u90fd\u662f0\nx2 = torch.ones((2, 3, 4)) # \u540c\u4e0a\uff0c\u751f\u6210\u7684\u5168\u662f1\uff1b\u6ce8\u610f\u4f20\u5165\u7684\u662f\u5143\u7ec4\nx3 = torch.randn(3, 4) # \u968f\u673a\u751f\u6210\u6d6e\u70b9\u6570\uff0c\u800c\u4e14\u662f\u5728\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\u7684\u9ad8\u65af\u5206\u5e03\u4e2d\u968f\u673a\u91c7\u6837\n# \u5f53\u7136\u4e0a\u9762\u8fd9\u4e2a\u65b9\u6cd5\u4f20\u5165\u5143\u7ec4\u4e5f\u662f\u6b63\u786e\u7684\nx4 = torch.tensor([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\n# \u5229\u7528\u5d4c\u5957\u5217\u8868\u6765\u4e3a\u6240\u9700\u5f20\u91cf\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u8d4b\u503c\n\nx = torch.tensor([1.0, 2, 4, 8])\ny = torch.tensor([2, 2, 2, 2])\nx + y, x - y, x * y, x / y, x ** y  # **\u8fd0\u7b97\u7b26\u662f\u6c42\u5e42\u8fd0\u7b97\n'''\n(tensor([ 3.,  4.,  6., 10.]),\n tensor([-1.,  0.,  2.,  6.]),\n tensor([ 2.,  4.,  8., 16.]),\n tensor([0.5000, 1.0000, 2.0000, 4.0000]),\n tensor([ 1.,  4., 16., 64.]))\n'''\ntorch.exp(x)\n# tensor([2.7183e+00, 7.3891e+00, 5.4598e+01, 2.9810e+03])\n\nX = torch.arange(12, dtype=torch.float32).reshape((3,4)) # \u89c4\u5b9a\u6570\u636e\u7c7b\u578b\nY = torch.tensor([[2.0, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])\ntorch.cat((X, Y), dim=0), torch.cat((X, Y), dim=1)\n# \u6ce8\u610fdim\u53c2\u6570\u4ee3\u8868\u62fc\u63a5\u7684\u7ef4\u5ea6\n'''\n(tensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [ 2.,  1.,  4.,  3.],\n         [ 1.,  2.,  3.,  4.],\n         [ 4.,  3.,  2.,  1.]]),\n tensor([[ 0.,  1.,  2.,  3.,  2.,  1.,  4.,  3.],\n         [ 4.,  5.,  6.,  7.,  1.,  2.,  3.,  4.],\n         [ 8.,  9., 10., 11.,  4.,  3.,  2.,  1.]]))\n'''\ntorch.cat((X, Y), dim=0), torch.cat((X, Y), dim=0)\n'''\ntensor([[ 0.,  1.,  2.,  3.],\n         [ 4.,  5.,  6.,  7.],\n         [ 8.,  9., 10., 11.],\n         [ 2.,  1.,  4.,  3.],\n         [ 1.,  2.,  3.,  4.],\n         [ 4.,  3.,  2.,  1.]])\n'''\nx = X == Y # \u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679cX\u548cY\u76f8\u7b49\uff0c\u90a3\u4e48\u6784\u5efa\u7684\u65b0\u5f20\u91cf\u5bf9\u5e94\u4f4d\u7f6e\u662f1\nX.sum # \u6240\u6709\u5143\u7d20\u6c42\u548c\n</code></pre> <p>\u5176\u4e2d\uff0c\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u5e7f\u64ad\u673a\u5236\uff0c\u6765\u81ea\u4e8eNumpy\u7684\u4e60\u60ef\uff1a\u7531\u4e8e<code>a</code>\u548c<code>b</code>\u5206\u522b\u662f\\(3\\times1\\)\u548c\\(1\\times2\\)\u77e9\u9635\uff0c\u5982\u679c\u8ba9\u5b83\u4eec\u76f8\u52a0\uff0c\u5b83\u4eec\u7684\u5f62\u72b6\u4e0d\u5339\u914d\u3002\u6211\u4eec\u5c06\u4e24\u4e2a\u77e9\u9635\u5e7f\u64ad\u4e3a\u4e00\u4e2a\u66f4\u5927\u7684\\(3\\times2\\)\u77e9\u9635\uff0c\u5982\u4e0b\u6240\u793a\uff1a\u77e9\u9635<code>a</code>\u5c06\u590d\u5236\u5217\uff0c \u77e9\u9635<code>b</code>\u5c06\u590d\u5236\u884c\uff0c\u7136\u540e\u518d\u6309\u5143\u7d20\u76f8\u52a0\u3002</p> <pre><code>a = torch.arange(3).reshape((3, 1))\nb = torch.arange(2).reshape((1, 2))\na+b\n'''\ntensor([[0, 1],\n        [1, 2],\n        [2, 3]])\n'''\n</code></pre> <p>\u540c\u65f6\u5982\u679c\u5e0c\u671b\u53cd\u8fc7\u6765\u5207\u7247\uff0c\u9700\u8981\u5229\u7528<code>torch.flip(tensor, dims=[])</code>\u65b9\u6cd5\uff08dims\u91cc\u9762\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\uff09</p> <pre><code>X = torch.arrange(12).reshape(3, 4)\ntorch.flip(X, dims=[1])\n'''\ntensor([[ 3.,  2.,  1.,  0.],\n         [ 7.,  6.,  5.,  4.],\n         [11., 10.,  9.,  8.]])\n'''\ntorch.flip(X, dims=[0, 1])\n'''\n tensor([[11., 10.,  9.,  8.],\n         [ 7.,  6.,  5.,  4.],\n         [ 3.,  2.,  1.,  0.]]))\n'''\n</code></pre> <p>\u540c\u65f6\uff1a\u8fd0\u884c\u4e00\u4e9b\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e3a\u65b0\u7ed3\u679c\u5206\u914d\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7528<code>Y = X + Y</code>\uff0c\u6211\u4eec\u5c06\u53d6\u6d88\u5f15\u7528<code>Y</code>\u6307\u5411\u7684\u5f20\u91cf\uff0c\u800c\u662f\u6307\u5411\u65b0\u5206\u914d\u7684\u5185\u5b58\u5904\u7684\u5f20\u91cf\u3002</p> <pre><code>before = id(Y)\nY = Y + X\nid(Y) == before # False\n</code></pre> <p>\u8fd9\u53ef\u80fd\u662f\u4e0d\u53ef\u53d6\u7684\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u60f3\u603b\u662f\u4e0d\u5fc5\u8981\u5730\u5206\u914d\u5185\u5b58\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u6709\u6570\u767e\u5146\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u5728\u4e00\u79d2\u5185\u591a\u6b21\u66f4\u65b0\u6240\u6709\u53c2\u6570\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u539f\u5730\u6267\u884c\u8fd9\u4e9b\u66f4\u65b0\uff1b</p> <p>\u5176\u6b21\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u539f\u5730\u66f4\u65b0\uff0c\u5176\u4ed6\u5f15\u7528\u4ecd\u7136\u4f1a\u6307\u5411\u65e7\u7684\u5185\u5b58\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u67d0\u4e9b\u4ee3\u7801\u53ef\u80fd\u4f1a\u65e0\u610f\u4e2d\u5f15\u7528\u65e7\u7684\u53c2\u6570\u3002</p> <p>\u4f46\u540c\u65f6\u5e78\u8fd0\u7684\u662f\uff0c\u539f\u5730\u6267\u884c\u64cd\u4f5c\u8fd8\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u8868\u793a\u6cd5\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u5206\u914d\u7ed9\u5148\u524d\u5206\u914d\u7684\u6570\u7ec4\uff0c\u4f8b\u5982<code>Y[:] = &lt;expression&gt;</code>\u3002</p> <pre><code>Z = torch.zeros_like(Y)\nprint('id(Z):', id(Z))\nZ[:] = X + Y\nprint('id(Z):', id(Z))\n# \u4e24\u6b21\u6253\u5370\u7684\u7ed3\u679c\u76f8\u540c\n</code></pre> <p>\u5982\u679c\u5728\u540e\u7eed\u8ba1\u7b97\u4e2d\u6ca1\u6709\u91cd\u590d\u4f7f\u7528<code>X</code>\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>X[:] = X + Y</code>\u6216<code>X += Y</code>\u6765\u51cf\u5c11\u64cd\u4f5c\u7684\u5185\u5b58\u5f00\u9500\u3002</p> <pre><code>before = id(X)\nX += Y\nid(X) == before # True\n</code></pre> <p>\u5c06\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5b9a\u4e49\u7684\u5f20\u91cf\u8f6c\u6362\u4e3aNumPy\u5f20\u91cf\uff08<code>ndarray</code>\uff09\u5f88\u5bb9\u6613\uff0c\u53cd\u4e4b\u4e5f\u540c\u6837\u5bb9\u6613\u3002torch\u5f20\u91cf\u548cnumpy\u6570\u7ec4\u5c06\u5171\u4eab\u5b83\u4eec\u7684\u5e95\u5c42\u5185\u5b58\uff0c\u5c31\u5730\u64cd\u4f5c\u66f4\u6539\u4e00\u4e2a\u5f20\u91cf\u4e5f\u4f1a\u540c\u65f6\u66f4\u6539\u53e6\u4e00\u4e2a\u5f20\u91cf\u3002</p> <pre><code>A = X.numpy()\nB = torch.tensor(A)\ntype(A), type(B)\n# (numpy.ndarray, torch.Tensor)\na = torch.tensor([3.5])\ntype(a[0:]), a.item(), type(a.item()), type(float(a)), int(a)\n# (torch.Tensor, 3.5, float, float, 3)\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86.html#_3","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u4e3a\u4e86\u80fd\u7528\u6df1\u5ea6\u5b66\u4e60\u6765\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u5e38\u4ece\u9884\u5904\u7406\u539f\u59cb\u6570\u636e\u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece\u90a3\u4e9b\u51c6\u5907\u597d\u7684\u5f20\u91cf\u683c\u5f0f\u6570\u636e\u5f00\u59cb\u3002\u5728Python\u4e2d\u5e38\u7528\u7684\u6570\u636e\u5206\u6790\u5de5\u5177\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528<code>pandas</code>\u8f6f\u4ef6\u5305\u3002\u50cf\u5e9e\u5927\u7684Python\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u8bb8\u591a\u5176\u4ed6\u6269\u5c55\u5305\u4e00\u6837\uff0c<code>pandas</code>\u53ef\u4ee5\u4e0e\u5f20\u91cf\u517c\u5bb9\u3002</p> <pre><code>import os\n\nos.makedirs(os.path.join('..', 'data'), exist_ok=True)\ndata_file = os.path.join('..', 'data', 'house_tiny.csv')\nwith open(data_file, 'w') as f:\n    f.write('NumRooms,Alley,Price\\n')  # \u5217\u540d\n    f.write('NA,Pave,127500\\n')  # \u6bcf\u884c\u8868\u793a\u4e00\u4e2a\u6570\u636e\u6837\u672c\n    f.write('2,NA,106000\\n')\n    f.write('4,NA,178100\\n')\n    f.write('NA,NA,140000\\n')\n\nimport pandas as pd\ndata = pd.read_csv(data_file)\nprint(data)\n'''\n   NumRooms Alley   Price\n0       NaN  Pave  127500\n1       2.0   NaN  106000\n2       4.0   NaN  178100\n3       NaN   NaN  140000\n'''\n</code></pre> <p>\u6ce8\u610f\uff0c\u201cNaN\u201d\u9879\u4ee3\u8868\u7f3a\u5931\u503c\u3002\u4e3a\u4e86\u5904\u7406\u7f3a\u5931\u7684\u6570\u636e\uff0c\u5178\u578b\u7684\u65b9\u6cd5\u5305\u62ec\u63d2\u503c\u6cd5\u548c\u5220\u9664\u6cd5\uff0c*\u5176\u4e2d\u63d2\u503c\u6cd5\u7528\u4e00\u4e2a\u66ff\u4ee3\u503c\u5f25\u8865\u7f3a\u5931\u503c\uff0c\u800c\u5220\u9664\u6cd5\u5219\u76f4\u63a5\u5ffd\u7565\u7f3a\u5931\u503c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u8003\u8651\u63d2\u503c\u6cd5***\u3002</p> <p>\u901a\u8fc7\u4f4d\u7f6e\u7d22\u5f15<code>iloc</code>\uff0c\u6211\u4eec\u5c06<code>data</code>\u5206\u6210<code>inputs</code>\u548c<code>outputs</code>\uff0c\u5176\u4e2d\u524d\u8005\u4e3a<code>data</code>\u7684\u524d\u4e24\u5217\uff0c\u800c\u540e\u8005\u4e3a<code>data</code>\u7684\u6700\u540e\u4e00\u5217\u3002\u5bf9\u4e8e<code>inputs</code>\u4e2d\u7f3a\u5c11\u7684\u6570\u503c\uff0c\u6211\u4eec\u7528\u540c\u4e00\u5217\u7684\u5747\u503c\u66ff\u6362\u201cNaN\u201d\u9879\u3002</p> <pre><code>inputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2]\ninputs = inputs.fillna(inputs.mean())\nprint(inputs)\n'''\n   NumRooms Alley\n0       3.0  Pave\n1       2.0   NaN\n2       4.0   NaN\n3       3.0   NaN\n'''\n</code></pre> <p>\u5bf9\u4e8e<code>inputs</code>\u4e2d\u7684\u7c7b\u522b\u503c\u6216\u79bb\u6563\u503c\uff0c\u6211\u4eec\u5c06\u201cNaN\u201d\u89c6\u4e3a\u4e00\u4e2a\u7c7b\u522b\u3002\u7531\u4e8e\u201c\u5df7\u5b50\u7c7b\u578b\u201d\uff08\u201cAlley\u201d\uff09\u5217\u53ea\u63a5\u53d7\u4e24\u79cd\u7c7b\u578b\u7684\u7c7b\u522b\u503c\u201cPave\u201d\u548c\u201cNaN\u201d\uff0c<code>pandas</code>\u53ef\u4ee5\u81ea\u52a8\u5c06\u6b64\u5217\u8f6c\u6362\u4e3a\u4e24\u5217\u201cAlley_Pave\u201d\u548c\u201cAlley_nan\u201d\u3002\u5df7\u5b50\u7c7b\u578b\u4e3a\u201cPave\u201d\u7684\u884c\u4f1a\u5c06\u201cAlley_Pave\u201d\u7684\u503c\u8bbe\u7f6e\u4e3a1\uff0c\u201cAlley_nan\u201d\u7684\u503c\u8bbe\u7f6e\u4e3a0\u3002\u7f3a\u5c11\u5df7\u5b50\u7c7b\u578b\u7684\u884c\u4f1a\u5c06\u201cAlley_Pave\u201d\u548c\u201cAlley_nan\u201d\u5206\u522b\u8bbe\u7f6e\u4e3a0\u548c1\u3002</p> <pre><code>inputs = pd.get_dummies(inputs, dummy_na=True)\nprint(inputs)\n'''\n   NumRooms  Alley_Pave  Alley_nan\n0       3.0           1          0\n1       2.0           0          1\n2       4.0           0          1\n3       3.0           0          1\n'''\n</code></pre> <p>\u73b0\u5728<code>inputs</code>\u548c<code>outputs</code>\u4e2d\u7684\u6240\u6709\u6761\u76ee\u90fd\u662f\u6570\u503c\u7c7b\u578b\uff0c\u5b83\u4eec\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5f20\u91cf\u683c\u5f0f\u3002\u5f53\u6570\u636e\u91c7\u7528\u5f20\u91cf\u683c\u5f0f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 :numref:<code>sec_ndarray</code>\u4e2d\u5f15\u5165\u7684\u90a3\u4e9b\u5f20\u91cf\u51fd\u6570\u6765\u8fdb\u4e00\u6b65\u64cd\u4f5c\u3002</p> <pre><code>import torch\nX, y = torch.tensor(inputs.values), torch.tensor(outputs.values)\nX, y\n'''\nimport torch\n\nX, y = torch.tensor(inputs.values), torch.tensor(outputs.values)\nX, y\n'''\n</code></pre> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684get_dummies\u65b9\u6cd5\u53ea\u5bf9\u4e00\u5217\u6570\u636e\u4e2d\u8981\u4e48\u662f\u5b57\u7b26\u4e32\u8981\u4e48\u662fNaN\u8fd9\u79cd\u60c5\u51b5\u8d77\u4f5c\u7528\u3002\u800c\u4e14\u5b57\u7b26\u4e32\u4e00\u5171\u51e0\u7c7b\uff0c\u90a3\u4e48\u5c31\u4f1a\u81ea\u52a8\u5206\u51fa\u591a\u5c11\u5217\u3002\u4f8b\u5982\uff1a\u5047\u5982\u8bf4NumRooms\u91cc\u9762\u4fee\u6539\u6210\uff1aNaN yes no\u4e09\u79cd\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u4f1a\u5982\u4e0b\uff1a</p> <pre><code>'''\n   NumRooms_no  NumRooms_yes  NumRooms_nan  Alley_Pave  Alley_nan\n0            0             0             1           1          0\n1            0             1             0           0          1\n2            1             0             0           0          1\n3            0             0             1           0          1\n'''\n</code></pre>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC.html","title":"\u77e9\u9635\u8ba1\u7b97\u4e0e\u81ea\u52a8\u6c42\u5bfc","text":""},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC.html#_2","title":"\u77e9\u9635\u8ba1\u7b97\u2014\u2014\u77e9\u9635\u600e\u4e48\u6c42\u5bfc\uff1f","text":"<p>\u51fd\u6570\u77e5\u9053\u5982\u4f55\u6c42\u5bfc\uff0c\u800c\u4e14\u8fd8\u77e5\u9053\u94fe\u5f0f\u6cd5\u5219\u3002\u4f46\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u90fd\u662f\u77e9\u9635\u64cd\u4f5c\uff0c\u800c\u4e14\u540c\u6837\u9700\u8981\u4f7f\u7528\u68af\u5ea6\u8fdb\u884c\u53c2\u6570\u4f18\u5316\u3002\u90a3\u4e48\u5982\u4f55\u5bf9\u53c2\u6570\u6c42\u5bfc\u5462\uff1f\u5373\uff1a\u5982\u4f55\u5c06\u5bfc\u6570\u62d3\u5c55\u5230\u5411\u91cf\uff1f</p> <p>\u539f\u6765\u90fd\u662f\\(\\frac{\\partial y}{\\partial x}\\)\uff0c\u4f46\u662f\u73b0\u5728x y\u8fd9\u4e24\u4e2a\u53c2\u6570\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5\u662f\u53d8\u6210\u5411\u91cf\uff1a  \u7b2c\u4e00\u79cd\uff1a\\(\\frac{\\partial y}{\\partial \\vec x}\\)\u3002\u5982\u679cx\u5411\u91cf\u662f\u5217\u5411\u91cf\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u662f\u6a2a\u5411\u91cf\u3002\u4e0b\u9762\u56fe\u7247\u662f\u4e00\u4e2a\u4f8b\u5b50(\\(y=x_1^2+2x_2^2\\))\uff1a</p> <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u8fd8\u8f83\u597d\u7406\u89e3\uff0c\u4e3b\u8981\u662f\u5217\u5411\u91cf\u53d8\u4e3a\u884c\u5411\u91cf\u7684\u53d8\u5316\u4e00\u5f00\u59cb\u53ef\u80fd\u4e0d\u597d\u7406\u89e3\u3002\u6211\u662f\u8fd9\u4e48\u7406\u89e3\u7684\uff1a\u8fd9\u4e2a\u51fd\u6570y\u53ef\u4ee5\u6cf0\u52d2\u5c55\u5f00\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u5bfc\u6570\u00d7\uff08\u81ea\u53d8\u91cf-\u521d\u59cb\u503c\uff09\u8fd9\u4e00\u9879\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e58\u6cd5\u4e2d\u540e\u8005\u662f\u5217\u5411\u91cf\uff0c\u90a3\u4e48\u524d\u8005\u662f\u884c\u5411\u91cf\u7684\u8bdd\u5c31\u80fd\u6210\u529f\u5f97\u5230\u6807\u91cf\u7684\u7ed3\u679c\uff1b\u5f53\u7136\uff0c\u8fd9\u79cd\u7406\u89e3\u662f\u4e2a\u4eba\u4e14\u7c97\u7cd9\u7684\u3002\u540c\u6837\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u5bfc\u6570\u6709\u4e00\u4e9b\u7ecf\u5178\u7684\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u7b2c\u4e8c\u79cd\uff1a\\(\\frac{\\partial \\vec y}{\\partial x}\\)\u3002\u8fd9\u4e2d\u5c31\u6bd4\u8f83\u597d\u7406\u89e3\u4e86\uff0c\u56e0\u4e3a\u53ef\u4ee5\u628ay\u5411\u91cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u662f\u4e3a\u4e00\u4e2ax\u76f8\u5173\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u8ba4\u540c\u7684\u5f97\u5230\u7684\u7ed3\u679c\u662f\u5217\u5411\u91cf\uff08\u5982\u679cy\u662f\u5217\u5411\u91cf\u7684\u8bdd\uff09\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u6700\u540e\u662f\\(\\frac{\\partial \\vec y}{\\partial \\vec x}\\)\u3002\u5728\u524d\u9762\u4e24\u79cd\u7684\u4ecb\u7ecd\u4e4b\u540e\uff0c\u5c31\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u8ba4\u540c\u4e86\u3002y\u5411\u91cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u548cx\u5411\u91cf\u6709\u5173\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u5143\u7d20\u5f97\u5230\u7684\u5bfc\u6570\u662f\u4e00\u4e2a\u884c\u5411\u91cf\uff0c\u90a3\u4e48\u6574\u4e2ay\u5411\u91cf\u7684\u5bfc\u6570\u5c31\u662f\u4e00\u4e2a\u65b9\u5f62\u77e9\u9635\u4e86\u3002\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e00\u4e0b\u662f\u4e00\u4e9b\u8fd9\u7c7b\u5bfc\u6570\u7684\u6837\u4f8b\uff1a</p> <p> </p>"},{"location":"%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%B1%82%E5%AF%BC.html#_3","title":"\u81ea\u52a8\u6c42\u5bfc","text":"<p>x y\u90fd\u662f\u6807\u91cf\u7684\u60c5\u51b5\u4e2d\u7684\u94fe\u5f0f\u6cd5\u5219\u5df2\u7ecf\u5f88\u719f\u6089\u4e86\uff0c\u90a3\u4e48\u5411\u91cf\u4e2d\u4f9d\u7136\u6709\u8fd9\u79cd\u94fe\u5f0f\u6cd5\u5219\uff0c\u4f46\u662f\u5173\u952e\u5728\u4e8e\u8981\u628a\u5f62\u72b6\u7406\u6e05\u695a\u3002\u77e9\u9635\u6c42\u5bfc\u7684\u94fe\u5f0f\u6cd5\u5219\u7684\u51e0\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p>\u5927\u81f4\u4e86\u89e3\u4e86\u77e9\u9635\u7684\u94fe\u5f0f\u6cd5\u5219\u4e4b\u540e\uff0cpytorch\u4e2d\u662f\u5982\u4f55\u5b9e\u73b0\u81ea\u52a8\u6c42\u5bfc\u7684\u5462\uff1fpytorch\u4f1a\u628a\u4ee3\u7801\u5206\u89e3\u6210\u64cd\u4f5c\u5b50\uff0c\u5e76\u4e14\u628a\u8ba1\u7b97\u8fc7\u7a0b\u8868\u793a\u6210\u4e00\u4e2a\u65e0\u73af\u56fe\uff0c\u90a3\u4e48\u94fe\u5f0f\u6cd5\u5219\u5bf9\u76ee\u6807\u6c42\u5bfc\u7684\u65f6\u5019\u5c31\u80fd\u6309\u56fe\u7d22\u9aa5\u4e86\u3002\u94fe\u5f0f\u6cd5\u5219\u53ef\u4ee5\u5206\u4e3a\u6b63\u5411\u548c\u53cd\u5411\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5728\u53cd\u5411\u62ff\u5230\u8868\u8fbe\u5f0f\u4e4b\u540e\uff0c\u4ecd\u9700\u8981\u4ee3\u5165\u503c\u8fdb\u5165\uff0c\u8fd9\u4e2a\u503c\u54ea\u91cc\u6765\u5462\uff1f\u90a3\u4e48\u5c31\u662f\u4e00\u5f00\u59cb\u5728\u6784\u5efa\u5b8c\u56fe\u4e4b\u540e\u5c31\u53ef\u4ee5\u6267\u884c\u4e00\u904d\u56fe\uff0c\u628a\u4e2d\u95f4\u53c2\u6570\u7684\u7ed3\u679c\u90fd\u7b97\u51fa\u6765\u5e76\u4fdd\u5b58\uff0c\u7136\u540e\u53cd\u5411\u8ba1\u7b97\u5bfc\u6570\u7684\u8868\u8fbe\u5f0f\uff0c\u628a\u4e4b\u524d\u6b63\u5411\u6267\u884c\u5f97\u5230\u7684\u7ed3\u679c\u4ee3\u5165\u3002\u90a3\u4e48\u5728\u53cd\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5f88\u5927\u7684GPU\u5185\u5b58\u5f00\u9500\u5c31\u662f\u7528\u6765\u50a8\u5b58\u8fd9\u4e9b\u4e2d\u95f4\u7ed3\u679c\uff0c\u56e0\u4e3a\u5982\u679cn\u662f\u64cd\u4f5c\u5b50\u4e2a\u6570\uff0c\u90a3\u4e48\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u662f<code>O(n)</code>\u3002</p> <p></p> <p>\u90a3\u4e48pytorch\u4e2d\u662f\u5982\u4f55\u901a\u8fc7\u4ee3\u7801\u8fdb\u884c\u81ea\u52a8\u6c42\u5bfc\u7684\u5462\uff1f\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1aPytorch\u4e2d\u64cd\u4f5c\u65e0\u73af\u56fe\u7684\u6784\u9020\u662f\u9690\u5f0f\u7684\u3002\u5b9e\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a(\u5047\u8bbe\u6211\u4eec\u60f3\u5bf9\u51fd\u6570\\(y=2\\mathbf{x}^{\\top}\\mathbf{x}\\)\u5173\u4e8e\u5217\u5411\u91cf\\(\\mathbf{x}\\)\u6c42\u5bfc)</p> <pre><code>import torch\nx = torch.arange(4.0)\nx.requires_grad_(True)  # \u7b49\u4ef7\u4e8ex=torch.arange(4.0,requires_grad=True)\n# require\u4e86grad\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 x.grad\u6765\u8bbf\u95ee\u5b83\u7684\u68af\u5ea6\u503c\u4e86\ny = 2 * torch.dot(x, x)\ny.backward()\nx.grad\n# \u4e3a\u4ec0\u4e48\u662fx\u8fd9\u91cc\u83b7\u53d6\u68af\u5ea6\u503c\u5462\uff1f\u56e0\u4e3ax\u5f52\u6839\u5230\u5e95\u662f\u81ea\u53d8\u91cf\uff0c\u800c\u4e14\u6df1\u5ea6\u5b66\u4e60\u4e2d\u66f4\u65b0\u7684\u53c2\u6570\u662fx\n# tensor([ 0.,  4.,  8., 12.])\nx.grad == 4 * x\n# tensor([True, True, True, True])\n# \u73b0\u5728\u8ba1\u7b97\u53e6\u4e00\u4e2a\u51fd\u6570\n# \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPyTorch\u4f1a\u7d2f\u79ef\u68af\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u6e05\u9664\u4e4b\u524d\u7684\u503c\nx.grad.zero_()\ny = x.sum()\ny.backward()\nx.grad # tensor([1., 1., 1., 1.])\n</code></pre> <p>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPyTorch\u4f1a\u7d2f\u79ef\u68af\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u6e05\u9664\u4e4b\u524d\u7684\u503c</p> <p>\u540c\u6837\uff0cpytorch\u53ef\u4ee5\u624b\u52a8\u63a7\u5236\u54ea\u4e9b\u53c2\u52a0\u94fe\u5f0f\u6cd5\u5219\uff1a\u8fd9\u91cc\u53ef\u4ee5\u5206\u79bb<code>y</code>\u6765\u8fd4\u56de\u4e00\u4e2a\u65b0\u53d8\u91cf<code>u</code>\uff0c\u8be5\u53d8\u91cf\u4e0e<code>y</code>\u5177\u6709\u76f8\u540c\u7684\u503c\uff0c\u4f46\u4e22\u5f03\u8ba1\u7b97\u56fe\u4e2d\u5982\u4f55\u8ba1\u7b97<code>y</code>\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u68af\u5ea6\u4e0d\u4f1a\u5411\u540e\u6d41\u7ecf<code>u</code>\u5230<code>x</code>\u3002\u56e0\u6b64\uff0c\u4e0b\u9762\u7684\u53cd\u5411\u4f20\u64ad\u51fd\u6570\u8ba1\u7b97<code>z=u*x</code>\u5173\u4e8e<code>x</code>\u7684\u504f\u5bfc\u6570\uff0c\u540c\u65f6\u5c06<code>u</code>\u4f5c\u4e3a\u5e38\u6570\u5904\u7406\uff0c\u800c\u4e0d\u662f<code>z=x*x*x</code>\u5173\u4e8e<code>x</code>\u7684\u504f\u5bfc\u6570\u3002</p> <pre><code>x.grad.zero_()\ny = x * x\nu = y.detach()\nz = u * x\nz.sum().backward()\nx.grad == u # tensor([True, True, True, True])\n</code></pre> <p>\u4f7f\u7528\u81ea\u52a8\u5fae\u5206\u7684\u4e00\u4e2a\u597d\u5904\u662f\uff1a\u5373\u4f7f\u6784\u5efa\u51fd\u6570\u7684\u8ba1\u7b97\u56fe\u9700\u8981\u901a\u8fc7Python\u63a7\u5236\u6d41\uff08\u4f8b\u5982\uff0c\u6761\u4ef6\u3001\u5faa\u73af\u6216\u4efb\u610f\u51fd\u6570\u8c03\u7528\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u7684\u53d8\u91cf\u7684\u68af\u5ea6\u3002</p>"},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%E9%9D%A2.html","title":"Discrete Mathemetics","text":"<p>\u9996\u5148, \u5982\u679c\u4f60\u60f3\u9884\u4e60\u79bb\u6563\u6570\u5b66\u7684\u76f8\u5173\u5185\u5bb9, \u53ef\u4ee5\u8bbf\u95ee\u8bfe\u7a0b\u8bfe\u4ef6: https://github.com/bearthesilly/csrookie/tree/main/Discrete%20Mathematics/%E8%AF%BE%E4%BB%B6</p> <p>\u5176\u6b21, \u6709\u5173\u8bfe\u7a0b\u5185\u5bb9: \u4e0a\u534a\u5b66\u671f\u5b66\u4e60\u6570\u8bba\u76f8\u5173\u5185\u5bb9, \u4e0b\u534a\u5b66\u671f\u5b66\u4e60\u903b\u8f91\u4e0e\u56fe\u8bba. \u96be\u5ea6\u4e0a, \u6570\u8bba &gt; \u903b\u8f91 &gt; \u56fe\u8bba. \u8bfe\u7a0b\u5185\u5bb9\u4e0e\u79bb\u6563\u6570\u5b66\u5c0f\u9ed1\u4e66\u7684\u5185\u5bb9\u8bbe\u8ba1\u4e0d\u540c.</p> <p>\u6700\u540e, \u5982\u679c\u5e0c\u671b\u83b7\u5f97\u66f4\u591a\u5173\u4e8e\u5f80\u5e74\u4f5c\u4e1a, \u4e60\u9898\u8bfe\u8bb2\u4e49\u6216\u8005\u8bd5\u5377\u7684\u8d44\u6e90, \u53ef\u4ee5\u5728github\u4e0a\u9762\u641c\u7d22\u5173\u952e\u8bcd: <code>SI120</code> <code>shanghaitech</code></p> <p>\u5173\u4e8e\u8003\u8bd5: \u8003\u8bd5\u5f62\u5f0f\u5e76\u4e0d\u56fa\u5b9a, \u5185\u5bb9\u5e76\u4e0d\u56fa\u5b9a, 23\u5c4a\u671f\u4e2d\u8003\u8bd5\u5185\u5bb9\u4e3a\u6570\u8bba(\u4e0a\u534a\u5b66\u671f), \u671f\u672b\u8003\u8bd5\u4e3a\u903b\u8f91\u4e0e\u56fe\u8bba(\u4e0b\u534a\u5b66\u671f, \u4e14\u4e0d\u5305\u542b\u4e0a\u534a\u5b66\u671f\u5185\u5bb9). </p> <p>\u5173\u4e8echeatsheet: \u8c8c\u4f3ccheatsheet\u7684\u8981\u6c42\u4e0d\u662f\u56fa\u5b9a\u7684. 23\u5c4acheatsheet\u683c\u5f0f\u4e3a: \u4e00\u5f20A4\u7eb8\u7684\u6b63\u53cd\u4e24\u9762. </p>"},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec1/note.html","title":"Lec1","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec10/note.html","title":"Lec10","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec11/note.html","title":"Lec11","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec12/note.html","title":"Lec12","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec13%2614/note.html","title":"Lec13&14","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec15/note.html","title":"Lec15","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec2%263/note.html","title":"Lec2&3","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec4/note.html","title":"Lec4","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec5/note.html","title":"Lec5","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec6/note.html","title":"Lec6","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec7/note.html","title":"Lec7","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec8/note.html","title":"Lec8","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/Lec9/note.html","title":"Lec9","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8A%E5%8D%8A%E9%83%A8%E5%88%86/%E9%9A%8F%E7%AC%94%26%E5%A5%BD%E9%A2%98/note.html","title":"\u968f\u7b14&\u597d\u9898","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec1/note.html","title":"Lec1","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec10/note.html","title":"Lec10","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec11/note.html","title":"Lec11","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec12/note.html","title":"Lec12","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec13/note.html","title":"Lec13","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec14/note.html","title":"Lec14","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec2/note.html","title":"Lec2","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec3/note.html","title":"Lec3","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec4/note.html","title":"Lec4","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec5/note.html","title":"Lec5","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec6/note.html","title":"Lec6","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec7/note.html","title":"Lec7","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec8/note.html","title":"Lec8","text":""},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/%E4%B8%8B%E5%8D%8A%E9%83%A8%E5%88%86/Lec9/note.html","title":"Lec9","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%E9%9D%A2.html","title":"Linear Algebra","text":"<p>\u7ebf\u6027\u4ee3\u6570\u662fCS\u4e13\u4e1a\u6700\u91cd\u8981\u7684\u6570\u5b66\u57fa\u7840\u4e4b\u4e00. \u7ebf\u6027\u4ee3\u6570\u4e2d\u6709\u5f88\u591a\u7684\u6982\u5ff5, \u5982\u679c\u628a\u5b83\u4eec\u5f53\u4f5c\u5355\u72ec\u7684\u800c\u4e4b\u95f4\u6beb\u65e0\u5173\u8054\u7684\u677f\u5757, \u90a3\u4e48\u7406\u89e3\u8d77\u6765\u4f1a\u975e\u5e38\u75db\u82e6; \u800c\u4e8b\u5b9e\u4e0a, \u7ebf\u6027\u4ee3\u6570\u4e2d\u5f88\u591a\u7684\u6982\u5ff5\u4e0e\u5b9a\u7406\u7b49\u90fd\u662f\u878d\u4f1a\u8d2f\u901a\u7684. </p> <p>\u63a8\u8350\u7684\u8bfe\u672c\u6709\u5f88\u591a, \u65e0\u8bba\u662f\u56fd\u5185\u5916\u7684(\u53ef\u4ee5\u770b\u9009\u8bfe\u4fe1\u606f\u4e2d\u63a8\u8350\u7684\u4e66, \u6216\u8005\u662f\u95ee\u5b66\u957f\u5b66\u59d0), \u4f46\u662f\u591a\u7ffb\u4e66\u5de9\u56fa\u6982\u5ff5, \u6216\u8005\u8bf4\u591a\u590d\u4e60ppt\u5e76\u7406\u89e3\u77e5\u8bc6\u70b9, \u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684. </p> <p>\u4e0d\u540c\u8001\u5e08\u7684\u8bb2\u4e49, ppt, \u4f5c\u4e1a\u7b49\u90fd\u662f\u4e0d\u4e00\u6837\u7684. \u6211\u7684\u7ebf\u4ee3\u8bfe\u8001\u5e08\u662f\u859b\u535a\u537f\u6559\u6388, \u4f53\u9a8c\u975e\u5e38\u597d(\u4e0d\u6784\u6210\u9009\u62e9\u4efb\u8bfe\u8001\u5e08\u7684\u610f\u89c1, \u4ec5\u4e3a\u5ba2\u89c2\u8bc4\u4ef7), \u800c\u5bf9\u5e94\u5206\u4eab\u7684\u8bfe\u7a0bppt\u4e0e\u8bb2\u4e49\u8bf7\u8bbf\u95ee: </p> <p>csrookie/Linear Algebra at main \u00b7 bearthesilly/csrookie (github.com)</p> <p>\u5173\u4e8e\u9898\u76ee\u7ec3\u4e60: \u7ebf\u6027\u4ee3\u6570\u5237\u9898\u6ca1\u5fc5\u8981\u90a3\u4e48\u5938\u5f20, \u56e0\u4e3a\u5de9\u56fa\u5e76\u771f\u6b63\u7406\u89e3\u77e5\u8bc6\u70b9\u662f\u6700\u91cd\u8981\u7684. \u5173\u4e8e\u5237\u9898\u7684\u9009\u62e9, \u5409\u7c73\u591a\u7ef4\u5947\u7684\u7ebf\u6027\u4ee3\u6570\u66f4\u504f\u5411\u8003\u7814\u7684\u7ebf\u4ee3, \u5e76\u4e14\u77e5\u8bc6\u70b9\u7f3a\u5931\u8f83\u591a; \u4f46\u662f\u540c\u65f6, \u5409\u7c73\u591a\u7ef4\u5947\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5de9\u56fa\u57fa\u7840\u7684\u89e3\u9898\u6280\u80fd, \u5e76\u4e14\u53ef\u4ee5\u8865\u5145\u8bfe\u4e0a\u4e0d\u4f1a\u6d89\u53ca\u5230\u7684\u7ed3\u8bba\u4e0e\u77e5\u8bc6\u70b9(\u6709\u65f6\u751a\u81f3\u5bf9\u8003\u8bd5\u4e2d\u7684\u96be\u9898\u6709\u5947\u6548). \u4f46\u662fall in all, \u4f5c\u4e1a\u8981\u8ba4\u771f\u505a, \u4e60\u9898\u8bfe\u8981\u8ba4\u771f\u542c, \u5b83\u4eec\u7684\u4f5c\u7528\u5f88\u5927. </p>"},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E6%80%BB%E5%A4%8D%E4%B9%A0/note.html","title":"\u603b\u590d\u4e60","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E6%89%8B%E6%B3%95%E4%B8%8E%E5%A5%BD%E9%A2%98/note.html","title":"\u624b\u6cd5\u4e0e\u597d\u9898","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html","title":"\u603b\u590d\u4e60","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_2","title":"\u7b2c\u4e00\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_3","title":"\u7b2c\u4e8c&amp;\u4e09\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_4","title":"\u7b2c\u56db\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_5","title":"\u7b2c\u4e94\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_6","title":"\u7b2c\u516d\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_7","title":"\u7b2c\u4e03\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E7%AB%A0%E8%8A%82%E5%9B%9E%E9%A1%BE/note.html#_8","title":"\u7b2c\u516b\u7ae0","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E8%A1%8C%E5%88%97%E5%BC%8F%E4%B8%8E%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5/note.html","title":"\u884c\u5217\u5f0f\u4e0e\u4f34\u968f\u77e9\u9635","text":""},{"location":"%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/note.html","title":"\u8bfe\u5802\u7b14\u8bb0","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%27%E8%AF%81%E6%98%8E%27%E6%80%BB%E7%BB%93/note.html","title":"\u7b2c\u4e00\u7ae0\u8bc1\u660e\u603b\u7ed3","text":"<p>\u8fd9\u4e00\u90e8\u5206\u5728\u9ad8\u7b49\u6570\u5b66\u4e2d\u5176\u5b9e\u5e76\u4e0d\u662f\u7279\u522b\u91cd\u8981, \u8003\u8bd5\u4e2d\u4e5f\u4e0d\u4f1a\u6d89\u53ca\u5230\u8fd9\u4e00\u90e8\u5206\u504f\u6570\u5b66\u5206\u6790\u7684\u6570\u5b66\u8bc1\u660e. \u4f46\u662f\u4f9d\u7136, ''\u5355\u8c03\u6709\u754c\u63a8\u51fa\u6709\u786e\u754c''\u8fd9\u4e00\u6761\u7ed3\u8bba\u5f88\u91cd\u8981. </p> <p></p> <p></p>"},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E4%B8%80%E5%85%83%E7%A7%AF%E5%88%86%E5%AD%A6%E5%A5%BD%E9%A2%98/note.html","title":"\u4e00\u5143\u79ef\u5206\u5b66\u597d\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86%E4%B8%8E%E5%AE%9A%E7%A7%AF%E5%88%86%E6%A6%82%E5%BF%B5/note.html","title":"\u4e0d\u5b9a\u79ef\u5206\u4e0e\u5b9a\u79ef\u5206\u6982\u5ff5","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E4%B8%8D%E5%AE%9A%E7%A7%AF%E5%88%86%E4%B8%93%E9%A2%98/note.html","title":"\u4e0d\u5b9a\u79ef\u5206\u4e13\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%E9%9D%A2/note.html","title":"\u5199\u5728\u6700\u524d\u9762","text":"<p>\u5173\u4e8e\u9ad8\u7b49\u6570\u5b66\u7684\u5b66\u4e60\u5386\u7a0b:</p> <p>\u8bfe\u672c\u662f\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u7248\u672c\u7684\u5fae\u79ef\u5206: </p> <p></p> <p>\u8fd9\u672c\u8bfe\u672c\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e: \u4e0a\u518c\u7b2c\u4e00\u7ae0\u4e2d, \u52a0\u4e0a\u4e86\u4e00\u5b9a\u7684\u6570\u5b66\u5206\u6790\u7b2c\u4e00\u7ae0\u4e2d\u7684\u77e5\u8bc6\u70b9(\u4f46\u662f\u8003\u8bd5\u51e0\u4e4e\u4e0d\u6d89\u53ca(\u4f46\u662f\u4e0d\u6392\u9664quiz\u4f1a\u6d89\u53ca)); \u4e0b\u518c\u6709\u66f2\u7ebf\u79ef\u5206\u548c\u66f2\u9762\u79ef\u5206\u8fd9\u4e00\u7ae0\u8282, \u4ee5\u53ca\u7ea7\u6570\u91cc\u9762\u4ecb\u7ecd\u4e86Fourier\u7ea7\u6570(\u4f46\u662f\u5185\u5bb9\u5e76\u4e0d\u5982\u6570\u5206\u6df1\u5165). \u5982\u679c\u60f3\u5728\u5047\u671f\u95f4\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u9884\u4e60, \u53ef\u4ee5\u4e70\u5165or\u5728\u4e0a\u79d1\u5927\u56fe\u4e66\u9986\u91cc\u9762\u501f\u8fd9\u672c\u4e66(\u60f3\u501f\u7684\u8bdd, \u8981\u63d0\u65e9\u5165\u624b, \u56e0\u4e3a\u5f88\u591a\u4eba\u90fd\u4f1a\u5f88\u60f3\u501f). \u8fd9\u672c\u8bfe\u672c\u7684\u8bb2\u89e3\u8fd8\u662f\u8f83\u4e3a\u8be6\u7ec6\u7684. \u975e\u5e38\u96be\u53d7\u7684\u662f, \u8fd9\u672c\u4e66\u4f5c\u4e1a\u7b54\u6848\u6ca1\u6709\u8fc7\u7a0b, \u56e0\u6b64\u5c0f\u733f\u641c\u9898\u548c\u5927\u5b66\u641c\u9898\u9171\u53ef\u80fd\u662f\u4f60\u7684\u597d\u5e2e\u624b(\u81f3\u5c11\u5bf9\u6211\u6765\u8bf4\u662f\u5f88\u597d\u7684\u5e2e\u624b). </p> <p>(tip: \u5bf9\u4e8e\u6709\u5f88\u591a\u9053\u5c0f\u9898\u7684\u5927\u9898, \u4e0d\u8981\u62cd\u4e00\u6574\u4e2a\u5927\u9898, \u8bd5\u7740\u4e00\u9053\u4e00\u9053\u641c; \u641c\u9898\u6210\u529f\u7387: \u5c0f\u733f\u641c\u9898&gt;\u5927\u5b66\u641c\u9898\u9171)</p> <p>\u8003\u8bd5\u548c\u4f5c\u4e1a\u4e4b\u95f4\u8fd8\u662f\u6709\u4e00\u5c0f\u70b9\u5dee\u8ddd\u7684, \u5e73\u5747\u5206\u5927\u7ea6\u572860-75\u8303\u56f4\u5185, \u4e3b\u8981\u53d6\u51b3\u4e8e\u96be\u5ea6. \u5982\u679c\u4f5c\u4e1a\u8ba4\u771f\u5b8c\u6210, \u5e76\u4e14\u771f\u6b63\u7406\u89e3\u77e5\u8bc6\u70b9\u7684\u8bdd, \u53ef\u4ee5\u62ff\u5230\u6253\u5e95B, B+\u7684\u6210\u7ee9. \u4f46\u662f\u5982\u679c\u4f60\u60f3\u4eab\u53d7\u98de\u4e00\u6837\u5730\u611f\u89c9, \u5237\u9898\u5e76\u4e14\u603b\u7ed3\u662f\u6709\u5fc5\u8981\u7684.</p> <p>\u9996\u5148\u662f\u5927\u6982\u7387\u5e2e\u52a9\u4f60\u53d6\u5f97A-\u7684\u6559\u8f85: \u5409\u7c73\u591a\u7ef4\u5947\u7684\u5fae\u79ef\u5206. \u867d\u7136\u5409\u7c73\u591a\u7ef4\u5947\u7cfb\u5217\u91cc\u9762\u6709\u9ad8\u7b49\u6570\u5b66, \u4f46\u662f\u6211\u89c9\u5f97\u4e24\u672c\u53ef\u80fd\u5dee\u8ddd\u5e76\u4e0d\u4f1a\u5f88\u5927, \u867d\u7136\u9ad8\u7b49\u6570\u5b66\u90a3\u672c\u4e66\u6bd4\u5fae\u79ef\u5206\u539a. \u56e0\u6b64\u6211\u4f7f\u7528\u7684\u662f\u5409\u7c73\u591a\u7ef4\u5947\u5fae\u79ef\u5206</p> <p></p> <p></p> <p>\u7136\u540e\u5c31\u662f\u975e\u5e38\u5177\u6709\u6311\u6218\u6027, \u80fd\u591f\u5e2e\u52a9\u4f60\u62ff\u5230A\u4e43\u81f3A+\u7684\u6559\u8f85: \u5927\u5b66\u751f\u6570\u5b66\u7ade\u8d5b\u6559\u7a0b. \u8fd9\u672c\u4e66\u6839\u636e\u5927\u5b66\u751f\u6570\u5b66\u7ade\u8d5b(\u975e\u6570\u5b66\u7c7b)\u5927\u7eb2\u7f16\u5199, \u96be\u5ea6\u5341\u5206\u7ba1\u9971. \u4f46\u662f\u4f7f\u7528\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u53d6\u820d: \u8d85\u7eb2\u7684, \u8fc7\u7a0b\u5f88\u96be\u770b\u61c2\u7684(\u6ca1\u9519, \u4e66\u4e0a\u6709\u4e00\u4e9b\u6b65\u9aa4\u770b\u90fd\u770b\u4e0d\u61c2), \u5343\u4e07\u4e0d\u80fd\u8fc7\u5206\u7ea0\u7ed3, \u4e00\u5b9a\u8981\u6ce8\u610f\u9ad8\u6548\u5730\u6c72\u53d6\u7cbe\u534e. \u53e6\u5916\u8fd9\u672c\u4e66\u7b54\u6848\u6ca1\u6709\u8fc7\u7a0b, \u56e0\u6b64\u63a8\u8350B\u7ad9\u5927\u5b66\u4e0a\u7684\u89c6\u9891:</p> <p>https://www.bilibili.com/video/BV1ui4y127W4</p> <p></p> <p>\u5728\u8003\u8bd5\u524d, \u5982\u679c\u60f3\u505a\u51e0\u5957\u5377\u5b50\u8003\u5bdf\u4e0b\u81ea\u5df1\u7684\u719f\u7ec3\u7a0b\u5ea6, \u6216\u8005\u8bf4\u7ec3\u624b, \u90a3\u4e48\u5efa\u8bae\u53ef\u4ee5\u5230\u5938\u514b\u5b66\u4e60\u4e0a\u9762\u5927\u4f19\u5408\u8d44\u51d1\u4e2a\u4f1a\u5458, \u9009\u62e9\u81ea\u5df1\u7684\u5b66\u6821\u4e3a\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66(\u868c)\u5e76\u641c\u7d22\u9ad8\u6570\u8003\u8bd5\u8bd5\u5377. \u5f53\u7136, \u5f88\u591a\u7684\u65f6\u5019\u662f\u6ca1\u6709\u7b54\u6848\u7684, \u6240\u4ee5\u8bf4\u540c\u5b66\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u8ba8\u8bba.</p> <p>\u6700\u540e, \u603b\u7ed3\u975e\u5e38\u91cd\u8981. \u5237\u4e86\u5f88\u591a\u7684\u9898, \u89c1\u4e86\u5f88\u591a\u7684\u63d0\u9192, \u81ea\u5df1\u4e5f\u6216\u591a\u6216\u5c11\u79ef\u7d2f\u4e86\u4e00\u4e9b\"\u8d77\u624b\u5f0f\"\u6216\u8005\u662f\u7ecf\u9a8c, \u90a3\u4e48\u4e00\u5b9a\u8981\u603b\u7ed3\u6210\u7b14\u8bb0. </p>"},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%8F%8D%E5%B8%B8%E7%A7%AF%E5%88%86%E6%95%9B%E6%95%A3%E6%80%A7/note.html","title":"\u53cd\u5e38\u79ef\u5206\u655b\u6563\u6027","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%A4%B9%E9%80%BC%E5%87%86%E5%88%99%E6%B1%82%E6%9E%81%E9%99%90/note.html","title":"\u5939\u903c\u51c6\u5219\u6c42\u6781\u9650","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%AE%9A%E7%A7%AF%E5%88%86%E5%AE%9A%E4%B9%89%E6%B1%82%E6%9E%81%E9%99%90/note.html","title":"\u5b9a\u79ef\u5206\u5b9a\u4e49\u6c42\u6781\u9650","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%AF%BC%E6%95%B0%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E4%B8%93%E9%A2%98/note.html","title":"\u5bfc\u6570\u5b9a\u4e49\u4e0e\u6982\u5ff5\u4e13\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B/note.html","title":"\u5fae\u5206\u65b9\u7a0b","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E6%89%8B%E6%B3%95%26painpoint/note.html","title":"\u624b\u6cd5&painpoint","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E7%AF%87/note.html","title":"\u671f\u672b\u590d\u4e60\u7bc7","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD%E9%9A%8F%E7%AC%94/note.html","title":"\u6781\u9650\u4e0e\u8fde\u7eed\u968f\u7b14","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E6%9E%81%E9%99%90%E4%B8%AD%E7%9A%84%E6%A6%82%E5%BF%B5%E9%A2%98/note.html","title":"\u6781\u9650\u4e2d\u7684\u6982\u5ff5\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E6%B1%82%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%90/note.html","title":"\u6c42\u51fd\u6570\u6781\u9650","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E7%A7%AF%E5%88%86%E4%B8%8D%E7%AD%89%E5%BC%8F/note.html","title":"\u79ef\u5206\u4e0d\u7b49\u5f0f","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E7%A7%AF%E5%88%86%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/note.html","title":"\u79ef\u5206\u53ca\u5176\u5e94\u7528","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E7%A7%AF%E5%88%86%E7%9A%84%E5%BA%94%E7%94%A8%26%E5%87%BD%E6%95%B0%E5%BD%A2%E6%80%81/note.html","title":"\u79ef\u5206\u7684\u5e94\u7528&\u51fd\u6570\u5f62\u6001","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E7%A7%AF%E5%88%86%E9%80%92%E6%8E%A8%E5%85%AC%E5%BC%8F/note.html","title":"\u79ef\u5206\u9012\u63a8\u516c\u5f0f","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E7%AC%AC%E4%BA%8C%E4%B8%89%E5%9B%9B%E7%AB%A0%E5%A5%BD%E9%A2%98/note.html","title":"\u7b2c\u4e8c&\u4e09&\u56db\u7ae0\u597d\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E8%BF%9E%E7%BB%AD%E6%80%A7%20%E9%97%B4%E6%96%AD%E7%82%B9%20%E6%B8%90%E8%BF%91%E7%BA%BF/note.html","title":"\u8fde\u7eed\u6027 \u95f4\u65ad\u70b9 \u6e10\u8fd1\u7ebf","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8A/%E9%80%92%E6%8E%A8%E6%95%B0%E5%88%97%E7%9A%84%E6%9E%81%E9%99%90/note.html","title":"\u9012\u63a8\u6570\u5217\u7684\u6781\u9650","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86/note.html","title":"\u4e8c\u91cd\u79ef\u5206","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86/note.html","title":"\u4e8c\u91cd\u79ef\u5206\u4e2d\u503c\u5b9a\u7406","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E5%A5%BD%E9%A2%98/note.html","title":"\u4e8c\u91cd\u79ef\u5206\u597d\u9898","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%81%8F%E5%AF%BC%E6%95%B0%E8%AE%A1%E7%AE%97/note.html","title":"\u504f\u5bfc\u6570\u8ba1\u7b97","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%82%85%E9%87%8C%E5%8F%B6%E7%BA%A7%E6%95%B0/note.html","title":"\u5085\u91cc\u53f6\u7ea7\u6570","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%85%A8%E5%BE%AE%E5%88%86%E7%9A%84%E5%88%A4%E5%AE%9A%E4%B8%8E%E8%AE%A1%E7%AE%97/note.html","title":"\u5168\u5fae\u5206\u7684\u5224\u5b9a\u4e0e\u8ba1\u7b97","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%90%91%E9%87%8F%E4%BB%A3%E6%95%B0%E4%B8%8E%E7%A9%BA%E9%97%B4%E6%80%BB%E7%BB%93/note.html","title":"\u7b2c\u4e03\u7ae0 \u5411\u91cf\u7a7a\u95f4\u4e0e\u7a7a\u95f4\u89e3\u6790\u51e0\u4f55","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0/note.html","title":"\u591a\u5143\u51fd\u6570","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%A4%9A%E5%85%83%E5%87%BD%E6%95%B0%E6%9E%81%E5%80%BC/note.html","title":"\u591a\u5143\u51fd\u6570\u6781\u503c","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%B7%B2%E7%9F%A5%E5%81%8F%E5%AF%BC%E5%8F%8D%E6%B1%82%E5%87%BD%E6%95%B0/note.html","title":"\u5df2\u77e5\u504f\u5bfc\u53cd\u6c42\u51fd\u6570","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E5%B9%82%E5%87%BD%E6%95%B0/note.html","title":"\u5e42\u51fd\u6570","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0%E5%92%8C%E5%88%A4%E5%88%AB%E6%B3%95/note.html","title":"\u65e0\u7a77\u7ea7\u6570\u548c\u5224\u522b\u6cd5","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0%E9%80%89%E6%8B%A9%E9%A2%98%E4%B8%8E%E5%8F%8D%E4%BE%8B/note.html","title":"\u65e0\u7a77\u7ea7\u6570\u9009\u62e9\u9898\u4e0e\u53cd\u4f8b","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%9B%B2%E7%BA%BF%E4%B8%8E%E6%9B%B2%E9%9D%A2%E7%A7%AF%E5%88%86/note.html","title":"\u66f2\u7ebf\u4e0e\u66f2\u9762\u79ef\u5206","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%9B%B2%E7%BA%BF%E4%B8%8E%E6%9B%B2%E9%9D%A2%E7%A7%AF%E5%88%86%E6%80%BB%E7%BB%93/note.html","title":"\u66f2\u7ebf\u4e0e\u66f2\u9762\u79ef\u5206\u603b\u7ed3","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%9B%B2%E7%BA%BF%E4%B8%8E%E6%9B%B2%E9%9D%A2%E7%A7%AF%E5%88%86%E8%8D%9F%E8%90%83/note.html","title":"\u66f2\u7ebf\u4e0e\u66f2\u9762\u79ef\u5206\u835f\u8403","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E6%9C%9F%E4%B8%AD%E6%80%BB%E7%BB%93/note.html","title":"\u671f\u4e2d\u603b\u7ed3","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E9%9A%90%E5%87%BD%E6%95%B0%E5%AD%98%E5%9C%A8%E5%AE%9A%E7%90%86/note.html","title":"\u9690\u51fd\u6570\u5b58\u5728\u5b9a\u7406","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E9%AB%98%E6%95%B0%E5%A5%BD%E9%A2%98%E4%B8%8A/note.html","title":"\u9ad8\u6570\u597d\u9898\u4e0a","text":""},{"location":"%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E4%B8%8B/%E9%AB%98%E6%95%B0%E5%A5%BD%E9%A2%98%E4%B8%8B/note.html","title":"\u9ad8\u6570\u597d\u9898\u4e0b","text":""}]}